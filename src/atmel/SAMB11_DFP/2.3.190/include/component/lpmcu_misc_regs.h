/**
 * \file
 *
 * \brief Component description for LPMCU_MISC_REGS
 *
 * Copyright (c) 2017 Atmel Corporation, a wholly owned subsidiary of Microchip Technology Inc.
 *
 * \license_start
 *
 * \page License
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * \license_stop
 *
 */

/* file generated from device description version  */
#ifndef _SAMB11_LPMCU_MISC_REGS_COMPONENT_H_
#define _SAMB11_LPMCU_MISC_REGS_COMPONENT_H_
#define _SAMB11_LPMCU_MISC_REGS_COMPONENT_         /**< \deprecated  Backward compatibility for ASF */

/** \addtogroup SAMB_SAMB11 LPMCU Misc Registers
 *  @{
 */
/* ========================================================================== */
/**  SOFTWARE API DEFINITION FOR LPMCU_MISC_REGS */
/* ========================================================================== */
#ifndef COMPONENT_TYPEDEF_STYLE
  #define COMPONENT_TYPEDEF_STYLE 'N'  /**< Defines default style of typedefs for the component header files ('R' = RFO, 'N' = NTO)*/
#endif

#define LPMCU_MISC_REGS_LMR1234                    /**< (LPMCU_MISC_REGS) Module ID */
#define REV_LPMCU_MISC_REGS 0x100                  /**< (LPMCU_MISC_REGS) Module revision */

/* -------- LPMCU_MISC_REGS_LPMCU_CHIP_ID : (LPMCU_MISC_REGS Offset: 0x00) (R/ 32) The hard-coded ID for the chip. -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REV_ID:24;                 /**< bit:  0..23  Chip ID                                  */
    uint32_t :8;                        /**< bit: 24..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_CHIP_ID_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_OFFSET (0x00)                                        /**<  (LPMCU_MISC_REGS_LPMCU_CHIP_ID) The hard-coded ID for the chip.  Offset */
#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_RESETVALUE _U_(0x2000B0)                                 /**<  (LPMCU_MISC_REGS_LPMCU_CHIP_ID) The hard-coded ID for the chip.  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_CHIP_ID) Chip ID Position */
#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID_Msk (_U_(0xFFFFFF) << LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CHIP_ID) Chip ID Mask */
#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID(value) (LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CHIP_ID_REV_ID_Pos))
#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_MASK  _U_(0xFFFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_LPMCU_CHIP_ID) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_CHIP_ID_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_CHIP_ID_Msk   _U_(0xFFFFFF)                                  /**< (LPMCU_MISC_REGS_LPMCU_CHIP_ID) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0 : (LPMCU_MISC_REGS Offset: 0x04) (R/W 32) Active Low Global Reset -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t GLOBAL_RSTN:1;             /**< bit:      0  LPMCU Global Reset (self setting)        */
    uint32_t CPU_RSTN:1;                /**< bit:      1  LPMCU CPU Reset                          */
    uint32_t SPI_FLASH0_SYS_RSTN:1;     /**< bit:      2  SPI_FLASH0 Sys Reset                     */
    uint32_t SPI_FLASH0_RSTN:1;         /**< bit:      3  SPI_FLASH0 Interface Reset               */
    uint32_t SPI0_CORE_RSTN:1;          /**< bit:      4  SPI0 Core Reset                          */
    uint32_t SPI0_IF_RSTN:1;            /**< bit:      5  SPI0 Interface Reset                     */
    uint32_t SPI1_CORE_RESETN:1;        /**< bit:      6  SPI1 Core Reset                          */
    uint32_t SPI1_IF_RSTN:1;            /**< bit:      7  SPI1 Interface Reset                     */
    uint32_t I2C0_CORE_RSTN:1;          /**< bit:      8  I2C0 Core Reset                          */
    uint32_t I2C0_IF_RSTN:1;            /**< bit:      9  I2C0 Interface Reset                     */
    uint32_t GPIO_RSTN:1;               /**< bit:     10  GPIO Controller Reset                    */
    uint32_t TIMER0_RSTN:1;             /**< bit:     11  TIMER0 Reset                             */
    uint32_t UART0_CORE_RSTN:1;         /**< bit:     12  UART0 Core Reset                         */
    uint32_t UART0_IF_RSTN:1;           /**< bit:     13  UART0 Interface Reset                    */
    uint32_t UART1_CORE_RSTN:1;         /**< bit:     14  UART1 Core Reset                         */
    uint32_t UART1_IF_RSTN:1;           /**< bit:     15  UART1 Interface Reset                    */
    uint32_t WDT0_RSTN:1;               /**< bit:     16  WDT0 Reset                               */
    uint32_t WDT1_RSTN:1;               /**< bit:     17  WDT1 Reset                               */
    uint32_t IRQ_CTRLR_CORE_RSTN:1;     /**< bit:     18  NVIC Reset                               */
    uint32_t MBIST_RSTN:1;              /**< bit:     19  MBIST Logic Reset                        */
    uint32_t CALIB_RSTN:1;              /**< bit:     20  Low Power Clock Calibration Core Reset   */
    uint32_t CALIB_XBAR_IF_RSTN:1;      /**< bit:     21  Low Power Clock Calibration APB Reset    */
    uint32_t DBUG_RSTN:1;               /**< bit:     22  LPMCU Debug Reset                        */
    uint32_t ARM_FREE_CLK_RSTN:1;       /**< bit:     23  Free Running ARM Clock Reset             */
    uint32_t ARM_PRESETN_RSTN:1;        /**< bit:     24  ARM APB Reset                            */
    uint32_t QUAD_DEC0_RSTN:1;          /**< bit:     25  QUAD_DEC0 Reset                          */
    uint32_t QUAD_DEC1_RSTN:1;          /**< bit:     26  QUAD_DEC1 Reset                          */
    uint32_t QUAD_DEC2_RSTN:1;          /**< bit:     27  QUAD_DEC2 Reset                          */
    uint32_t PWM0_RSTN:1;               /**< bit:     28  PWM0 Reset                               */
    uint32_t PWM1_RSTN:1;               /**< bit:     29  PWM1 Reset                               */
    uint32_t PWM2_RSTN:1;               /**< bit:     30  PWM2 Reset                               */
    uint32_t PWM3_RSTN:1;               /**< bit:     31  PWM3 Reset                               */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_OFFSET (0x04)                                        /**<  (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Active Low Global Reset  Offset */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_RESETVALUE _U_(0xFFFFFFFD)                               /**<  (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Active Low Global Reset  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU Global Reset (self setting) Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU Global Reset (self setting) Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GLOBAL_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN_Pos 1                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU CPU Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU CPU Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI_FLASH0 Sys Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI_FLASH0 Sys Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI_FLASH0 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI_FLASH0 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI0 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI0 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN_Pos 5                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI0 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI0 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN_Pos 6                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI1 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI1 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN_Pos 7                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI1 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) SPI1 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) I2C0 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) I2C0 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN_Pos 9                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) I2C0 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) I2C0 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN_Pos 10                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) GPIO Controller Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) GPIO Controller Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN_Pos 11                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) TIMER0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) TIMER0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN_Pos 12                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART0 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART0 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN_Pos 13                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART0 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART0 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN_Pos 14                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART1 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART1 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN_Pos 15                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART1 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) UART1 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN_Pos 16                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) WDT0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) WDT0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN_Pos 17                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) WDT1 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) WDT1 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN_Pos 18                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) NVIC Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) NVIC Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN_Pos 19                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) MBIST Logic Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) MBIST Logic Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN_Pos 20                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Low Power Clock Calibration Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Low Power Clock Calibration Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN_Pos 21                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Low Power Clock Calibration APB Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Low Power Clock Calibration APB Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN_Pos 22                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU Debug Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) LPMCU Debug Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN_Pos 23                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Free Running ARM Clock Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Free Running ARM Clock Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN_Pos 24                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) ARM APB Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) ARM APB Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN_Pos 25                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN_Pos 26                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC1 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC1 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN_Pos 27                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC2 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) QUAD_DEC2 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN_Pos 28                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN_Pos 29                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM1 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM1 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN_Pos 30                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM2 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM2 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN_Pos 31                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM3 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) PWM3 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1 : (LPMCU_MISC_REGS Offset: 0x08) (R/W 16) Active Low Global Reset -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t DUALTIMER0_RSTN:1;         /**< bit:      0  DUALTIMER0 Reset                         */
    uint16_t I2C1_CORE_RSTN:1;          /**< bit:      1  I2C1 Core Reset                          */
    uint16_t I2C1_IF_RSTN:1;            /**< bit:      2  I2C1 Interface Reset                     */
    uint16_t SECURITY_SHA_CORE_RSTN:1;  /**< bit:      3  Security SHA Core Reset                  */
    uint16_t SECURITY_SHA_AHB_RSTN:1;   /**< bit:      4  Security SHA AHB Interface Reset         */
    uint16_t SECURITY_AES_CORE_RSTN:1;  /**< bit:      5  Security AES Core Reset                  */
    uint16_t SECURITY_AES_AHB_RSTN:1;   /**< bit:      6  Security AES AHB Interface Reset         */
    uint16_t SPI0_SCK_CLK_RSTN:1;       /**< bit:      7  SPI0 SCK Clock Reset                     */
    uint16_t SPI1_SCK_CLK_RSTN:1;       /**< bit:      8  SPI1 SCK Clock Reset                     */
    uint16_t SPI0_SCK_PHASE_INT_CLK_RSTN:1;  /**< bit:      9  SPI0 SCK Phase Clock Reset               */
    uint16_t SPI1_SCK_PHASE_INT_CLK_RSTN:1;  /**< bit:     10  SPI1 SCK Phase Clock Reset               */
    uint16_t PROV_DMA_CTRL0_RSTN:1;     /**< bit:     11  PROV_DMA_CTRL0 Reset                     */
    uint16_t :4;                        /**< bit: 12..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_OFFSET (0x08)                                        /**<  (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Active Low Global Reset  Offset */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_RESETVALUE _U_(0xFFF)                                    /**<  (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Active Low Global Reset  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) DUALTIMER0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) DUALTIMER0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN_Pos 1                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) I2C1 Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) I2C1 Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) I2C1 Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) I2C1 Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security SHA Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security SHA Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security SHA AHB Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security SHA AHB Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN_Pos 5                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security AES Core Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security AES Core Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN_Pos 6                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security AES AHB Interface Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Security AES AHB Interface Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN_Pos 7                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI0 SCK Clock Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI0 SCK Clock Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI1 SCK Clock Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI1 SCK Clock Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN_Pos 9                                              /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI0 SCK Phase Clock Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI0 SCK Phase Clock Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN_Pos 10                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI1 SCK Phase Clock Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) SPI1 SCK Phase Clock Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN_Pos 11                                             /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) PROV_DMA_CTRL0 Reset Position */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) PROV_DMA_CTRL0 Reset Mask */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_MASK _U_(0xFFF)                                     /**< \deprecated (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_Msk _U_(0xFFF)                                     /**< (LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0 : (LPMCU_MISC_REGS Offset: 0x0c) (R/W 32) LPMCU Clock Enables -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t :1;                        /**< bit:      0  Reserved */
    uint32_t SPI_FLASH0_CLK_EN:1;       /**< bit:      1  SPI_FLASH0 Clock Enable                  */
    uint32_t SPI0_CORE_CLK_EN:1;        /**< bit:      2  SPI0 Core Clock Enable                   */
    uint32_t SPI1_CORE_CLK_EN:1;        /**< bit:      3  SPI1 Core Clock Enable                   */
    uint32_t I2C0_CORE_CLK_EN:1;        /**< bit:      4  I2C0 Core Clock Enable                   */
    uint32_t DUALTIMER0_CLK_EN:1;       /**< bit:      5  DUALTIMER0 Clock Enable                  */
    uint32_t :1;                        /**< bit:      6  Reserved */
    uint32_t GPIO_CLK_EN:1;             /**< bit:      7  GPIO Controller Clock Enable             */
    uint32_t TIMER0_CLK_EN:1;           /**< bit:      8  TIMER0 Clock Enable                      */
    uint32_t :2;                        /**< bit:  9..10  Reserved */
    uint32_t WDT0_CLK_EN:1;             /**< bit:     11  WDT0 Clock Enable                        */
    uint32_t WDT1_CLK_EN:1;             /**< bit:     12  WDT1 Clock Enable                        */
    uint32_t UART0_CORE_CLK_EN:1;       /**< bit:     13  UART0 Core Clock Enable                  */
    uint32_t UART0_IF_CLK_EN:1;         /**< bit:     14  UART0 Interface Clock Enable             */
    uint32_t UART1_CORE_CLK_EN:1;       /**< bit:     15  UART1 Core Clock Enable                  */
    uint32_t UART1_IF_CLK_EN:1;         /**< bit:     16  UART1 Interface Clock Enable             */
    uint32_t IRQ_CTRLR_CORE_CLK_EN:1;   /**< bit:     17  NVIC Clock Enable                        */
    uint32_t IDRAM_1_GL_MEM_CLK_EN:1;   /**< bit:     18  IDRAM1 Glue Logic Clock Enable           */
    uint32_t IDRAM_2_GL_MEM_CLK_EN:1;   /**< bit:     19  IDRAM2 Glue Logic Clock Enable           */
    uint32_t ROM_MEM_CLK_EN:1;          /**< bit:     20  ROM Clock Enable                         */
    uint32_t CALIB_XBAR_IF_CLK_EN:1;    /**< bit:     21  Low Power Clock Calibration Interface Clock Enable */
    uint32_t AON_WRAPPER_CLK_EN:1;      /**< bit:     22  AON Wrapper Clock Enable                 */
    uint32_t ARM_PCLK_EN:1;             /**< bit:     23  ARM PCLK Clock Enable (override)         */
    uint32_t ARM_PCLKG_EN:1;            /**< bit:     24  ARM Gated PCLK Clock Enable (override)   */
    uint32_t BLE_MEM_CLK_EN:1;          /**< bit:     25  ARM BLE 8K Retention Memory Clock Enable */
    uint32_t QUAD_DEC0_CLK_EN:1;        /**< bit:     26  QUAD_DEC0 Clock Enable                   */
    uint32_t QUAD_DEC1_CLK_EN:1;        /**< bit:     27  QUAD_DEC1 Clock Enable                   */
    uint32_t QUAD_DEC2_CLK_EN:1;        /**< bit:     28  QUAD_DEC2 Clock Enable                   */
    uint32_t I2C1_CORE_CLK_EN:1;        /**< bit:     29  I2C1 Core Clock Enable                   */
    uint32_t CALIB_CLK_EN:1;            /**< bit:     30  Low Power Clock Calibration Core Clock Enable */
    uint32_t :1;                        /**< bit:     31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_OFFSET (0x0C)                                        /**<  (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) LPMCU Clock Enables  Offset */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_RESETVALUE _U_(0x627FF9BE)                               /**<  (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) LPMCU Clock Enables  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI_FLASH0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI_FLASH0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI0 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI0 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI1 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) SPI1 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) I2C0 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) I2C0 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN_Pos 5                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) DUALTIMER0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) DUALTIMER0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN_Pos 7                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) GPIO Controller Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) GPIO Controller Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) TIMER0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) TIMER0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN_Pos 11                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) WDT0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) WDT0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN_Pos 12                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) WDT1 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) WDT1 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN_Pos 13                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART0 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART0 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN_Pos 14                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART0 Interface Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART0 Interface Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN_Pos 15                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART1 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART1 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN_Pos 16                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART1 Interface Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) UART1 Interface Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN_Pos 17                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) NVIC Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) NVIC Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN_Pos 18                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) IDRAM1 Glue Logic Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) IDRAM1 Glue Logic Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN_Pos 19                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) IDRAM2 Glue Logic Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) IDRAM2 Glue Logic Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN_Pos 20                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ROM Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ROM Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN_Pos 21                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Low Power Clock Calibration Interface Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Low Power Clock Calibration Interface Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN_Pos 22                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) AON Wrapper Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) AON Wrapper Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN_Pos 23                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM PCLK Clock Enable (override) Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM PCLK Clock Enable (override) Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN_Pos 24                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM Gated PCLK Clock Enable (override) Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM Gated PCLK Clock Enable (override) Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN_Pos 25                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM BLE 8K Retention Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) ARM BLE 8K Retention Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN_Pos 26                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN_Pos 27                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC1 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC1 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN_Pos 28                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC2 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) QUAD_DEC2 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN_Pos 29                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) I2C1 Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) I2C1 Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN_Pos 30                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Low Power Clock Calibration Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Low Power Clock Calibration Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_MASK _U_(0x7FFFF9BE)                                /**< \deprecated (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_Msk _U_(0x7FFFF9BE)                                /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1 : (LPMCU_MISC_REGS Offset: 0x10) (R/W 32) LPMCU Clock Enables -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t EFUSE0_CLK_EN:1;           /**< bit:      0  EFUSE0 Clock Enable                      */
    uint32_t EFUSE1_CLK_EN:1;           /**< bit:      1  EFUSE1 Clock Enable                      */
    uint32_t EFUSE2_CLK_EN:1;           /**< bit:      2  EFUSE2 Clock Enable                      */
    uint32_t EFUSE3_CLK_EN:1;           /**< bit:      3  EFUSE3 Clock Enable                      */
    uint32_t EFUSE4_CLK_EN:1;           /**< bit:      4  EFUSE4 Clock Enable                      */
    uint32_t EFUSE5_CLK_EN:1;           /**< bit:      5  EFUSE5 Clock Enable                      */
    uint32_t PWM0_CLK_EN:1;             /**< bit:      6  PWM0 Clock Enable                        */
    uint32_t PWM1_CLK_EN:1;             /**< bit:      7  PWM1 Clock Enable                        */
    uint32_t PWM2_CLK_EN:1;             /**< bit:      8  PWM2 Clock Enable                        */
    uint32_t PWM3_CLK_EN:1;             /**< bit:      9  PWM3 Clock Enable                        */
    uint32_t SENS_ADC_CLK_EN:1;         /**< bit:     10  PMU Sensor ADC Clock Enable              */
    uint32_t SPI0_SCK_PHASE_INT_CLK_EN:1;  /**< bit:     11  SPI0 SCK Phase Internal Clock Enable     */
    uint32_t SPI1_SCK_PHASE_INT_CLK_EN:1;  /**< bit:     12  SPI1 SCK Phase Internal Clock Enable     */
    uint32_t GPIO_GCLK_EN:1;            /**< bit:     13  GPIO Controller Clock Enable             */
    uint32_t TIMER0_PGCLK_EN:1;         /**< bit:     14  TIMER0 Gated APB Clock                   */
    uint32_t SHA_CORE_CLK_EN:1;         /**< bit:     15  SHA Core Clock Enable                    */
    uint32_t SHA_AHB_CLK_EN:1;          /**< bit:     16  SHA AHB Clock Enable                     */
    uint32_t AES_CORE_CLK_EN:1;         /**< bit:     17  AES Core Clock Enable                    */
    uint32_t AES_AHB_CLK_EN:1;          /**< bit:     18  AES AHB Clock Enable                     */
    uint32_t IDRAM_1_0_MEM_CLK_EN:1;    /**< bit:     19  IDRAM1_0 Memory Clock Enable             */
    uint32_t IDRAM_1_1_MEM_CLK_EN:1;    /**< bit:     20  IDRAM1_1 Memory Clock Enable             */
    uint32_t IDRAM_1_2_MEM_CLK_EN:1;    /**< bit:     21  IDRAM1_2 Memory Clock Enable             */
    uint32_t IDRAM_2_0_MEM_CLK_EN:1;    /**< bit:     22  IDRAM2_0 Memory Clock Enable             */
    uint32_t IDRAM_2_1_MEM_CLK_EN:1;    /**< bit:     23  IDRAM2_1 Memory Clock Enable             */
    uint32_t :8;                        /**< bit: 24..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_OFFSET (0x10)                                        /**<  (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) LPMCU Clock Enables  Offset */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_RESETVALUE _U_(0xF8783F)                                 /**<  (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) LPMCU Clock Enables  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE1 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE1 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE2 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE2 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE3 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE3 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE4 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE4 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN_Pos 5                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE5 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) EFUSE5 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN_Pos 6                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM0 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM0 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN_Pos 7                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM1 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM1 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM2 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM2 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN_Pos 9                                              /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM3 Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PWM3 Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN_Pos 10                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PMU Sensor ADC Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) PMU Sensor ADC Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN_Pos 11                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SPI0 SCK Phase Internal Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SPI0 SCK Phase Internal Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN_Pos 12                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SPI1 SCK Phase Internal Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SPI1 SCK Phase Internal Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN_Pos 13                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) GPIO Controller Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) GPIO Controller Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN_Pos 14                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) TIMER0 Gated APB Clock Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) TIMER0 Gated APB Clock Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN_Pos 15                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SHA Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SHA Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN_Pos 16                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SHA AHB Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) SHA AHB Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN_Pos 17                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) AES Core Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) AES Core Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN_Pos 18                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) AES AHB Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) AES AHB Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN_Pos 19                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_0 Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_0 Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN_Pos 20                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_1 Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_1 Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN_Pos 21                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_2 Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM1_2 Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN_Pos 22                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM2_0 Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM2_0 Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN_Pos 23                                             /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM2_1 Memory Clock Enable Position */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) IDRAM2_1 Memory Clock Enable Mask */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_MASK _U_(0xFFFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_Msk _U_(0xFFFFFF)                                  /**< (LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_BTMCU_CTRL : (LPMCU_MISC_REGS Offset: 0x14) (R/W 8) Miscellaneous BLE control -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  RXTX_SEQ_CLK_EN:1;         /**< bit:      0  BLE RXTX Sequencer Clock Enable          */
    uint8_t  AHB_CLK_EN:1;              /**< bit:      1  BLE HAB Clock Enable                     */
    uint8_t  PERIPH_REGS_CLK_EN:1;      /**< bit:      2  BLE Periph Regs Clock Enable             */
    uint8_t  :5;                        /**< bit:   3..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_BTMCU_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_BTMCU_CTRL_OFFSET   (0x14)                                        /**<  (LPMCU_MISC_REGS_BTMCU_CTRL) Miscellaneous BLE control  Offset */
#define LPMCU_MISC_REGS_BTMCU_CTRL_RESETVALUE _U_(0x07)                                     /**<  (LPMCU_MISC_REGS_BTMCU_CTRL) Miscellaneous BLE control  Reset Value */

#define LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE RXTX Sequencer Clock Enable Position */
#define LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE RXTX Sequencer Clock Enable Mask */
#define LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE HAB Clock Enable Position */
#define LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE HAB Clock Enable Mask */
#define LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE Periph Regs Clock Enable Position */
#define LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN_Pos)  /**< (LPMCU_MISC_REGS_BTMCU_CTRL) BLE Periph Regs Clock Enable Mask */
#define LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN_Msk instead */
#define LPMCU_MISC_REGS_BTMCU_CTRL_MASK     _U_(0x07)                                      /**< \deprecated (LPMCU_MISC_REGS_BTMCU_CTRL) Register MASK  (Use LPMCU_MISC_REGS_BTMCU_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_BTMCU_CTRL_Msk      _U_(0x07)                                      /**< (LPMCU_MISC_REGS_BTMCU_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_CTRL : (LPMCU_MISC_REGS Offset: 0x18) (R/W 32) Miscellaneous LPMCU control -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LPMCU_CLK_SEL:2;           /**< bit:   0..1  LPMCU Clock Frequency Selection          */
    uint32_t USE_BT26M_CLK:1;           /**< bit:      2  Use XO as ARM clock (must also set use_arm_lp_clk) */
    uint32_t USE_ARM_LP_CLK:1;          /**< bit:      3  Use either LP 2MHz clock or XO as ARM clock */
    uint32_t DUALTIMER0_CLK_SEL:2;      /**< bit:   4..5  DUALTIMER0 Clock Frequency Select        */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t BYPASS_WIC:1;              /**< bit:      8  Bypass Wakeup Interrupt Controller       */
    uint32_t USE_XO_FOR_LP_CAL_CLK:1;   /**< bit:      9  Use the XO for Low Power Clock Calibration */
    uint32_t :2;                        /**< bit: 10..11  Reserved */
    uint32_t SPI_FLASH0_CLKSEL:2;       /**< bit: 12..13  SPI_FLASH0 Clock Frequency Select        */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t SPI_FLASH0_DIV_CLK_SEL:1;  /**< bit:     16  Use Generated Divided Clock for SPI_FLASH0 */
    uint32_t :2;                        /**< bit: 17..18  Reserved */
    uint32_t IDRAM_1_MEM_IQ_BYP_EN:1;   /**< bit:     19  Mux Control to select between FECE and standard IDRAM memory. Default to IDRAM ARM Memory */
    uint32_t SPI_FLASH0_CLOCK_DIV_VALUE:8;  /**< bit: 20..27  Integer divider value. 26mhz clock will be divided by this register value  */
    uint32_t INVERT_UART0_IF_CLK:1;     /**< bit:     28  Inverts UART0 interface clock            */
    uint32_t INVERT_UART1_IF_CLK:1;     /**< bit:     29  Inverts UART1 interface clock            */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_CTRL_OFFSET   (0x18)                                        /**<  (LPMCU_MISC_REGS_LPMCU_CTRL) Miscellaneous LPMCU control  Offset */
#define LPMCU_MISC_REGS_LPMCU_CTRL_RESETVALUE _U_(0x303100)                                 /**<  (LPMCU_MISC_REGS_LPMCU_CTRL) Miscellaneous LPMCU control  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) LPMCU Clock Frequency Selection Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) LPMCU Clock Frequency Selection Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL(value) (LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos))
#define   LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_0 (LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_0_Val << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_1 (LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_1_Val << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_2 (LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_2_Val << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_3 (LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_3_Val << LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use XO as ARM clock (must also set use_arm_lp_clk) Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use XO as ARM clock (must also set use_arm_lp_clk) Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use either LP 2MHz clock or XO as ARM clock Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use either LP 2MHz clock or XO as ARM clock Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) DUALTIMER0 Clock Frequency Select Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) DUALTIMER0 Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL(value) (LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos))
#define   LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_0 (LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_0_Val << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_1 (LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_1_Val << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_2 (LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_2_Val << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_3 (LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_3_Val << LPMCU_MISC_REGS_LPMCU_CTRL_DUALTIMER0_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Bypass Wakeup Interrupt Controller Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Bypass Wakeup Interrupt Controller Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_BYPASS_WIC_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK_Pos 9                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use the XO for Low Power Clock Calibration Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use the XO for Low Power Clock Calibration Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_USE_XO_FOR_LP_CAL_CLK_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos 12                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) SPI_FLASH0 Clock Frequency Select Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) SPI_FLASH0 Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL(value) (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos))
#define   LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_0 (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_0_Val << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_1 (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_1_Val << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_2 (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_2_Val << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_3 (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_3_Val << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLKSEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL_Pos 16                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use Generated Divided Clock for SPI_FLASH0 Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Use Generated Divided Clock for SPI_FLASH0 Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_DIV_CLK_SEL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN_Pos 19                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Mux Control to select between FECE and standard IDRAM memory. Default to IDRAM ARM Memory Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Mux Control to select between FECE and standard IDRAM memory. Default to IDRAM ARM Memory Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_IDRAM_1_MEM_IQ_BYP_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE_Pos 20                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Integer divider value. 26mhz clock will be divided by this register value  Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE_Msk (_U_(0xFF) << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Integer divider value. 26mhz clock will be divided by this register value  Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE(value) (LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CTRL_SPI_FLASH0_CLOCK_DIV_VALUE_Pos))
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK_Pos 28                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Inverts UART0 interface clock   Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Inverts UART0 interface clock   Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART0_IF_CLK_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK_Pos 29                                             /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Inverts UART1 interface clock   Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Inverts UART1 interface clock   Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_CTRL_INVERT_UART1_IF_CLK_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_CTRL_MASK     _U_(0x3FF9333F)                                /**< \deprecated (LPMCU_MISC_REGS_LPMCU_CTRL) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_Msk      _U_(0x3FF9333F)                                /**< (LPMCU_MISC_REGS_LPMCU_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_MBIST : (LPMCU_MISC_REGS Offset: 0x1c) (R/W 8) MBIST designation -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  MBIST_MODE:1;              /**< bit:      0  Puts the chip in MBIST mode              */
    uint8_t  :7;                        /**< bit:   1..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_MBIST_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_MBIST_OFFSET  (0x1C)                                        /**<  (LPMCU_MISC_REGS_LPMCU_MBIST) MBIST designation  Offset */
#define LPMCU_MISC_REGS_LPMCU_MBIST_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_LPMCU_MBIST) MBIST designation  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_MBIST) Puts the chip in MBIST mode Position */
#define LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_MBIST) Puts the chip in MBIST mode Mask */
#define LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_MBIST_MBIST_MODE_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_MBIST_MASK    _U_(0x01)                                      /**< \deprecated (LPMCU_MISC_REGS_LPMCU_MBIST) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_MBIST_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_MBIST_Msk     _U_(0x01)                                      /**< (LPMCU_MISC_REGS_LPMCU_MBIST) Register Mask  */


/* -------- LPMCU_MISC_REGS_BLE_CTRL : (LPMCU_MISC_REGS Offset: 0x20) (R/W 8) BLE Control -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  BLE_WAKEUP_REQ:1;          /**< bit:      0  BLE Wakeup Request (to BLE Sleep Timer)  */
    uint8_t  BLE_WAKEUP_REQ_CORE:1;     /**< bit:      1  BLE Wakeup Request (to BLE Core)         */
    uint8_t  :6;                        /**< bit:   2..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_BLE_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_BLE_CTRL_OFFSET     (0x20)                                        /**<  (LPMCU_MISC_REGS_BLE_CTRL) BLE Control  Offset */
#define LPMCU_MISC_REGS_BLE_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_BLE_CTRL) BLE Control  Reset Value */

#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_Pos 0                                              /**< (LPMCU_MISC_REGS_BLE_CTRL) BLE Wakeup Request (to BLE Sleep Timer) Position */
#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_Pos)  /**< (LPMCU_MISC_REGS_BLE_CTRL) BLE Wakeup Request (to BLE Sleep Timer) Mask */
#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_Msk instead */
#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE_Pos 1                                              /**< (LPMCU_MISC_REGS_BLE_CTRL) BLE Wakeup Request (to BLE Core) Position */
#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE_Msk (_U_(0x1) << LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE_Pos)  /**< (LPMCU_MISC_REGS_BLE_CTRL) BLE Wakeup Request (to BLE Core) Mask */
#define LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BLE_CTRL_BLE_WAKEUP_REQ_CORE_Msk instead */
#define LPMCU_MISC_REGS_BLE_CTRL_MASK       _U_(0x03)                                      /**< \deprecated (LPMCU_MISC_REGS_BLE_CTRL) Register MASK  (Use LPMCU_MISC_REGS_BLE_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_BLE_CTRL_Msk        _U_(0x03)                                      /**< (LPMCU_MISC_REGS_BLE_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_MBIST_CTRL : (LPMCU_MISC_REGS Offset: 0x24) (R/W 32) MBIST Control Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MBIST_CONTROL:19;          /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MBIST_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MBIST_CTRL_OFFSET   (0x24)                                        /**<  (LPMCU_MISC_REGS_MBIST_CTRL) MBIST Control Register  Offset */
#define LPMCU_MISC_REGS_MBIST_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_MBIST_CTRL) MBIST Control Register  Reset Value */

#define LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL_Pos 0                                              /**< (LPMCU_MISC_REGS_MBIST_CTRL)  Position */
#define LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL_Pos)  /**< (LPMCU_MISC_REGS_MBIST_CTRL)  Mask */
#define LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL(value) (LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL_Msk & ((value) << LPMCU_MISC_REGS_MBIST_CTRL_MBIST_CONTROL_Pos))
#define LPMCU_MISC_REGS_MBIST_CTRL_MASK     _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_MBIST_CTRL) Register MASK  (Use LPMCU_MISC_REGS_MBIST_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_MBIST_CTRL_Msk      _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_MBIST_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_MBIST_STATUS : (LPMCU_MISC_REGS Offset: 0x28) (R/ 32) MBIST Status Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MBIST_BUS:21;              /**< bit:  0..20  Observation of MBIST results             */
    uint32_t MBIST_BLOCK_SEL:5;         /**< bit: 21..25  Observation of block field of MBIST control */
    uint32_t MBIST_WRAPPER_SEL:5;       /**< bit: 26..30  Observation of wrapper field of MBIST control */
    uint32_t MBIST_MODE:1;              /**< bit:     31  Observation of mbist_mode signal         */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MBIST_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MBIST_STATUS_OFFSET (0x28)                                        /**<  (LPMCU_MISC_REGS_MBIST_STATUS) MBIST Status Register  Offset */
#define LPMCU_MISC_REGS_MBIST_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_MBIST_STATUS) MBIST Status Register  Reset Value */

#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS_Pos 0                                              /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of MBIST results Position */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS_Msk (_U_(0x1FFFFF) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS_Pos)  /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of MBIST results Mask */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS(value) (LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS_Msk & ((value) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BUS_Pos))
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL_Pos 21                                             /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of block field of MBIST control Position */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL_Msk (_U_(0x1F) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of block field of MBIST control Mask */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL(value) (LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_BLOCK_SEL_Pos))
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL_Pos 26                                             /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of wrapper field of MBIST control Position */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL_Msk (_U_(0x1F) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL_Pos)  /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of wrapper field of MBIST control Mask */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL(value) (LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL_Msk & ((value) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_WRAPPER_SEL_Pos))
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE_Pos 31                                             /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of mbist_mode signal Position */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_STATUS) Observation of mbist_mode signal Mask */
#define LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_STATUS_MBIST_MODE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_STATUS_MASK   _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_MBIST_STATUS) Register MASK  (Use LPMCU_MISC_REGS_MBIST_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_MBIST_STATUS_Msk    _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_MBIST_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL : (LPMCU_MISC_REGS Offset: 0x2c) (R/W 16) Enables MBIST algorithms -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t MARCH2_ENABLE:1;           /**< bit:      0  Enables the march2 algorithm             */
    uint16_t UNIQUE_ENABLE:1;           /**< bit:      1  Enables the unique address algorithm     */
    uint16_t CHECKERBOARD_ENABLE:1;     /**< bit:      2  Enables the checkerboard algorithm       */
    uint16_t DIAGONAL_ENABLE:1;         /**< bit:      3  Enables the diagonal algorithm           */
    uint16_t ADDRDEC0_ENABLE:1;         /**< bit:      4  Enables the address decoder bg0 algorithm */
    uint16_t ADDRDEC1_ENABLE:1;         /**< bit:      5  Enables the address decoder bg1 algorithm */
    uint16_t COLMARCH1_ENABLE:1;        /**< bit:      6  Enables the col_march1 algorithm         */
    uint16_t FILLWITH0_ENABLE:1;        /**< bit:      7  Enables the fillwith0 algorithm          */
    uint16_t RET_READ_ZEROS_ENABLE:1;   /**< bit:      8  Enables the ret read zeros algorithm     */
    uint16_t RET_WRITE_ZEROS_ENABLE:1;  /**< bit:      9  Enables the ret write zeros algorithm    */
    uint16_t RET_READ_ONES_ENABLE:1;    /**< bit:     10  Enables the ret read ones algorithm      */
    uint16_t RET_WRITE_ONES_ENABLE:1;   /**< bit:     11  Enables the ret write ones algorithm     */
    uint16_t RET_READ_CB_ENABLE:1;      /**< bit:     12  Enables the ret read checkerboard algorithm */
    uint16_t RET_WRITE_CB_ENABLE:1;     /**< bit:     13  Enables the ret write checkerboard algorithm */
    uint16_t RET_READ_INVCB_ENABLE:1;   /**< bit:     14  Enables the ret read inv checkerboard algorithm */
    uint16_t RET_WRITE_INVCB_ENABLE:1;  /**< bit:     15  Enables the ret write inv checkerboard algorithm */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_OFFSET (0x2C)                                        /**<  (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables MBIST algorithms  Offset */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RESETVALUE _U_(0x4F)                                     /**<  (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables MBIST algorithms  Reset Value */

#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the march2 algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the march2 algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MARCH2_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE_Pos 1                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the unique address algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the unique address algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_UNIQUE_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE_Pos 2                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the checkerboard algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the checkerboard algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_CHECKERBOARD_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE_Pos 3                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the diagonal algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the diagonal algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_DIAGONAL_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE_Pos 4                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the address decoder bg0 algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the address decoder bg0 algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC0_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE_Pos 5                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the address decoder bg1 algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the address decoder bg1 algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_ADDRDEC1_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE_Pos 6                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the col_march1 algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the col_march1 algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_COLMARCH1_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE_Pos 7                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the fillwith0 algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the fillwith0 algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_FILLWITH0_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE_Pos 8                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read zeros algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read zeros algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ZEROS_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE_Pos 9                                              /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write zeros algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write zeros algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ZEROS_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE_Pos 10                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read ones algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read ones algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_ONES_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE_Pos 11                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write ones algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write ones algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_ONES_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE_Pos 12                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read checkerboard algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read checkerboard algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_CB_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE_Pos 13                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write checkerboard algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write checkerboard algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_CB_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE_Pos 14                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read inv checkerboard algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret read inv checkerboard algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_READ_INVCB_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE_Pos 15                                             /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write inv checkerboard algorithm Position */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Enables the ret write inv checkerboard algorithm Mask */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_RET_WRITE_INVCB_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_MASK _U_(0xFFFF)                                    /**< \deprecated (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Register MASK  (Use LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_Msk instead)  */
#define LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_Msk _U_(0xFFFF)                                    /**< (LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL) Register Mask  */


/* -------- LPMCU_MISC_REGS_MBIST_BG : (LPMCU_MISC_REGS Offset: 0x30) (R/W 32) MBIST Background for MARCH2 algorithm (bits 31:0) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MBIST_BG:32;               /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MBIST_BG_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MBIST_BG_OFFSET     (0x30)                                        /**<  (LPMCU_MISC_REGS_MBIST_BG) MBIST Background for MARCH2 algorithm (bits 31:0)  Offset */
#define LPMCU_MISC_REGS_MBIST_BG_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_MBIST_BG) MBIST Background for MARCH2 algorithm (bits 31:0)  Reset Value */

#define LPMCU_MISC_REGS_MBIST_BG_MBIST_BG_Pos 0                                              /**< (LPMCU_MISC_REGS_MBIST_BG)  Position */
#define LPMCU_MISC_REGS_MBIST_BG_MBIST_BG_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_MBIST_BG_MBIST_BG_Pos)  /**< (LPMCU_MISC_REGS_MBIST_BG)  Mask */
#define LPMCU_MISC_REGS_MBIST_BG_MBIST_BG(value) (LPMCU_MISC_REGS_MBIST_BG_MBIST_BG_Msk & ((value) << LPMCU_MISC_REGS_MBIST_BG_MBIST_BG_Pos))
#define LPMCU_MISC_REGS_MBIST_BG_MASK       _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_MBIST_BG) Register MASK  (Use LPMCU_MISC_REGS_MBIST_BG_Msk instead)  */
#define LPMCU_MISC_REGS_MBIST_BG_Msk        _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_MBIST_BG) Register Mask  */


/* -------- LPMCU_MISC_REGS_TEST_BUS_CTRL : (LPMCU_MISC_REGS Offset: 0x38) (R/W 8) Controls all of the test bus functionality -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  TEST_ENABLE_ARM:1;         /**< bit:      0  Selects periph test bus                  */
    uint8_t  :7;                        /**< bit:   1..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_TEST_BUS_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_TEST_BUS_CTRL_OFFSET (0x38)                                        /**<  (LPMCU_MISC_REGS_TEST_BUS_CTRL) Controls all of the test bus functionality  Offset */
#define LPMCU_MISC_REGS_TEST_BUS_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_TEST_BUS_CTRL) Controls all of the test bus functionality  Reset Value */

#define LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM_Pos 0                                              /**< (LPMCU_MISC_REGS_TEST_BUS_CTRL) Selects periph test bus Position */
#define LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM_Msk (_U_(0x1) << LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM_Pos)  /**< (LPMCU_MISC_REGS_TEST_BUS_CTRL) Selects periph test bus Mask */
#define LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_TEST_BUS_CTRL_TEST_ENABLE_ARM_Msk instead */
#define LPMCU_MISC_REGS_TEST_BUS_CTRL_MASK  _U_(0x01)                                      /**< \deprecated (LPMCU_MISC_REGS_TEST_BUS_CTRL) Register MASK  (Use LPMCU_MISC_REGS_TEST_BUS_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_TEST_BUS_CTRL_Msk   _U_(0x01)                                      /**< (LPMCU_MISC_REGS_TEST_BUS_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_WP3_MISR_DATAOUT : (LPMCU_MISC_REGS Offset: 0x3c) (R/ 32) ROM MBIST Signature -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t WP3_MISR_DATAOUT:32;       /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_WP3_MISR_DATAOUT_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_OFFSET (0x3C)                                        /**<  (LPMCU_MISC_REGS_WP3_MISR_DATAOUT) ROM MBIST Signature  Offset */
#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_WP3_MISR_DATAOUT) ROM MBIST Signature  Reset Value */

#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT_Pos 0                                              /**< (LPMCU_MISC_REGS_WP3_MISR_DATAOUT)  Position */
#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT_Pos)  /**< (LPMCU_MISC_REGS_WP3_MISR_DATAOUT)  Mask */
#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT(value) (LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT_Msk & ((value) << LPMCU_MISC_REGS_WP3_MISR_DATAOUT_WP3_MISR_DATAOUT_Pos))
#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_WP3_MISR_DATAOUT) Register MASK  (Use LPMCU_MISC_REGS_WP3_MISR_DATAOUT_Msk instead)  */
#define LPMCU_MISC_REGS_WP3_MISR_DATAOUT_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_WP3_MISR_DATAOUT) Register Mask  */


/* -------- LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL : (LPMCU_MISC_REGS Offset: 0x40) (R/W 32) Invert Output Control -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_0:1;               /**< bit:      0  Invert the output for lp_gpio_0          */
    uint32_t LP_GPIO_1:1;               /**< bit:      1  Invert the output for lp_gpio_1          */
    uint32_t LP_GPIO_2:1;               /**< bit:      2  Invert the output for lp_gpio_2          */
    uint32_t LP_GPIO_3:1;               /**< bit:      3  Invert the output for lp_gpio_3          */
    uint32_t LP_GPIO_4:1;               /**< bit:      4  Invert the output for lp_gpio_4          */
    uint32_t LP_GPIO_5:1;               /**< bit:      5  Invert the output for lp_gpio_5          */
    uint32_t LP_GPIO_6:1;               /**< bit:      6  Invert the output for lp_gpio_6          */
    uint32_t LP_GPIO_7:1;               /**< bit:      7  Invert the output for lp_gpio_7          */
    uint32_t LP_GPIO_8:1;               /**< bit:      8  Invert the output for lp_gpio_8          */
    uint32_t LP_GPIO_9:1;               /**< bit:      9  Invert the output for lp_gpio_9          */
    uint32_t LP_GPIO_10:1;              /**< bit:     10  Invert the output for lp_gpio_10         */
    uint32_t LP_GPIO_11:1;              /**< bit:     11  Invert the output for lp_gpio_11         */
    uint32_t LP_GPIO_12:1;              /**< bit:     12  Invert the output for lp_gpio_12         */
    uint32_t LP_GPIO_13:1;              /**< bit:     13  Invert the output for lp_gpio_13         */
    uint32_t LP_GPIO_14:1;              /**< bit:     14  Invert the output for lp_gpio_14         */
    uint32_t LP_GPIO_15:1;              /**< bit:     15  Invert the output for lp_gpio_15         */
    uint32_t LP_GPIO_16:1;              /**< bit:     16  Invert the output for lp_gpio_16         */
    uint32_t LP_GPIO_17:1;              /**< bit:     17  Invert the output for lp_gpio_17         */
    uint32_t LP_GPIO_18:1;              /**< bit:     18  Invert the output for lp_gpio_18         */
    uint32_t LP_GPIO_19:1;              /**< bit:     19  Invert the output for lp_gpio_19         */
    uint32_t LP_GPIO_20:1;              /**< bit:     20  Invert the output for lp_gpio_20         */
    uint32_t LP_GPIO_21:1;              /**< bit:     21  Invert the output for lp_gpio_21         */
    uint32_t LP_GPIO_22:1;              /**< bit:     22  Invert the output for lp_gpio_22         */
    uint32_t LP_GPIO_23:1;              /**< bit:     23  Invert the output for lp_gpio_23         */
    uint32_t :3;                        /**< bit: 24..26  Reserved */
    uint32_t LP_SIP_0:1;                /**< bit:     27  Invert the output for lp_sip_0           */
    uint32_t LP_SIP_1:1;                /**< bit:     28  Invert the output for lp_sip_1           */
    uint32_t LP_SIP_2:1;                /**< bit:     29  Invert the output for lp_sip_2           */
    uint32_t LP_SIP_3:1;                /**< bit:     30  Invert the output for lp_sip_3           */
    uint32_t LP_SIP_4:1;                /**< bit:     31  Invert the output for lp_sip_4           */
  } bit;                                /**< Structure used for bit  access */
  struct {
    uint32_t LP_GPIO_:24;               /**< bit:  0..23  Invert the output for lp_gpio_x          */
    uint32_t :3;                        /**< bit: 24..26  Reserved */
    uint32_t LP_SIP_:5;                 /**< bit: 27..31  Invert the output for lp_sip_4           */
  } vec;                                /**< Structure used for vec  access  */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_OFFSET (0x40)                                        /**<  (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert Output Control  Offset */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert Output Control  Reset Value */

#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0_Pos 0                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_0 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_0 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_0_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1_Pos 1                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_1 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_1 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_1_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2_Pos 2                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_2 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_2 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_2_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3_Pos 3                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_3 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_3 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_3_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4_Pos 4                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_4 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_4 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_4_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5_Pos 5                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_5 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_5 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_5_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6_Pos 6                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_6 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_6 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_6_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7_Pos 7                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_7 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_7 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_7_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8_Pos 8                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_8 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_8 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_8_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9_Pos 9                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_9 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_9 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_9_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10_Pos 10                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_10 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_10 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_10_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11_Pos 11                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_11 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_11 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_11_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12_Pos 12                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_12 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_12 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_12_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13_Pos 13                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_13 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_13 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_13_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14_Pos 14                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_14 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_14 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_14_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15_Pos 15                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_15 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_15 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_15_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16_Pos 16                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_16 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_16 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_16_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17_Pos 17                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_17 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_17 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_17_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18_Pos 18                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_18 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_18 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_18_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19_Pos 19                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_19 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_19 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_19_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20_Pos 20                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_20 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_20 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_20_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21_Pos 21                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_21 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_21 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_21_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22_Pos 22                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_22 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_22 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_22_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23_Pos 23                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_23 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_gpio_23 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_23_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0_Pos 27                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_0 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_0 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_0_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1_Pos 28                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_1 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_1 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_1_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2_Pos 29                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_2 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_2 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_2_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3_Pos 30                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_3 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_3 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_3_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4_Pos 31                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_4 Position */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4_Msk (_U_(0x1) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4_Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Invert the output for lp_sip_4 Mask */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4 LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_4_Msk instead */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_MASK _U_(0xF8FFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Register MASK  (Use LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_Msk _U_(0xF8FFFFFF)                                /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL) Register Mask  */

#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO__Pos 0                                              /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL Position) Invert the output for lp_gpio_x */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO__Msk (_U_(0xFFFFFF) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO__Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL Mask) LP_GPIO_ */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO_(value) (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO__Msk & ((value) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_GPIO__Pos))  
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP__Pos 27                                             /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL Position) Invert the output for lp_sip_4 */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP__Msk (_U_(0x1F) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP__Pos)  /**< (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL Mask) LP_SIP_ */
#define LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP_(value) (LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP__Msk & ((value) << LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_LP_SIP__Pos))  

/* -------- LPMCU_MISC_REGS_PINMUX_SEL_0 : (LPMCU_MISC_REGS Offset: 0x44) (R/W 32) Pinmux select for LP_GPIO_0, LP_GPIO_1, LP_GPIO_2, LP_GPIO_3, LP_GPIO_4, LP_GPIO_5, LP_GPIO_6, LP_GPIO_7 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_0_SEL:3;           /**< bit:   0..2  Pinmux select for LP_GPIO_0              */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t LP_GPIO_1_SEL:3;           /**< bit:   4..6  Pinmux select for LP_GPIO_1              */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t LP_GPIO_2_SEL:3;           /**< bit:  8..10  Pinmux select for LP_GPIO_2              */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t LP_GPIO_3_SEL:3;           /**< bit: 12..14  Pinmux select for LP_GPIO_3              */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t LP_GPIO_4_SEL:3;           /**< bit: 16..18  Pinmux select for LP_GPIO_4              */
    uint32_t :1;                        /**< bit:     19  Reserved */
    uint32_t LP_GPIO_5_SEL:3;           /**< bit: 20..22  Pinmux select for LP_GPIO_5              */
    uint32_t :1;                        /**< bit:     23  Reserved */
    uint32_t LP_GPIO_6_SEL:3;           /**< bit: 24..26  Pinmux select for LP_GPIO_6              */
    uint32_t :1;                        /**< bit:     27  Reserved */
    uint32_t LP_GPIO_7_SEL:3;           /**< bit: 28..30  Pinmux select for LP_GPIO_7              */
    uint32_t :1;                        /**< bit:     31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PINMUX_SEL_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PINMUX_SEL_0_OFFSET (0x44)                                        /**<  (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_0, LP_GPIO_1, LP_GPIO_2, LP_GPIO_3, LP_GPIO_4, LP_GPIO_5, LP_GPIO_6, LP_GPIO_7  Offset */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_RESETVALUE _U_(0x22)                                     /**<  (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_0, LP_GPIO_1, LP_GPIO_2, LP_GPIO_3, LP_GPIO_4, LP_GPIO_5, LP_GPIO_6, LP_GPIO_7  Reset Value */

#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos 0                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_0 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_0 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_SWD_CLK_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_TEST_OUT_0_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_SWD_CLK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_SWD_CLK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_TEST_OUT_0 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_TEST_OUT_0_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos 4                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_1 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_1 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_SWD_IO_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_TEST_OUT_1_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_SWD_IO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_SWD_IO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_TEST_OUT_1 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_TEST_OUT_1_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos 8                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_2 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_2 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_UART0_RXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI1_SCK_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI0_SCK_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI_FLASH0_SCK_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_TEST_OUT_2_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_UART0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_UART0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI1_SCK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI1_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI_FLASH0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_SPI_FLASH0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_TEST_OUT_2 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_TEST_OUT_2_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos 12                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_3 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_3 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_UART0_TXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI1_MOSI_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI0_MOSI_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI_FLASH0_TXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_TEST_OUT_3_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_UART0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_UART0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI1_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI1_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI0_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI0_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI_FLASH0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_SPI_FLASH0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_TEST_OUT_3 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_TEST_OUT_3_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos 16                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_4 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_4 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI1_SSN_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI0_SSN_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI_FLASH0_SSN_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_TEST_OUT_4_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_UART0_CTS (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_UART0_CTS_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI1_SSN (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI1_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_TEST_OUT_4 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_TEST_OUT_4_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos 20                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_5 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_5 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_UART0_RTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI1_MISO_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI0_MISO_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI_FLASH0_RXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_TEST_OUT_5_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_UART0_RTS (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_UART0_RTS_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI1_MISO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI1_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI0_MISO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI0_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_TEST_OUT_5 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_TEST_OUT_5_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_5_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos 24                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_6 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_6 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_UART1_RXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI0_SCK_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI_FLASH0_SCK_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_TEST_OUT_6_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_UART1_RXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_UART1_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI_FLASH0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_SPI_FLASH0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_TEST_OUT_6 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_TEST_OUT_6_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_6_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos 28                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_7 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Pinmux select for LP_GPIO_7 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_UART1_TXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI0_MOSI_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI_FLASH0_TXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_TEST_OUT_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_UART1_TXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_UART1_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI0_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI0_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI_FLASH0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_SPI_FLASH0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_TEST_OUT_7 (LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_TEST_OUT_7_Val << LPMCU_MISC_REGS_PINMUX_SEL_0_LP_GPIO_7_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_MASK   _U_(0x77777777)                                /**< \deprecated (LPMCU_MISC_REGS_PINMUX_SEL_0) Register MASK  (Use LPMCU_MISC_REGS_PINMUX_SEL_0_Msk instead)  */
#define LPMCU_MISC_REGS_PINMUX_SEL_0_Msk    _U_(0x77777777)                                /**< (LPMCU_MISC_REGS_PINMUX_SEL_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_PINMUX_SEL_1 : (LPMCU_MISC_REGS Offset: 0x48) (R/W 32) Pinmux select for LP_GPIO_8, LP_GPIO_9, LP_GPIO_10, LP_GPIO_11, LP_GPIO_12, LP_GPIO_13, LP_GPIO_14, LP_GPIO_15 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_8_SEL:3;           /**< bit:   0..2  Pinmux select for LP_GPIO_8              */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t LP_GPIO_9_SEL:3;           /**< bit:   4..6  Pinmux select for LP_GPIO_9              */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t LP_GPIO_10_SEL:3;          /**< bit:  8..10  Pinmux select for LP_GPIO_10             */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t LP_GPIO_11_SEL:3;          /**< bit: 12..14  Pinmux select for LP_GPIO_11             */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t LP_GPIO_12_SEL:3;          /**< bit: 16..18  Pinmux select for LP_GPIO_12             */
    uint32_t :1;                        /**< bit:     19  Reserved */
    uint32_t LP_GPIO_13_SEL:3;          /**< bit: 20..22  Pinmux select for LP_GPIO_13             */
    uint32_t :1;                        /**< bit:     23  Reserved */
    uint32_t LP_GPIO_14_SEL:3;          /**< bit: 24..26  Pinmux select for LP_GPIO_14             */
    uint32_t :1;                        /**< bit:     27  Reserved */
    uint32_t LP_GPIO_15_SEL:3;          /**< bit: 28..30  Pinmux select for LP_GPIO_15             */
    uint32_t :1;                        /**< bit:     31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PINMUX_SEL_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PINMUX_SEL_1_OFFSET (0x48)                                        /**<  (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_8, LP_GPIO_9, LP_GPIO_10, LP_GPIO_11, LP_GPIO_12, LP_GPIO_13, LP_GPIO_14, LP_GPIO_15  Offset */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_RESETVALUE _U_(0x33)                                     /**<  (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_8, LP_GPIO_9, LP_GPIO_10, LP_GPIO_11, LP_GPIO_12, LP_GPIO_13, LP_GPIO_14, LP_GPIO_15  Reset Value */

#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos 0                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_8 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_8 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_I2C0_SDA_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI0_SSN_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI_FLASH0_SSN_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_TEST_OUT_8_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_I2C0_SDA (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_I2C0_SDA_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_TEST_OUT_8 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_TEST_OUT_8_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_8_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos 4                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_9 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_9 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_I2C0_SCL_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI0_MISO_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI_FLASH0_RXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_TEST_OUT_9_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_I2C0_SCL (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_I2C0_SCL_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI0_MISO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI0_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_TEST_OUT_9 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_TEST_OUT_9_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_9_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos 8                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_10 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_10 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI0_SCK_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI_FLASH0_SCK_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_TEST_OUT_10_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI_FLASH0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_SPI_FLASH0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_TEST_OUT_10 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_TEST_OUT_10_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_10_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos 12                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_11 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_11 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI0_MOSI_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI_FLASH0_TXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_TEST_OUT_11_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI0_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI0_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI_FLASH0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_SPI_FLASH0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_TEST_OUT_11 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_TEST_OUT_11_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_11_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos 16                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_12 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_12 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI0_SSN_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI_FLASH0_SSN_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_TEST_OUT_12_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_TEST_OUT_12 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_TEST_OUT_12_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_12_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos 20                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_13 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_13 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI0_MISO_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI_FLASH0_RXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_TEST_OUT_13_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI0_MISO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI0_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_TEST_OUT_13 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_TEST_OUT_13_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_13_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos 24                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_14 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_14 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_UART1_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_I2C1_SDA_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_TEST_OUT_14_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_UART1_CTS (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_UART1_CTS_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_I2C1_SDA (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_I2C1_SDA_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_TEST_OUT_14 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_TEST_OUT_14_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_14_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos 28                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_15 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Pinmux select for LP_GPIO_15 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_UART1_RTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_I2C1_SCL_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_TEST_OUT_15_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_UART1_RTS (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_UART1_RTS_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_I2C1_SCL (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_I2C1_SCL_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_TEST_OUT_15 (LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_TEST_OUT_15_Val << LPMCU_MISC_REGS_PINMUX_SEL_1_LP_GPIO_15_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_MASK   _U_(0x77777777)                                /**< \deprecated (LPMCU_MISC_REGS_PINMUX_SEL_1) Register MASK  (Use LPMCU_MISC_REGS_PINMUX_SEL_1_Msk instead)  */
#define LPMCU_MISC_REGS_PINMUX_SEL_1_Msk    _U_(0x77777777)                                /**< (LPMCU_MISC_REGS_PINMUX_SEL_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_PINMUX_SEL_2 : (LPMCU_MISC_REGS Offset: 0x4c) (R/W 32) Pinmux select for LP_GPIO_16, LP_GPIO_17, LP_GPIO_18, LP_GPIO_19, LP_GPIO_20, LP_GPIO_21, LP_GPIO_22, LP_GPIO_23 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_16_SEL:3;          /**< bit:   0..2  Pinmux select for LP_GPIO_16             */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t LP_GPIO_17_SEL:3;          /**< bit:   4..6  Pinmux select for LP_GPIO_17             */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t LP_GPIO_18_SEL:3;          /**< bit:  8..10  Pinmux select for LP_GPIO_18             */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t LP_GPIO_19_SEL:3;          /**< bit: 12..14  Pinmux select for LP_GPIO_19             */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t LP_GPIO_20_SEL:3;          /**< bit: 16..18  Pinmux select for LP_GPIO_20             */
    uint32_t :1;                        /**< bit:     19  Reserved */
    uint32_t LP_GPIO_21_SEL:3;          /**< bit: 20..22  Pinmux select for LP_GPIO_21             */
    uint32_t :1;                        /**< bit:     23  Reserved */
    uint32_t LP_GPIO_22_SEL:3;          /**< bit: 24..26  Pinmux select for LP_GPIO_22             */
    uint32_t :1;                        /**< bit:     27  Reserved */
    uint32_t LP_GPIO_23_SEL:3;          /**< bit: 28..30  Pinmux select for LP_GPIO_23             */
    uint32_t :1;                        /**< bit:     31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PINMUX_SEL_2_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PINMUX_SEL_2_OFFSET (0x4C)                                        /**<  (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_16, LP_GPIO_17, LP_GPIO_18, LP_GPIO_19, LP_GPIO_20, LP_GPIO_21, LP_GPIO_22, LP_GPIO_23  Offset */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_16, LP_GPIO_17, LP_GPIO_18, LP_GPIO_19, LP_GPIO_20, LP_GPIO_21, LP_GPIO_22, LP_GPIO_23  Reset Value */

#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos 0                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_16 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_16 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SCK_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI1_SSN_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI0_SCK_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SSN_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_TEST_OUT_16_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI1_SSN (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI1_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_TEST_OUT_16 (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_TEST_OUT_16_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_16_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos 4                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_17 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_17 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI_FLASH0_TXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI1_SCK_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI0_MOSI_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_TEST_OUT_17_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI_FLASH0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI_FLASH0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI1_SCK (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI1_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI0_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_SPI0_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_TEST_OUT_17 (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_TEST_OUT_17_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_17_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos 8                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_18 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_18 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_SSN_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI1_MISO_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI0_SSN_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_RXD_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 6  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_TEST_OUT_18_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI1_MISO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI1_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 6 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_TEST_OUT_18 (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_TEST_OUT_18_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_18_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos 12                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_19 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_19 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI_FLASH0_RXD_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI1_MOSI_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI0_MISO_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_TEST_OUT_19_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI1_MOSI (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI1_MOSI_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI0_MISO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_SPI0_MISO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 5 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_TEST_OUT_19 (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_TEST_OUT_19_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_19_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos 16                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_20 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_20 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_TEST_OUT_20_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_TEST_OUT_20 (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_TEST_OUT_20_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_20_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 7 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Pos 20                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_21 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_21 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_21_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Pos 24                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_22 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_22 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_22_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Pos 28                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_23 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Pinmux select for LP_GPIO_23 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_GPIO_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0  */
#define   LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_MEGAMUX_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_GPIO (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_GPIO_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_MEGAMUX (LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_MEGAMUX_Val << LPMCU_MISC_REGS_PINMUX_SEL_2_LP_GPIO_23_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_MASK   _U_(0x77777777)                                /**< \deprecated (LPMCU_MISC_REGS_PINMUX_SEL_2) Register MASK  (Use LPMCU_MISC_REGS_PINMUX_SEL_2_Msk instead)  */
#define LPMCU_MISC_REGS_PINMUX_SEL_2_Msk    _U_(0x77777777)                                /**< (LPMCU_MISC_REGS_PINMUX_SEL_2) Register Mask  */


/* -------- LPMCU_MISC_REGS_PULL_ENABLE : (LPMCU_MISC_REGS Offset: 0x50) (R/W 32) Active Low Pull Enables for LPMCU Pads -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_0:1;               /**< bit:      0  Pull Enable for LP_GPIO_0                */
    uint32_t LP_GPIO_1:1;               /**< bit:      1  Pull Enable for LP_GPIO_1                */
    uint32_t LP_GPIO_2:1;               /**< bit:      2  Pull Enable for LP_GPIO_2                */
    uint32_t LP_GPIO_3:1;               /**< bit:      3  Pull Enable for LP_GPIO_3                */
    uint32_t LP_GPIO_4:1;               /**< bit:      4  Pull Enable for LP_GPIO_4                */
    uint32_t LP_GPIO_5:1;               /**< bit:      5  Pull Enable for LP_GPIO_5                */
    uint32_t LP_GPIO_6:1;               /**< bit:      6  Pull Enable for LP_GPIO_6                */
    uint32_t LP_GPIO_7:1;               /**< bit:      7  Pull Enable for LP_GPIO_7                */
    uint32_t LP_GPIO_8:1;               /**< bit:      8  Pull Enable for LP_GPIO_8                */
    uint32_t LP_GPIO_9:1;               /**< bit:      9  Pull Enable for LP_GPIO_9                */
    uint32_t LP_GPIO_10:1;              /**< bit:     10  Pull Enable for LP_GPIO_10               */
    uint32_t LP_GPIO_11:1;              /**< bit:     11  Pull Enable for LP_GPIO_11               */
    uint32_t LP_GPIO_12:1;              /**< bit:     12  Pull Enable for LP_GPIO_12               */
    uint32_t LP_GPIO_13:1;              /**< bit:     13  Pull Enable for LP_GPIO_13               */
    uint32_t LP_GPIO_14:1;              /**< bit:     14  Pull Enable for LP_GPIO_14               */
    uint32_t LP_GPIO_15:1;              /**< bit:     15  Pull Enable for LP_GPIO_15               */
    uint32_t LP_GPIO_16:1;              /**< bit:     16  Pull Enable for LP_GPIO_16               */
    uint32_t LP_GPIO_17:1;              /**< bit:     17  Pull Enable for LP_GPIO_17               */
    uint32_t LP_GPIO_18:1;              /**< bit:     18  Pull Enable for LP_GPIO_18               */
    uint32_t LP_GPIO_19:1;              /**< bit:     19  Pull Enable for LP_GPIO_19               */
    uint32_t LP_GPIO_20:1;              /**< bit:     20  Pull Enable for LP_GPIO_20               */
    uint32_t LP_GPIO_21:1;              /**< bit:     21  Pull Enable for LP_GPIO_21               */
    uint32_t LP_GPIO_22:1;              /**< bit:     22  Pull Enable for LP_GPIO_22               */
    uint32_t LP_GPIO_23:1;              /**< bit:     23  Pull Enable for LP_GPIO_23               */
    uint32_t :3;                        /**< bit: 24..26  Reserved */
    uint32_t LP_SIP_0:1;                /**< bit:     27  Pull Enable for LP_SIP_0                 */
    uint32_t LP_SIP_1:1;                /**< bit:     28  Pull Enable for LP_SIP_1                 */
    uint32_t LP_SIP_2:1;                /**< bit:     29  Pull Enable for LP_SIP_2                 */
    uint32_t LP_SIP_3:1;                /**< bit:     30  Pull Enable for LP_SIP_3                 */
    uint32_t LP_SIP_4:1;                /**< bit:     31  Pull Enable for LP_SIP_4                 */
  } bit;                                /**< Structure used for bit  access */
  struct {
    uint32_t LP_GPIO_:24;               /**< bit:  0..23  Pull Enable for LP_GPIO_x                */
    uint32_t :3;                        /**< bit: 24..26  Reserved */
    uint32_t LP_SIP_:5;                 /**< bit: 27..31  Pull Enable for LP_SIP_4                 */
  } vec;                                /**< Structure used for vec  access  */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PULL_ENABLE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PULL_ENABLE_OFFSET  (0x50)                                        /**<  (LPMCU_MISC_REGS_PULL_ENABLE) Active Low Pull Enables for LPMCU Pads  Offset */
#define LPMCU_MISC_REGS_PULL_ENABLE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PULL_ENABLE) Active Low Pull Enables for LPMCU Pads  Reset Value */

#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0_Pos 0                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_0 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_0 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_0_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1_Pos 1                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_1 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_1 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_1_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2_Pos 2                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_2 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_2 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_2_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3_Pos 3                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_3 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_3 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_3_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4_Pos 4                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_4 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_4 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_4_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5_Pos 5                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_5 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_5 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_5_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6_Pos 6                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_6 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_6 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_6_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7_Pos 7                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_7 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_7 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_7_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8_Pos 8                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_8 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_8 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_8_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9_Pos 9                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_9 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_9 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_9_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10_Pos 10                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_10 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_10 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_10_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11_Pos 11                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_11 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_11 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_11_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12_Pos 12                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_12 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_12 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_12_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13_Pos 13                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_13 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_13 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_13_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14_Pos 14                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_14 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_14 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_14_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15_Pos 15                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_15 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_15 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_15_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16_Pos 16                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_16 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_16 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_16_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17_Pos 17                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_17 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_17 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_17_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18_Pos 18                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_18 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_18 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_18_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19_Pos 19                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_19 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_19 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_19_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20_Pos 20                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_20 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_20 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_20_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21_Pos 21                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_21 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_21 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_21_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22_Pos 22                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_22 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_22 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_22_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23_Pos 23                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_23 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_GPIO_23 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23 LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_23_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0_Pos 27                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_0 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_0 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0 LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_0_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1_Pos 28                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_1 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_1 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1 LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_1_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2_Pos 29                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_2 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_2 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2 LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_2_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3_Pos 30                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_3 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_3 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3 LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_3_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4_Pos 31                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_4 Position */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4_Msk (_U_(0x1) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4_Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE) Pull Enable for LP_SIP_4 Mask */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4 LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_4_Msk instead */
#define LPMCU_MISC_REGS_PULL_ENABLE_MASK    _U_(0xF8FFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_PULL_ENABLE) Register MASK  (Use LPMCU_MISC_REGS_PULL_ENABLE_Msk instead)  */
#define LPMCU_MISC_REGS_PULL_ENABLE_Msk     _U_(0xF8FFFFFF)                                /**< (LPMCU_MISC_REGS_PULL_ENABLE) Register Mask  */

#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO__Pos 0                                              /**< (LPMCU_MISC_REGS_PULL_ENABLE Position) Pull Enable for LP_GPIO_x */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO__Msk (_U_(0xFFFFFF) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO__Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE Mask) LP_GPIO_ */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO_(value) (LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO__Msk & ((value) << LPMCU_MISC_REGS_PULL_ENABLE_LP_GPIO__Pos))  
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP__Pos 27                                             /**< (LPMCU_MISC_REGS_PULL_ENABLE Position) Pull Enable for LP_SIP_4 */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP__Msk (_U_(0x1F) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP__Pos)  /**< (LPMCU_MISC_REGS_PULL_ENABLE Mask) LP_SIP_ */
#define LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP_(value) (LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP__Msk & ((value) << LPMCU_MISC_REGS_PULL_ENABLE_LP_SIP__Pos))  

/* -------- LPMCU_MISC_REGS_RTYPE_PAD_0 : (LPMCU_MISC_REGS Offset: 0x54) (R/W 32) Controls the RTYPE (Pull Level) pad value for LPMCU Pads (0 = Pull Up) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_0:1;               /**< bit:      0  Controls RTYPE (Pull Level) value for LP_GPIO_0 */
    uint32_t LP_GPIO_1:1;               /**< bit:      1  Controls RTYPE (Pull Level) value LP_GPIO_1 */
    uint32_t LP_GPIO_2:1;               /**< bit:      2  Controls RTYPE (Pull Level) value LP_GPIO_2 */
    uint32_t LP_GPIO_3:1;               /**< bit:      3  Controls RTYPE (Pull Level) value LP_GPIO_3 */
    uint32_t LP_GPIO_4:1;               /**< bit:      4  Controls RTYPE (Pull Level) value LP_GPIO_4 */
    uint32_t LP_GPIO_5:1;               /**< bit:      5  Controls RTYPE (Pull Level) value LP_GPIO_5 */
    uint32_t LP_GPIO_6:1;               /**< bit:      6  Controls RTYPE (Pull Level) value LP_GPIO_6 */
    uint32_t LP_GPIO_7:1;               /**< bit:      7  Controls RTYPE (Pull Level) value LP_GPIO_7 */
    uint32_t LP_GPIO_8:1;               /**< bit:      8  Controls RTYPE (Pull Level) value for LP_GPIO_8 */
    uint32_t LP_GPIO_9:1;               /**< bit:      9  Controls RTYPE (Pull Level) value LP_GPIO_9 */
    uint32_t LP_GPIO_10:1;              /**< bit:     10  Controls RTYPE (Pull Level) value LP_GPIO_10 */
    uint32_t LP_GPIO_11:1;              /**< bit:     11  Controls RTYPE (Pull Level) value LP_GPIO_11 */
    uint32_t LP_GPIO_12:1;              /**< bit:     12  Controls RTYPE (Pull Level) value LP_GPIO_12 */
    uint32_t LP_GPIO_13:1;              /**< bit:     13  Controls RTYPE (Pull Level) value LP_GPIO_13 */
    uint32_t LP_GPIO_14:1;              /**< bit:     14  Controls RTYPE (Pull Level) value LP_GPIO_14 */
    uint32_t LP_GPIO_15:1;              /**< bit:     15  Controls RTYPE (Pull Level) value LP_GPIO_15 */
    uint32_t LP_GPIO_16:1;              /**< bit:     16  Controls RTYPE (Pull Level) value LP_GPIO_16 */
    uint32_t LP_GPIO_17:1;              /**< bit:     17  Controls RTYPE (Pull Level) value LP_GPIO_17 */
    uint32_t LP_GPIO_18:1;              /**< bit:     18  Controls RTYPE (Pull Level) value LP_GPIO_18 */
    uint32_t LP_GPIO_19:1;              /**< bit:     19  Controls RTYPE (Pull Level) value LP_GPIO_19 */
    uint32_t LP_GPIO_20:1;              /**< bit:     20  Controls RTYPE (Pull Level) value LP_GPIO_20 */
    uint32_t LP_GPIO_21:1;              /**< bit:     21  Controls RTYPE (Pull Level) value LP_GPIO_21 */
    uint32_t LP_GPIO_22:1;              /**< bit:     22  Controls RTYPE (Pull Level) value LP_GPIO_22 */
    uint32_t LP_GPIO_23:1;              /**< bit:     23  Controls RTYPE (Pull Level) value LP_GPIO_23 */
    uint32_t :8;                        /**< bit: 24..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  struct {
    uint32_t LP_GPIO_:24;               /**< bit:  0..23  Controls RTYPE (Pull Level) value LP_GPIO_23 */
    uint32_t :8;                        /**< bit: 24..31 Reserved */
  } vec;                                /**< Structure used for vec  access  */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_RTYPE_PAD_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_RTYPE_PAD_0_OFFSET  (0x54)                                        /**<  (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls the RTYPE (Pull Level) pad value for LPMCU Pads (0 = Pull Up)  Offset */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls the RTYPE (Pull Level) pad value for LPMCU Pads (0 = Pull Up)  Reset Value */

#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0_Pos 0                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value for LP_GPIO_0 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value for LP_GPIO_0 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_0_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1_Pos 1                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_1 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_1 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_1_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2_Pos 2                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_2 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_2 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_2_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3_Pos 3                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_3 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_3 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_3_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4_Pos 4                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_4 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_4 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_4_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5_Pos 5                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_5 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_5 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_5_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6_Pos 6                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_6 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_6 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_6_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7_Pos 7                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_7 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_7 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_7_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8_Pos 8                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value for LP_GPIO_8 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value for LP_GPIO_8 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_8_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9_Pos 9                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_9 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_9 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_9_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10_Pos 10                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_10 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_10 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_10_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11_Pos 11                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_11 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_11 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_11_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12_Pos 12                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_12 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_12 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_12_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13_Pos 13                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_13 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_13 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_13_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14_Pos 14                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_14 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_14 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_14_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15_Pos 15                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_15 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_15 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_15_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16_Pos 16                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_16 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_16 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_16_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17_Pos 17                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_17 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_17 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_17_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18_Pos 18                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_18 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_18 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_18_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19_Pos 19                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_19 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_19 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_19_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20_Pos 20                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_20 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_20 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_20_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21_Pos 21                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_21 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_21 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_21_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22_Pos 22                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_22 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_22 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_22_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23_Pos 23                                             /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_23 Position */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23_Msk (_U_(0x1) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Controls RTYPE (Pull Level) value LP_GPIO_23 Mask */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23 LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_23_Msk instead */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_MASK    _U_(0xFFFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_RTYPE_PAD_0) Register MASK  (Use LPMCU_MISC_REGS_RTYPE_PAD_0_Msk instead)  */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_Msk     _U_(0xFFFFFF)                                  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0) Register Mask  */

#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO__Pos 0                                              /**< (LPMCU_MISC_REGS_RTYPE_PAD_0 Position) Controls RTYPE (Pull Level) value LP_GPIO_23 */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO__Msk (_U_(0xFFFFFF) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO__Pos)  /**< (LPMCU_MISC_REGS_RTYPE_PAD_0 Mask) LP_GPIO_ */
#define LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO_(value) (LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO__Msk & ((value) << LPMCU_MISC_REGS_RTYPE_PAD_0_LP_GPIO__Pos))  

/* -------- LPMCU_MISC_REGS_PINMUX_SEL_3 : (LPMCU_MISC_REGS Offset: 0x68) (R/W 32) Pinmux select for LP_SIP_0, LP_SIP_1, LP_SIP_2, LP_SIP_3, LP_SIP_4 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_SIP_0_SEL:3;            /**< bit:   0..2  Pinmux select for LP_SIP_0               */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t LP_SIP_1_SEL:3;            /**< bit:   4..6  Pinmux select for LP_SIP_1               */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t LP_SIP_2_SEL:3;            /**< bit:  8..10  Pinmux select for LP_SIP_2               */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t LP_SIP_3_SEL:3;            /**< bit: 12..14  Pinmux select for LP_SIP_3               */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t LP_SIP_4_SEL:3;            /**< bit: 16..18  Pinmux select for LP_SIP_4               */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PINMUX_SEL_3_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PINMUX_SEL_3_OFFSET (0x68)                                        /**<  (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_0, LP_SIP_1, LP_SIP_2, LP_SIP_3, LP_SIP_4  Offset */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_0, LP_SIP_1, LP_SIP_2, LP_SIP_3, LP_SIP_4  Reset Value */

#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Pos 0                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_0 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_0 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_SPI_FLASH0_SCK_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 1  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_SPI_FLASH0_SCK (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_SPI_FLASH0_SCK_Val << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_0_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 1 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Pos 4                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_1 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_1 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_SPI_FLASH0_TXD_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 3  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_SPI_FLASH0_TXD (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_SPI_FLASH0_TXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_1_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 3 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Pos 8                                              /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_2 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_2 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_SPI_FLASH0_SSN_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 2  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_SPI_FLASH0_SSN (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_SPI_FLASH0_SSN_Val << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_2_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 2 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Pos 12                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_3 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_3 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_SPI_FLASH0_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 4  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_SPI_FLASH0_RXD (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_SPI_FLASH0_RXD_Val << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_3_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 4 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Pos 16                                             /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_4 Position */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Msk (_U_(0x7) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Pinmux select for LP_SIP_4 Mask */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL(value) (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Msk & ((value) << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Pos))
#define   LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_SPI_FLASH0_WP_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 0  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_SPI_FLASH0_WP (LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_SPI_FLASH0_WP_Val << LPMCU_MISC_REGS_PINMUX_SEL_3_LP_SIP_4_SEL_Pos)  /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) MUX function 0 Position  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_MASK   _U_(0x77777)                                   /**< \deprecated (LPMCU_MISC_REGS_PINMUX_SEL_3) Register MASK  (Use LPMCU_MISC_REGS_PINMUX_SEL_3_Msk instead)  */
#define LPMCU_MISC_REGS_PINMUX_SEL_3_Msk    _U_(0x77777)                                   /**< (LPMCU_MISC_REGS_PINMUX_SEL_3) Register Mask  */


/* -------- LPMCU_MISC_REGS_ISHAPE_PAD_3 : (LPMCU_MISC_REGS Offset: 0x6c) (R/W 32) Controls the ISHAPE pad value for LPMCU SIP Pads -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_SIP_0:3;                /**< bit:   0..2  Controls ISHAPE value LP_SIP_0           */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t LP_SIP_1:3;                /**< bit:   4..6  Controls ISHAPE value LP_SIP_1           */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t LP_SIP_2:3;                /**< bit:  8..10  Controls ISHAPE value LP_SIP_2           */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t LP_SIP_3:3;                /**< bit: 12..14  Controls ISHAPE value LP_SIP_3           */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t LP_SIP_4:3;                /**< bit: 16..18  Controls ISHAPE value LP_SIP_4           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_ISHAPE_PAD_3_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_ISHAPE_PAD_3_OFFSET (0x6C)                                        /**<  (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls the ISHAPE pad value for LPMCU SIP Pads  Offset */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_RESETVALUE _U_(0x55555)                                  /**<  (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls the ISHAPE pad value for LPMCU SIP Pads  Reset Value */

#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0_Pos 0                                              /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_0 Position */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0_Msk (_U_(0x7) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0_Pos)  /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_0 Mask */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0(value) (LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0_Msk & ((value) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_0_Pos))
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1_Pos 4                                              /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_1 Position */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1_Msk (_U_(0x7) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1_Pos)  /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_1 Mask */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1(value) (LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1_Msk & ((value) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_1_Pos))
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2_Pos 8                                              /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_2 Position */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2_Msk (_U_(0x7) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2_Pos)  /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_2 Mask */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2(value) (LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2_Msk & ((value) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_2_Pos))
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3_Pos 12                                             /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_3 Position */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3_Msk (_U_(0x7) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3_Pos)  /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_3 Mask */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3(value) (LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3_Msk & ((value) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_3_Pos))
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4_Pos 16                                             /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_4 Position */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4_Msk (_U_(0x7) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4_Pos)  /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Controls ISHAPE value LP_SIP_4 Mask */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4(value) (LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4_Msk & ((value) << LPMCU_MISC_REGS_ISHAPE_PAD_3_LP_SIP_4_Pos))
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_MASK   _U_(0x77777)                                   /**< \deprecated (LPMCU_MISC_REGS_ISHAPE_PAD_3) Register MASK  (Use LPMCU_MISC_REGS_ISHAPE_PAD_3_Msk instead)  */
#define LPMCU_MISC_REGS_ISHAPE_PAD_3_Msk    _U_(0x77777)                                   /**< (LPMCU_MISC_REGS_ISHAPE_PAD_3) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_CTRL_2 : (LPMCU_MISC_REGS Offset: 0x90) (R/W 8) Misc control for the LPMCU -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  SPI_FLASH0_CLOCK_FRAC_VALUE:8;  /**< bit:   0..7  SPI_FLASH0 Fractional Divider Value      */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_CTRL_2_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_CTRL_2_OFFSET (0x90)                                        /**<  (LPMCU_MISC_REGS_LPMCU_CTRL_2) Misc control for the LPMCU  Offset */
#define LPMCU_MISC_REGS_LPMCU_CTRL_2_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_LPMCU_CTRL_2) Misc control for the LPMCU  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_CTRL_2) SPI_FLASH0 Fractional Divider Value Position */
#define LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE_Msk (_U_(0xFF) << LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_CTRL_2) SPI_FLASH0 Fractional Divider Value Mask */
#define LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE(value) (LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE_Msk & ((value) << LPMCU_MISC_REGS_LPMCU_CTRL_2_SPI_FLASH0_CLOCK_FRAC_VALUE_Pos))
#define LPMCU_MISC_REGS_LPMCU_CTRL_2_MASK   _U_(0xFF)                                      /**< \deprecated (LPMCU_MISC_REGS_LPMCU_CTRL_2) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_CTRL_2_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_CTRL_2_Msk    _U_(0xFF)                                      /**< (LPMCU_MISC_REGS_LPMCU_CTRL_2) Register Mask  */


/* -------- LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL : (LPMCU_MISC_REGS Offset: 0xa0) (R/W 8) Control for VDDIO of SPI FLASH -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  ENABLE:1;                  /**< bit:      0  Enables power for the stacked (internal) SPI FLASH */
    uint8_t  :7;                        /**< bit:   1..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_OFFSET (0xA0)                                        /**<  (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Control for VDDIO of SPI FLASH  Offset */
#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_RESETVALUE _U_(0x01)                                     /**<  (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Control for VDDIO of SPI FLASH  Reset Value */

#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Enables power for the stacked (internal) SPI FLASH Position */
#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Enables power for the stacked (internal) SPI FLASH Mask */
#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_MASK _U_(0x01)                                      /**< \deprecated (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Register MASK  (Use LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_Msk _U_(0x01)                                      /**< (LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_SPIFLASH_BYPASS : (LPMCU_MISC_REGS Offset: 0xa4) (R/W 8) SPI FLASH Bypass -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  ENABLE:1;                  /**< bit:      0  Enables Bypass of SPI Flash Controller   */
    uint8_t  :7;                        /**< bit:   1..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SPIFLASH_BYPASS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_OFFSET (0xA4)                                        /**<  (LPMCU_MISC_REGS_SPIFLASH_BYPASS) SPI FLASH Bypass  Offset */
#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SPIFLASH_BYPASS) SPI FLASH Bypass  Reset Value */

#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_SPIFLASH_BYPASS) Enables Bypass of SPI Flash Controller Position */
#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_SPIFLASH_BYPASS) Enables Bypass of SPI Flash Controller Mask */
#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_SPIFLASH_BYPASS_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_MASK _U_(0x01)                                      /**< \deprecated (LPMCU_MISC_REGS_SPIFLASH_BYPASS) Register MASK  (Use LPMCU_MISC_REGS_SPIFLASH_BYPASS_Msk instead)  */
#define LPMCU_MISC_REGS_SPIFLASH_BYPASS_Msk _U_(0x01)                                      /**< (LPMCU_MISC_REGS_SPIFLASH_BYPASS) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0 : (LPMCU_MISC_REGS Offset: 0xc0) (R/W 32) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MUX_0:5;                   /**< bit:   0..4  IRQ_0 Source Selection                   */
    uint32_t :3;                        /**< bit:   5..7  Reserved */
    uint32_t MUX_1:5;                   /**< bit:  8..12  IRQ_1 Source Selection                   */
    uint32_t :3;                        /**< bit: 13..15  Reserved */
    uint32_t MUX_2:5;                   /**< bit: 16..20  IRQ_2 Source Selection                   */
    uint32_t :3;                        /**< bit: 21..23  Reserved */
    uint32_t MUX_3:5;                   /**< bit: 24..28  IRQ_3 Source Selection                   */
    uint32_t :3;                        /**< bit: 29..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_OFFSET (0xC0)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_0 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_0 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_0_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_1 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_1 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_1_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos 16                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_2 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_2 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_2_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos 24                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_3 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) IRQ_3 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MUX_3_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_MASK _U_(0x1F1F1F1F)                                /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_Msk _U_(0x1F1F1F1F)                                /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1 : (LPMCU_MISC_REGS Offset: 0xc4) (R/W 32) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MUX_4:5;                   /**< bit:   0..4  IRQ_4 Source Selection                   */
    uint32_t :3;                        /**< bit:   5..7  Reserved */
    uint32_t MUX_5:5;                   /**< bit:  8..12  IRQ_5 Source Selection                   */
    uint32_t :3;                        /**< bit: 13..15  Reserved */
    uint32_t MUX_6:5;                   /**< bit: 16..20  IRQ_6 Source Selection                   */
    uint32_t :3;                        /**< bit: 21..23  Reserved */
    uint32_t MUX_7:5;                   /**< bit: 24..28  IRQ_7 Source Selection                   */
    uint32_t :3;                        /**< bit: 29..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_OFFSET (0xC4)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_4 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_4 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_4_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_5 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_5 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_5_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos 16                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_6 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_6 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_6_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos 24                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_7 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) IRQ_7 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MUX_7_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_MASK _U_(0x1F1F1F1F)                                /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_Msk _U_(0x1F1F1F1F)                                /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2 : (LPMCU_MISC_REGS Offset: 0xc8) (R/W 32) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MUX_8:5;                   /**< bit:   0..4  IRQ_8 Source Selection                   */
    uint32_t :3;                        /**< bit:   5..7  Reserved */
    uint32_t MUX_9:5;                   /**< bit:  8..12  IRQ_9 Source Selection                   */
    uint32_t :3;                        /**< bit: 13..15  Reserved */
    uint32_t MUX_10:5;                  /**< bit: 16..20  IRQ_10 Source Selection                  */
    uint32_t :3;                        /**< bit: 21..23  Reserved */
    uint32_t MUX_11:5;                  /**< bit: 24..28  IRQ_11 Source Selection                  */
    uint32_t :3;                        /**< bit: 29..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_OFFSET (0xC8)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_8 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_8 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_8_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_9 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_9 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_9_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos 16                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_10 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_10 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_10_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos 24                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_11 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) IRQ_11 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MUX_11_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_MASK _U_(0x1F1F1F1F)                                /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_Msk _U_(0x1F1F1F1F)                                /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3 : (LPMCU_MISC_REGS Offset: 0xcc) (R/W 32) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MUX_12:5;                  /**< bit:   0..4  IRQ_12 Source Selection                  */
    uint32_t :3;                        /**< bit:   5..7  Reserved */
    uint32_t MUX_13:5;                  /**< bit:  8..12  IRQ_13 Source Selection                  */
    uint32_t :3;                        /**< bit: 13..15  Reserved */
    uint32_t MUX_14:5;                  /**< bit: 16..20  IRQ_14 Source Selection                  */
    uint32_t :3;                        /**< bit: 21..23  Reserved */
    uint32_t MUX_15:5;                  /**< bit: 24..28  IRQ_15 Source Selection                  */
    uint32_t :3;                        /**< bit: 29..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_OFFSET (0xCC)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_12 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_12 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_12_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_13 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_13 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_13_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos 16                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_14 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_14 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_14_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos 24                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_15 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) IRQ_15 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MUX_15_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_MASK _U_(0x1F1F1F1F)                                /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_Msk _U_(0x1F1F1F1F)                                /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4 : (LPMCU_MISC_REGS Offset: 0xd0) (R/W 32) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MUX_16:5;                  /**< bit:   0..4  IRQ_16 Source Selection                  */
    uint32_t :3;                        /**< bit:   5..7  Reserved */
    uint32_t MUX_17:5;                  /**< bit:  8..12  IRQ_17 Source Selection                  */
    uint32_t :3;                        /**< bit: 13..15  Reserved */
    uint32_t MUX_18:5;                  /**< bit: 16..20  IRQ_18 Source Selection                  */
    uint32_t :3;                        /**< bit: 21..23  Reserved */
    uint32_t MUX_19:5;                  /**< bit: 24..28  IRQ_19 Source Selection                  */
    uint32_t :3;                        /**< bit: 29..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_OFFSET (0xD0)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_16 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_16 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_16_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_17 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_17 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_17_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos 16                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_18 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_18 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_18_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos 24                                             /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_19 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) IRQ_19 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MUX_19_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_MASK _U_(0x1F1F1F1F)                                /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_Msk _U_(0x1F1F1F1F)                                /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5 : (LPMCU_MISC_REGS Offset: 0xd4) (R/W 8) ARM Cortex IRQ Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  MUX_20:5;                  /**< bit:   0..4  IRQ_20 Source Selection                  */
    uint8_t  :3;                        /**< bit:   5..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_OFFSET (0xD4)                                        /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) ARM Cortex IRQ Mux Selection  Offset */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) ARM Cortex IRQ Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) IRQ_20 Source Selection Position */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Msk (_U_(0x1F) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) IRQ_20 Source Selection Mask */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20(value) (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Msk & ((value) << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos))
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BROWNOUT_DETECTED  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_4_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_5_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_6_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_7_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_8_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_9_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C0 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_10_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C0 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_11_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C1 RX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_12_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C1 TX  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_13_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) WDT0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_14_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) WDT1  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_15_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) DUALTIMER0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_16_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) PROV_DMA_CTRL0  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_17_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SECURITY  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_18_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) EFUSE_OUT_OF_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_19_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) QUAD_DEC0_1_2  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_20_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BLE_FRONTEND  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_21_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) PROG_AHB_TRIG_TIMEOUT  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_22_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SXPLL_NEED_RESET  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_23_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) LP_CLK_CAL_DONE  */
#define   LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_24_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BROWNOUT_DETECTED  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_0 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_0_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_1 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_1_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_2 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_2_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_3 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_3_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_4 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_4_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) UART1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_5 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_5_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_6 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_6_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_7 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_7_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_8 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_8_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SPI1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_9 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_9_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C0 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_10 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_10_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C0 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_11 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_11_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C1 RX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_12 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_12_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) I2C1 TX Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_13 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_13_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) WDT0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_14 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_14_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) WDT1 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_15 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_15_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) DUALTIMER0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_16 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_16_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) PROV_DMA_CTRL0 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_17 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_17_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SECURITY Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_18 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_18_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) EFUSE_OUT_OF_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_19 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_19_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) QUAD_DEC0_1_2 Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_20 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_20_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BLE_FRONTEND Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_21 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_21_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) PROG_AHB_TRIG_TIMEOUT Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_22 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_22_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) SXPLL_NEED_RESET Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_23 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_23_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) LP_CLK_CAL_DONE Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_24 (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_24_Val << LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MUX_20_Pos)  /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) BROWNOUT_DETECTED Position  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_MASK _U_(0x1F)                                      /**< \deprecated (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) Register MASK  (Use LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_Msk _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5) Register Mask  */


/* -------- LPMCU_MISC_REGS_PWM0_CTRL : (LPMCU_MISC_REGS Offset: 0x160) (R/W 32) PWM0 Control Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t PWM_EN:1;                  /**< bit:      0  Active High PWM Enable                   */
    uint32_t OUTPUT_POLARITY:1;         /**< bit:      1  1 to inverse the polarity                */
    uint32_t AGCDATA_FMT:1;             /**< bit:      2  AGC data format                          */
    uint32_t SAMPLE_METHOD:1;           /**< bit:      3  Sample Method                            */
    uint32_t :1;                        /**< bit:      4  Reserved */
    uint32_t PWM_PERIOD:4;              /**< bit:   5..8  programmable PWM update period           */
    uint32_t AGCDATA_IN:10;             /**< bit:  9..18  agc value from AGC                       */
    uint32_t :2;                        /**< bit: 19..20  Reserved */
    uint32_t CLOCK_SEL:2;               /**< bit: 21..22  PWM Source Clock Frequency Select        */
    uint32_t :9;                        /**< bit: 23..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PWM0_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PWM0_CTRL_OFFSET    (0x160)                                       /**<  (LPMCU_MISC_REGS_PWM0_CTRL) PWM0 Control Register  Offset */
#define LPMCU_MISC_REGS_PWM0_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PWM0_CTRL) PWM0 Control Register  Reset Value */

#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) Active High PWM Enable Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) Active High PWM Enable Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN    LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN_Msk           /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM0_CTRL_PWM_EN_Msk instead */
#define LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY_Pos 1                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) 1 to inverse the polarity Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) 1 to inverse the polarity Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM0_CTRL_OUTPUT_POLARITY_Msk instead */
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT_Pos 2                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) AGC data format Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) AGC data format Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_FMT_Msk instead */
#define LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Pos 3                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) Sample Method Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) Sample Method Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Msk instead */
#define   LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision  */
#define   LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) Samples at PWM period but will lose LSBs if less than 1024  */
#define LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_0 (LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_0_Val << LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_1 (LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_1_Val << LPMCU_MISC_REGS_PWM0_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) Samples at PWM period but will lose LSBs if less than 1024 Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD_Pos 5                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) programmable PWM update period Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD_Msk (_U_(0xF) << LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) programmable PWM update period Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD(value) (LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD_Msk & ((value) << LPMCU_MISC_REGS_PWM0_CTRL_PWM_PERIOD_Pos))
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN_Pos 9                                              /**< (LPMCU_MISC_REGS_PWM0_CTRL) agc value from AGC Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN_Msk (_U_(0x3FF) << LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) agc value from AGC Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN(value) (LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN_Msk & ((value) << LPMCU_MISC_REGS_PWM0_CTRL_AGCDATA_IN_Pos))
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos 21                                             /**< (LPMCU_MISC_REGS_PWM0_CTRL) PWM Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) PWM Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_PWM0_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_PWM0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM0_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_PWM0_CTRL_MASK      _U_(0x67FFEF)                                  /**< \deprecated (LPMCU_MISC_REGS_PWM0_CTRL) Register MASK  (Use LPMCU_MISC_REGS_PWM0_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_PWM0_CTRL_Msk       _U_(0x67FFEF)                                  /**< (LPMCU_MISC_REGS_PWM0_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_PWM1_CTRL : (LPMCU_MISC_REGS Offset: 0x164) (R/W 32) PWM1 Control Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t PWM_EN:1;                  /**< bit:      0  Active High PWM Enable                   */
    uint32_t OUTPUT_POLARITY:1;         /**< bit:      1  1 to inverse the polarity                */
    uint32_t AGCDATA_FMT:1;             /**< bit:      2  AGC data format                          */
    uint32_t SAMPLE_METHOD:1;           /**< bit:      3  Sample Method                            */
    uint32_t :1;                        /**< bit:      4  Reserved */
    uint32_t PWM_PERIOD:4;              /**< bit:   5..8  programmable PWM update period           */
    uint32_t AGCDATA_IN:10;             /**< bit:  9..18  agc value from AGC                       */
    uint32_t :2;                        /**< bit: 19..20  Reserved */
    uint32_t CLOCK_SEL:2;               /**< bit: 21..22  PWM Source Clock Frequency Select        */
    uint32_t :9;                        /**< bit: 23..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PWM1_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PWM1_CTRL_OFFSET    (0x164)                                       /**<  (LPMCU_MISC_REGS_PWM1_CTRL) PWM1 Control Register  Offset */
#define LPMCU_MISC_REGS_PWM1_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PWM1_CTRL) PWM1 Control Register  Reset Value */

#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) Active High PWM Enable Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) Active High PWM Enable Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN    LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN_Msk           /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM1_CTRL_PWM_EN_Msk instead */
#define LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY_Pos 1                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) 1 to inverse the polarity Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) 1 to inverse the polarity Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM1_CTRL_OUTPUT_POLARITY_Msk instead */
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT_Pos 2                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) AGC data format Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) AGC data format Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_FMT_Msk instead */
#define LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Pos 3                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) Sample Method Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) Sample Method Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Msk instead */
#define   LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision  */
#define   LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) Samples at PWM period but will lose LSBs if less than 1024  */
#define LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_0 (LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_0_Val << LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_1 (LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_1_Val << LPMCU_MISC_REGS_PWM1_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) Samples at PWM period but will lose LSBs if less than 1024 Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD_Pos 5                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) programmable PWM update period Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD_Msk (_U_(0xF) << LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) programmable PWM update period Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD(value) (LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD_Msk & ((value) << LPMCU_MISC_REGS_PWM1_CTRL_PWM_PERIOD_Pos))
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN_Pos 9                                              /**< (LPMCU_MISC_REGS_PWM1_CTRL) agc value from AGC Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN_Msk (_U_(0x3FF) << LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) agc value from AGC Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN(value) (LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN_Msk & ((value) << LPMCU_MISC_REGS_PWM1_CTRL_AGCDATA_IN_Pos))
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos 21                                             /**< (LPMCU_MISC_REGS_PWM1_CTRL) PWM Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) PWM Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_PWM1_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_PWM1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM1_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_PWM1_CTRL_MASK      _U_(0x67FFEF)                                  /**< \deprecated (LPMCU_MISC_REGS_PWM1_CTRL) Register MASK  (Use LPMCU_MISC_REGS_PWM1_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_PWM1_CTRL_Msk       _U_(0x67FFEF)                                  /**< (LPMCU_MISC_REGS_PWM1_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_PWM2_CTRL : (LPMCU_MISC_REGS Offset: 0x168) (R/W 32) PWM2 Control Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t PWM_EN:1;                  /**< bit:      0  Active High PWM Enable                   */
    uint32_t OUTPUT_POLARITY:1;         /**< bit:      1  1 to inverse the polarity                */
    uint32_t AGCDATA_FMT:1;             /**< bit:      2  AGC data format                          */
    uint32_t SAMPLE_METHOD:1;           /**< bit:      3  Sample Method                            */
    uint32_t :1;                        /**< bit:      4  Reserved */
    uint32_t PWM_PERIOD:4;              /**< bit:   5..8  programmable PWM update period           */
    uint32_t AGCDATA_IN:10;             /**< bit:  9..18  agc value from AGC                       */
    uint32_t :2;                        /**< bit: 19..20  Reserved */
    uint32_t CLOCK_SEL:2;               /**< bit: 21..22  PWM Source Clock Frequency Select        */
    uint32_t :9;                        /**< bit: 23..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PWM2_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PWM2_CTRL_OFFSET    (0x168)                                       /**<  (LPMCU_MISC_REGS_PWM2_CTRL) PWM2 Control Register  Offset */
#define LPMCU_MISC_REGS_PWM2_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PWM2_CTRL) PWM2 Control Register  Reset Value */

#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) Active High PWM Enable Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) Active High PWM Enable Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN    LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN_Msk           /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM2_CTRL_PWM_EN_Msk instead */
#define LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY_Pos 1                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) 1 to inverse the polarity Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) 1 to inverse the polarity Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM2_CTRL_OUTPUT_POLARITY_Msk instead */
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT_Pos 2                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) AGC data format Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) AGC data format Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_FMT_Msk instead */
#define LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Pos 3                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) Sample Method Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) Sample Method Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Msk instead */
#define   LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision  */
#define   LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) Samples at PWM period but will lose LSBs if less than 1024  */
#define LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_0 (LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_0_Val << LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_1 (LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_1_Val << LPMCU_MISC_REGS_PWM2_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) Samples at PWM period but will lose LSBs if less than 1024 Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD_Pos 5                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) programmable PWM update period Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD_Msk (_U_(0xF) << LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) programmable PWM update period Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD(value) (LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD_Msk & ((value) << LPMCU_MISC_REGS_PWM2_CTRL_PWM_PERIOD_Pos))
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN_Pos 9                                              /**< (LPMCU_MISC_REGS_PWM2_CTRL) agc value from AGC Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN_Msk (_U_(0x3FF) << LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) agc value from AGC Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN(value) (LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN_Msk & ((value) << LPMCU_MISC_REGS_PWM2_CTRL_AGCDATA_IN_Pos))
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos 21                                             /**< (LPMCU_MISC_REGS_PWM2_CTRL) PWM Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) PWM Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_PWM2_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_PWM2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM2_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_PWM2_CTRL_MASK      _U_(0x67FFEF)                                  /**< \deprecated (LPMCU_MISC_REGS_PWM2_CTRL) Register MASK  (Use LPMCU_MISC_REGS_PWM2_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_PWM2_CTRL_Msk       _U_(0x67FFEF)                                  /**< (LPMCU_MISC_REGS_PWM2_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_PWM3_CTRL : (LPMCU_MISC_REGS Offset: 0x16c) (R/W 32) PWM3 Control Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t PWM_EN:1;                  /**< bit:      0  Active High PWM Enable                   */
    uint32_t OUTPUT_POLARITY:1;         /**< bit:      1  1 to inverse the polarity                */
    uint32_t AGCDATA_FMT:1;             /**< bit:      2  AGC data format                          */
    uint32_t SAMPLE_METHOD:1;           /**< bit:      3  Sample Method                            */
    uint32_t :1;                        /**< bit:      4  Reserved */
    uint32_t PWM_PERIOD:4;              /**< bit:   5..8  programmable PWM update period           */
    uint32_t AGCDATA_IN:10;             /**< bit:  9..18  agc value from AGC                       */
    uint32_t :2;                        /**< bit: 19..20  Reserved */
    uint32_t CLOCK_SEL:2;               /**< bit: 21..22  PWM Source Clock Frequency Select        */
    uint32_t :9;                        /**< bit: 23..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PWM3_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PWM3_CTRL_OFFSET    (0x16C)                                       /**<  (LPMCU_MISC_REGS_PWM3_CTRL) PWM3 Control Register  Offset */
#define LPMCU_MISC_REGS_PWM3_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PWM3_CTRL) PWM3 Control Register  Reset Value */

#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) Active High PWM Enable Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) Active High PWM Enable Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN    LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN_Msk           /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM3_CTRL_PWM_EN_Msk instead */
#define LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY_Pos 1                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) 1 to inverse the polarity Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) 1 to inverse the polarity Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM3_CTRL_OUTPUT_POLARITY_Msk instead */
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT_Pos 2                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) AGC data format Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) AGC data format Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_FMT_Msk instead */
#define LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Pos 3                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) Sample Method Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Msk (_U_(0x1) << LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) Sample Method Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Msk instead */
#define   LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision  */
#define   LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) Samples at PWM period but will lose LSBs if less than 1024  */
#define LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_0 (LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_0_Val << LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) Samples agcdata at >= 1024 cycles and does not lose precision Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_1 (LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_1_Val << LPMCU_MISC_REGS_PWM3_CTRL_SAMPLE_METHOD_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) Samples at PWM period but will lose LSBs if less than 1024 Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD_Pos 5                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) programmable PWM update period Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD_Msk (_U_(0xF) << LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) programmable PWM update period Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD(value) (LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD_Msk & ((value) << LPMCU_MISC_REGS_PWM3_CTRL_PWM_PERIOD_Pos))
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN_Pos 9                                              /**< (LPMCU_MISC_REGS_PWM3_CTRL) agc value from AGC Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN_Msk (_U_(0x3FF) << LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) agc value from AGC Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN(value) (LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN_Msk & ((value) << LPMCU_MISC_REGS_PWM3_CTRL_AGCDATA_IN_Pos))
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos 21                                             /**< (LPMCU_MISC_REGS_PWM3_CTRL) PWM Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) PWM Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_PWM3_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_PWM3_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_PWM3_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_PWM3_CTRL_MASK      _U_(0x67FFEF)                                  /**< \deprecated (LPMCU_MISC_REGS_PWM3_CTRL) Register MASK  (Use LPMCU_MISC_REGS_PWM3_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_PWM3_CTRL_Msk       _U_(0x67FFEF)                                  /**< (LPMCU_MISC_REGS_PWM3_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_MBIST_DUAL_STATUS : (LPMCU_MISC_REGS Offset: 0x170) (R/ 32) Reflects the status of MBIST from lpmcu and btmcu -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t MBIST_BUS:21;              /**< bit:  0..20  Observation of lpmcu and btmcu MBIST results */
    uint32_t :11;                       /**< bit: 21..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MBIST_DUAL_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_OFFSET (0x170)                                       /**<  (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Reflects the status of MBIST from lpmcu and btmcu  Offset */
#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Reflects the status of MBIST from lpmcu and btmcu  Reset Value */

#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS_Pos 0                                              /**< (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Observation of lpmcu and btmcu MBIST results Position */
#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS_Msk (_U_(0x1FFFFF) << LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS_Pos)  /**< (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Observation of lpmcu and btmcu MBIST results Mask */
#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS(value) (LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS_Msk & ((value) << LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MBIST_BUS_Pos))
#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_MASK _U_(0x1FFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Register MASK  (Use LPMCU_MISC_REGS_MBIST_DUAL_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_MBIST_DUAL_STATUS_Msk _U_(0x1FFFFF)                                  /**< (LPMCU_MISC_REGS_MBIST_DUAL_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_DUALTIMER0_CTRL : (LPMCU_MISC_REGS Offset: 0x188) (R/W 8) DUALTIMER0 Control -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  CNTR_1_ENABLE:1;           /**< bit:      0  Enable Dual Timer 1 Decoder              */
    uint8_t  CNTR_2_ENABLE:1;           /**< bit:      1  Enable Dual Timer 2 Decoder              */
    uint8_t  :6;                        /**< bit:   2..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_DUALTIMER0_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_OFFSET (0x188)                                       /**<  (LPMCU_MISC_REGS_DUALTIMER0_CTRL) DUALTIMER0 Control  Offset */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_DUALTIMER0_CTRL) DUALTIMER0 Control  Reset Value */

#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Enable Dual Timer 1 Decoder Position */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Enable Dual Timer 1 Decoder Mask */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE_Pos 1                                              /**< (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Enable Dual Timer 2 Decoder Position */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Enable Dual Timer 2 Decoder Mask */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_MASK _U_(0x03)                                      /**< \deprecated (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Register MASK  (Use LPMCU_MISC_REGS_DUALTIMER0_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_DUALTIMER0_CTRL_Msk _U_(0x03)                                      /**< (LPMCU_MISC_REGS_DUALTIMER0_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL : (LPMCU_MISC_REGS Offset: 0x190) (R/W 32) Sleep and Wakeup Control for the AON Power Sequencer -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t SLEEP_1:1;                 /**< bit:      0  Sleep Request 1 from the ARM to the AON Power Sequencer */
    uint32_t :15;                       /**< bit:  1..15  Reserved */
    uint32_t WAKEUP:1;                  /**< bit:     16  Wakeup Request from the ARM to the AON Power Sequencer */
    uint32_t :7;                        /**< bit: 17..23  Reserved */
    uint32_t RXTX_WAKEUP:1;             /**< bit:     24  Wakeup Request from the ARM to the RxTx Sequencer */
    uint32_t :7;                        /**< bit: 25..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_OFFSET (0x190)                                       /**<  (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Sleep and Wakeup Control for the AON Power Sequencer  Offset */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RESETVALUE _U_(0x1000000)                                /**<  (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Sleep and Wakeup Control for the AON Power Sequencer  Reset Value */

#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1_Pos 0                                              /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Sleep Request 1 from the ARM to the AON Power Sequencer Position */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1_Msk (_U_(0x1) << LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1_Pos)  /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Sleep Request 1 from the ARM to the AON Power Sequencer Mask */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1 LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_SLEEP_1_Msk instead */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP_Pos 16                                             /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Wakeup Request from the ARM to the AON Power Sequencer Position */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP_Msk (_U_(0x1) << LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP_Pos)  /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Wakeup Request from the ARM to the AON Power Sequencer Mask */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_WAKEUP_Msk instead */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP_Pos 24                                             /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Wakeup Request from the ARM to the RxTx Sequencer Position */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP_Msk (_U_(0x1) << LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP_Pos)  /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Wakeup Request from the ARM to the RxTx Sequencer Mask */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_RXTX_WAKEUP_Msk instead */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_MASK _U_(0x1010001)                                 /**< \deprecated (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Register MASK  (Use LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_Msk _U_(0x1010001)                                 /**< (LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0 : (LPMCU_MISC_REGS Offset: 0x1a0) (R/W 32) Mega Mux Selection -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_0:6;               /**< bit:   0..5  LP_GPIO_0 mega mux selection             */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_1:6;               /**< bit:  8..13  LP_GPIO_1 mega mux selection             */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_2:6;               /**< bit: 16..21  LP_GPIO_2 mega mux selection             */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_3:6;               /**< bit: 24..29  LP_GPIO_3 mega mux selection             */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_OFFSET (0x1A0)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) Mega Mux Selection  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) Mega Mux Selection  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_0 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_0 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_0_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_1 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_1 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_1_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_2 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_2 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_2_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_3 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) LP_GPIO_3 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_LP_GPIO_3_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1 : (LPMCU_MISC_REGS Offset: 0x1a4) (R/W 32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_4:6;               /**< bit:   0..5  LP_GPIO_4 mega mux selection             */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_5:6;               /**< bit:  8..13  LP_GPIO_5 mega mux selection             */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_6:6;               /**< bit: 16..21  LP_GPIO_6 mega mux selection             */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_7:6;               /**< bit: 24..29  LP_GPIO_7 mega mux selection             */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_OFFSET (0x1A4)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_4 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_4 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_4_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_5 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_5 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_5_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_6 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_6 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_6_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_7 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) LP_GPIO_7 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_LP_GPIO_7_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2 : (LPMCU_MISC_REGS Offset: 0x1a8) (R/W 32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_8:6;               /**< bit:   0..5  LP_GPIO_8 mega mux selection             */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_9:6;               /**< bit:  8..13  LP_GPIO_9 mega mux selection             */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_10:6;              /**< bit: 16..21  LP_GPIO_10 mega mux selection            */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_11:6;              /**< bit: 24..29  LP_GPIO_11 mega mux selection            */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_OFFSET (0x1A8)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_8 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_8 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_8_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_9 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_9 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_9_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_10 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_10 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_10_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_11 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) LP_GPIO_11 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_LP_GPIO_11_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3 : (LPMCU_MISC_REGS Offset: 0x1ac) (R/W 32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_12:6;              /**< bit:   0..5  LP_GPIO_12 mega mux selection            */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_13:6;              /**< bit:  8..13  LP_GPIO_13 mega mux selection            */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_14:6;              /**< bit: 16..21  LP_GPIO_14 mega mux selection            */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_15:6;              /**< bit: 24..29  LP_GPIO_15 mega mux selection            */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_OFFSET (0x1AC)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_12 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_12 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_12_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_13 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_13 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_13_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_14 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_14 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_14_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_15 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) LP_GPIO_15 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_LP_GPIO_15_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4 : (LPMCU_MISC_REGS Offset: 0x1b0) (R/W 32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_16:6;              /**< bit:   0..5  LP_GPIO_16 mega mux selection            */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_17:6;              /**< bit:  8..13  LP_GPIO_17 mega mux selection            */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_18:6;              /**< bit: 16..21  LP_GPIO_18 mega mux selection            */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_19:6;              /**< bit: 24..29  LP_GPIO_19 mega mux selection            */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_OFFSET (0x1B0)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_16 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_16 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_16_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_17 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_17 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_17_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_18 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_18 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_18_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_19 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) LP_GPIO_19 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_LP_GPIO_19_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4) Register Mask  */


/* -------- LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5 : (LPMCU_MISC_REGS Offset: 0x1b4) (R/W 32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t LP_GPIO_20:6;              /**< bit:   0..5  LP_GPIO_20 mega mux selection            */
    uint32_t :2;                        /**< bit:   6..7  Reserved */
    uint32_t LP_GPIO_21:6;              /**< bit:  8..13  LP_GPIO_21 mega mux selection            */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t LP_GPIO_22:6;              /**< bit: 16..21  LP_GPIO_22 mega mux selection            */
    uint32_t :2;                        /**< bit: 22..23  Reserved */
    uint32_t LP_GPIO_23:6;              /**< bit: 24..29  LP_GPIO_23 mega mux selection            */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_OFFSET (0x1B4)                                       /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Offset */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_RESETVALUE _U_(0x3F3F3F3F)                               /**<  (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet)  Reset Value */

#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos 0                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_20 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_20 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_20_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos 8                                              /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_21 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_21 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_21_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos 16                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_22 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_22 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_22_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos 24                                             /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_23 mega mux selection Position */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Msk (_U_(0x3F) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) LP_GPIO_23 mega mux selection Mask */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23(value) (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Msk & ((value) << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos))
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RXD_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_TXD_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_CTS_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RTS_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RXD_Val _U_(0x4)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_TXD_Val _U_(0x5)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_CTS_Val _U_(0x6)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RTS_Val _U_(0x7)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SDA_Val _U_(0x8)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SCL_Val _U_(0x9)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SDA_Val _U_(0xA)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SCL_Val _U_(0xB)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM0_OUT_Val _U_(0xC)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM1_OUT_Val _U_(0xD)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM2_OUT_Val _U_(0xE)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM3_OUT_Val _U_(0xF)                                       /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_32KHZ_CLK_Val _U_(0x10)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_TX_Val _U_(0x11)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_RX_Val _U_(0x12)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_TX_Val _U_(0x13)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RX_Val _U_(0x14)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_IN_PROCESS_Val _U_(0x15)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_MBSY_Val _U_(0x16)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_SYNC_Val _U_(0x17)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RXNTX_Val _U_(0x18)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_0_Val _U_(0x19)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_1_Val _U_(0x1A)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_2_Val _U_(0x1B)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_3_Val _U_(0x1C)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_A_Val _U_(0x1D)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_B_Val _U_(0x1E)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_A_Val _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_B_Val _U_(0x20)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_A_Val _U_(0x21)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A  */
#define   LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_B_Val _U_(0x22)                                      /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART0_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART0_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_TXD (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_TXD_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_TXD Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_CTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_CTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_CTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RTS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_UART1_RTS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) UART1_RTS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C0_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C0_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SDA (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SDA_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SDA Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SCL (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_I2C1_SCL_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) I2C1_SCL Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM0_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM0_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM0_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM1_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM1_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM1_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM2_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM2_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM2_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM3_OUT (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_PWM3_OUT_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) PWM3_OUT Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_32KHZ_CLK (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_32KHZ_CLK_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) 32KHZ_CLK Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_WLAN_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_WLAN_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_TX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_TX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_TX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_IN_PROCESS (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_IN_PROCESS_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_IN_PROCESS Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_MBSY (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_MBSY_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_MBSY Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_SYNC (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_SYNC_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_SYNC Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RXNTX (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_RXNTX_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_RXNTX Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_0 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_0_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_0 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_1 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_1_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_1 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_2 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_2_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_2 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_3 (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_COEX_BLE_PTI_3_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) COEX_BLE_PTI_3 Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC0_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC0_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC1_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC1_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_A (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_A_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_A Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_B (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_QUAD_DEC2_B_Val << LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_LP_GPIO_23_Pos)  /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) QUAD_DEC2_B Position  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_MASK _U_(0x3F3F3F3F)                                /**< \deprecated (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) Register MASK  (Use LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_Msk instead)  */
#define LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_Msk _U_(0x3F3F3F3F)                                /**< (LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL : (LPMCU_MISC_REGS Offset: 0x1c0) (R/W 32) Clock control for the Sensor ADC -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FRAC_PART:8;               /**< bit:   0..7  Fractional part for the clock divider    */
    uint32_t INT_PART:12;               /**< bit:  8..19  Integer part for the clock divider       */
    uint32_t INVERT:1;                  /**< bit:     20  Invert Sens ADC Clock                    */
    uint32_t :11;                       /**< bit: 21..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_OFFSET (0x1C0)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Clock control for the Sensor ADC  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_RESETVALUE _U_(0x1A00)                                   /**<  (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Clock control for the Sensor ADC  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Fractional part for the clock divider Position */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART_Msk (_U_(0xFF) << LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Fractional part for the clock divider Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART(value) (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_FRAC_PART_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART_Pos 8                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Integer part for the clock divider Position */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART_Msk (_U_(0xFFF) << LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Integer part for the clock divider Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART(value) (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INT_PART_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT_Pos 20                                             /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Invert Sens ADC Clock Position */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT_Msk (_U_(0x1) << LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Invert Sens ADC Clock Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_INVERT_Msk instead */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_MASK _U_(0x1FFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_Msk _U_(0x1FFFFF)                                  /**< (LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS : (LPMCU_MISC_REGS Offset: 0x1c4) (R/ 32) Raw Status from the Sensor ADC -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t ADC_OUT:11;                /**< bit:  0..10  Raw Status of the sens_adc_out port of the PMU */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t ADC_CH:2;                  /**< bit: 12..13  Raw Status of the sens_adc_ch port of the PMU */
    uint32_t :2;                        /**< bit: 14..15  Reserved */
    uint32_t ADC_DONE:1;                /**< bit:     16  Raw Status of the sens_adc_done port of the PMU */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_OFFSET (0x1C4)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status from the Sensor ADC  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status from the Sensor ADC  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_out port of the PMU Position */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT_Msk (_U_(0x7FF) << LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_out port of the PMU Mask */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT(value) (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_OUT_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH_Pos 12                                             /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_ch port of the PMU Position */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH_Msk (_U_(0x3) << LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_ch port of the PMU Mask */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH(value) (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_CH_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE_Pos 16                                             /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_done port of the PMU Position */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE_Msk (_U_(0x1) << LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Raw Status of the sens_adc_done port of the PMU Mask */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_ADC_DONE_Msk instead */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_MASK _U_(0x137FF)                                   /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_Msk _U_(0x137FF)                                   /**< (LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_CH0_DATA : (LPMCU_MISC_REGS Offset: 0x1c8) (R/ 16) Current data of the Sensor ADC for Channel 0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t SENS_ADC_CH0_DATA:11;      /**< bit:  0..10                                           */
    uint16_t :5;                        /**< bit: 11..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_OFFSET (0x1C8)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA) Current data of the Sensor ADC for Channel 0  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA) Current data of the Sensor ADC for Channel 0  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA)  Position */
#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA_Msk (_U_(0x7FF) << LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA)  Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA(value) (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_SENS_ADC_CH0_DATA_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_MASK _U_(0x7FF)                                     /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_Msk _U_(0x7FF)                                     /**< (LPMCU_MISC_REGS_SENS_ADC_CH0_DATA) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_CH1_DATA : (LPMCU_MISC_REGS Offset: 0x1cc) (R/ 16) Current data of the Sensor ADC for Channel 1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t SENS_ADC_CH1_DATA:11;      /**< bit:  0..10                                           */
    uint16_t :5;                        /**< bit: 11..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_OFFSET (0x1CC)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA) Current data of the Sensor ADC for Channel 1  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA) Current data of the Sensor ADC for Channel 1  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA)  Position */
#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA_Msk (_U_(0x7FF) << LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA)  Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA(value) (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_SENS_ADC_CH1_DATA_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_MASK _U_(0x7FF)                                     /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_Msk _U_(0x7FF)                                     /**< (LPMCU_MISC_REGS_SENS_ADC_CH1_DATA) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_CH2_DATA : (LPMCU_MISC_REGS Offset: 0x1d0) (R/ 16) Current data of the Sensor ADC for Channel 2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t SENS_ADC_CH2_DATA:11;      /**< bit:  0..10                                           */
    uint16_t :5;                        /**< bit: 11..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_OFFSET (0x1D0)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA) Current data of the Sensor ADC for Channel 2  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA) Current data of the Sensor ADC for Channel 2  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA)  Position */
#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA_Msk (_U_(0x7FF) << LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA)  Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA(value) (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_SENS_ADC_CH2_DATA_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_MASK _U_(0x7FF)                                     /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_Msk _U_(0x7FF)                                     /**< (LPMCU_MISC_REGS_SENS_ADC_CH2_DATA) Register Mask  */


/* -------- LPMCU_MISC_REGS_SENS_ADC_CH3_DATA : (LPMCU_MISC_REGS Offset: 0x1d4) (R/ 16) Current data of the Sensor ADC for Channel 3 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t SENS_ADC_CH3_DATA:11;      /**< bit:  0..10                                           */
    uint16_t :5;                        /**< bit: 11..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_OFFSET (0x1D4)                                       /**<  (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA) Current data of the Sensor ADC for Channel 3  Offset */
#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA) Current data of the Sensor ADC for Channel 3  Reset Value */

#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA_Pos 0                                              /**< (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA)  Position */
#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA_Msk (_U_(0x7FF) << LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA_Pos)  /**< (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA)  Mask */
#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA(value) (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA_Msk & ((value) << LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_SENS_ADC_CH3_DATA_Pos))
#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_MASK _U_(0x7FF)                                     /**< \deprecated (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA) Register MASK  (Use LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_Msk instead)  */
#define LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_Msk _U_(0x7FF)                                     /**< (LPMCU_MISC_REGS_SENS_ADC_CH3_DATA) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_CTRL : (LPMCU_MISC_REGS Offset: 0x1e8) (R/W 16) Configure the IRQ inputs to the system as either Rising Edge or Level Shift -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t BLE_LVL_OSC_EN_IRQ_EN:1;   /**< bit:      0  Enable the OSC_en signal for Level Shift and Clear Mode */
    uint16_t BLE_LVL_OSC_EN_IRQ_CLR:1;  /**< bit:      1  if ble_lvl_osc_en_irq_en is enabled, setting irq clr to 1 will clear the irq request */
    uint16_t BLE_LVL_WAKEUP_LP_IRQ_EN:1;  /**< bit:      2  Enable the wakeup_lp signal for Level Shift and Clear Mode */
    uint16_t BLE_LVL_WAKEUP_LP_IRQ_CLR:1;  /**< bit:      3  if ble_lvl_wakeup_lp_irq_en is enabled, setting irq clr to 1 will clear the irq request */
    uint16_t BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN:1;  /**< bit:      4  Enable the lp_out_of_reset signal for Level Shift and Clear Mode */
    uint16_t BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR:1;  /**< bit:      5  if lp_out_of_reset is enabled, setting irq clr to 1 will clear the irq request */
    uint16_t BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN:1;  /**< bit:      6  Enable the core_out_of_reset signal for Level Shift and Clear Mode */
    uint16_t BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR:1;  /**< bit:      7  if core_out_of_reset is enabled, setting irq clr to 1 will clear the irq request */
    uint16_t RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN:1;  /**< bit:      8  Enable the rxtx_seq_in_sleep signal for Level Shift and Clear Mode */
    uint16_t RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR:1;  /**< bit:      9  if rxtx_seq_in_sleep is enabled, setting irq clr to 1 will clear the irq request */
    uint16_t :6;                        /**< bit: 10..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_CTRL_OFFSET     (0x1E8)                                       /**<  (LPMCU_MISC_REGS_IRQ_CTRL) Configure the IRQ inputs to the system as either Rising Edge or Level Shift  Offset */
#define LPMCU_MISC_REGS_IRQ_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_CTRL) Configure the IRQ inputs to the system as either Rising Edge or Level Shift  Reset Value */

#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the OSC_en signal for Level Shift and Clear Mode Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the OSC_en signal for Level Shift and Clear Mode Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR_Pos 1                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) if ble_lvl_osc_en_irq_en is enabled, setting irq clr to 1 will clear the irq request Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) if ble_lvl_osc_en_irq_en is enabled, setting irq clr to 1 will clear the irq request Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_OSC_EN_IRQ_CLR_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the wakeup_lp signal for Level Shift and Clear Mode Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the wakeup_lp signal for Level Shift and Clear Mode Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR_Pos 3                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) if ble_lvl_wakeup_lp_irq_en is enabled, setting irq clr to 1 will clear the irq request Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) if ble_lvl_wakeup_lp_irq_en is enabled, setting irq clr to 1 will clear the irq request Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_WAKEUP_LP_IRQ_CLR_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the lp_out_of_reset signal for Level Shift and Clear Mode Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the lp_out_of_reset signal for Level Shift and Clear Mode Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR_Pos 5                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) if lp_out_of_reset is enabled, setting irq clr to 1 will clear the irq request Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) if lp_out_of_reset is enabled, setting irq clr to 1 will clear the irq request Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_LP_OUT_OF_RESET_IRQ_CLR_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN_Pos 6                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the core_out_of_reset signal for Level Shift and Clear Mode Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the core_out_of_reset signal for Level Shift and Clear Mode Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR_Pos 7                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) if core_out_of_reset is enabled, setting irq clr to 1 will clear the irq request Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) if core_out_of_reset is enabled, setting irq clr to 1 will clear the irq request Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_BLE_LVL_BLE_CORE_OUT_OF_RESET_IRQ_CLR_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the rxtx_seq_in_sleep signal for Level Shift and Clear Mode Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) Enable the rxtx_seq_in_sleep signal for Level Shift and Clear Mode Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR_Pos 9                                              /**< (LPMCU_MISC_REGS_IRQ_CTRL) if rxtx_seq_in_sleep is enabled, setting irq clr to 1 will clear the irq request Position */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR_Pos)  /**< (LPMCU_MISC_REGS_IRQ_CTRL) if rxtx_seq_in_sleep is enabled, setting irq clr to 1 will clear the irq request Mask */
#define LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_CTRL_RXTX_LVL_RXTX_SEQ_IN_SLEEP_IRQ_CLR_Msk instead */
#define LPMCU_MISC_REGS_IRQ_CTRL_MASK       _U_(0x3FF)                                     /**< \deprecated (LPMCU_MISC_REGS_IRQ_CTRL) Register MASK  (Use LPMCU_MISC_REGS_IRQ_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_CTRL_Msk        _U_(0x3FF)                                     /**< (LPMCU_MISC_REGS_IRQ_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_IRQ_STS : (LPMCU_MISC_REGS Offset: 0x1ec) (R/ 8) Read the raw (no level or rise detect) IRQ inputs to the system from the designated cores -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  BLE_OSC_EN_IRQ:1;          /**< bit:      0  Read the OSC_en signal from the lp core  */
    uint8_t  BLE_WAKEUP_LP_IRQ:1;       /**< bit:      1  Read the wakeup_lp_irq signal from the lp core */
    uint8_t  BLE_LP_OUT_OF_RESET_IRQ:1;  /**< bit:      2  Read the ble_lp_out_of_reset signal from the ble lp core */
    uint8_t  BLE_CORE_OUT_OF_RESET_IRQ_EN:1;  /**< bit:      3  Read the ble_core_out_of_reset_irq signal from the ble core */
    uint8_t  EFUSE_OUT_OF_RESET:1;      /**< bit:      4  Read the efuse_out_of_reset signal from the efuse wrapper */
    uint8_t  :3;                        /**< bit:   5..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_IRQ_STS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_IRQ_STS_OFFSET      (0x1EC)                                       /**<  (LPMCU_MISC_REGS_IRQ_STS) Read the raw (no level or rise detect) IRQ inputs to the system from the designated cores  Offset */
#define LPMCU_MISC_REGS_IRQ_STS_RESETVALUE  _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_IRQ_STS) Read the raw (no level or rise detect) IRQ inputs to the system from the designated cores  Reset Value */

#define LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ_Pos 0                                              /**< (LPMCU_MISC_REGS_IRQ_STS) Read the OSC_en signal from the lp core Position */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ_Pos)  /**< (LPMCU_MISC_REGS_IRQ_STS) Read the OSC_en signal from the lp core Mask */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_STS_BLE_OSC_EN_IRQ_Msk instead */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ_Pos 1                                              /**< (LPMCU_MISC_REGS_IRQ_STS) Read the wakeup_lp_irq signal from the lp core Position */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ_Pos)  /**< (LPMCU_MISC_REGS_IRQ_STS) Read the wakeup_lp_irq signal from the lp core Mask */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_STS_BLE_WAKEUP_LP_IRQ_Msk instead */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ_Pos 2                                              /**< (LPMCU_MISC_REGS_IRQ_STS) Read the ble_lp_out_of_reset signal from the ble lp core Position */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ_Pos)  /**< (LPMCU_MISC_REGS_IRQ_STS) Read the ble_lp_out_of_reset signal from the ble lp core Mask */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_STS_BLE_LP_OUT_OF_RESET_IRQ_Msk instead */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN_Pos 3                                              /**< (LPMCU_MISC_REGS_IRQ_STS) Read the ble_core_out_of_reset_irq signal from the ble core Position */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN_Pos)  /**< (LPMCU_MISC_REGS_IRQ_STS) Read the ble_core_out_of_reset_irq signal from the ble core Mask */
#define LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_STS_BLE_CORE_OUT_OF_RESET_IRQ_EN_Msk instead */
#define LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET_Pos 4                                              /**< (LPMCU_MISC_REGS_IRQ_STS) Read the efuse_out_of_reset signal from the efuse wrapper Position */
#define LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET_Msk (_U_(0x1) << LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET_Pos)  /**< (LPMCU_MISC_REGS_IRQ_STS) Read the efuse_out_of_reset signal from the efuse wrapper Mask */
#define LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_IRQ_STS_EFUSE_OUT_OF_RESET_Msk instead */
#define LPMCU_MISC_REGS_IRQ_STS_MASK        _U_(0x1F)                                      /**< \deprecated (LPMCU_MISC_REGS_IRQ_STS) Register MASK  (Use LPMCU_MISC_REGS_IRQ_STS_Msk instead)  */
#define LPMCU_MISC_REGS_IRQ_STS_Msk         _U_(0x1F)                                      /**< (LPMCU_MISC_REGS_IRQ_STS) Register Mask  */


/* -------- LPMCU_MISC_REGS_MSEMI_MEM_CTRL : (LPMCU_MISC_REGS Offset: 0x200) (R/W 32) Control the rwm, rm and wm on the Mobile Semi Memories -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t PD2A_MEM_RWM_EN:1;         /**< bit:      0  RWM control for pd2a memory              */
    uint32_t PD2A_MEM_WM_EN:1;          /**< bit:      1  WM control for pd2a memory               */
    uint32_t PD2A_MEM_RM_EN:1;          /**< bit:      2  RM control for pd2a memory               */
    uint32_t :1;                        /**< bit:      3  Reserved */
    uint32_t PD2B_MEM_RWM_EN:1;         /**< bit:      4  RWM control for pd2b memory              */
    uint32_t PD2B_MEM_WM_EN:1;          /**< bit:      5  WM control for pd2b memory               */
    uint32_t PD2B_MEM_RM_EN:1;          /**< bit:      6  RM control for pd2b memory               */
    uint32_t :1;                        /**< bit:      7  Reserved */
    uint32_t PD3A_MEM_RWM_EN:1;         /**< bit:      8  RWM control for pd3a memory              */
    uint32_t PD3A_MEM_WM_EN:1;          /**< bit:      9  WM control for pd3a memory               */
    uint32_t PD3A_MEM_RM_EN:1;          /**< bit:     10  RM control for pd3a memory               */
    uint32_t :1;                        /**< bit:     11  Reserved */
    uint32_t PD3B_MEM_RWM_EN:1;         /**< bit:     12  RWM control for pd3b memory              */
    uint32_t PD3B_MEM_WM_EN:1;          /**< bit:     13  WM control for pd3b memory               */
    uint32_t PD3B_MEM_RM_EN:1;          /**< bit:     14  RM control for pd3b memory               */
    uint32_t :1;                        /**< bit:     15  Reserved */
    uint32_t PD3C_MEM_RWM_EN:1;         /**< bit:     16  RWM control for pd3c memory              */
    uint32_t PD3C_MEM_WM_EN:1;          /**< bit:     17  WM control for pd3c memory               */
    uint32_t PD3C_MEM_RM_EN:1;          /**< bit:     18  RM control for pd3c memory               */
    uint32_t :1;                        /**< bit:     19  Reserved */
    uint32_t PD5_MEM_RWM_EN:1;          /**< bit:     20  RWM control for pd5 memory               */
    uint32_t PD5_MEM_WM_EN:1;           /**< bit:     21  WM control for pd5 memory                */
    uint32_t PD5_MEM_RM_EN:1;           /**< bit:     22  RM control for pd5 memory                */
    uint32_t :1;                        /**< bit:     23  Reserved */
    uint32_t PD8_MEM_RWM_EN:1;          /**< bit:     24  RWM control for pd8 memory               */
    uint32_t PD8_MEM_WM_EN:1;           /**< bit:     25  WM control for pd8 memory                */
    uint32_t PD8_MEM_RM_EN:1;           /**< bit:     26  RM control for pd8 memory                */
    uint32_t :5;                        /**< bit: 27..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MSEMI_MEM_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_OFFSET (0x200)                                       /**<  (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) Control the rwm, rm and wm on the Mobile Semi Memories  Offset */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) Control the rwm, rm and wm on the Mobile Semi Memories  Reset Value */

#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd2a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd2a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd2a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd2a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd2a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd2a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2A_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd2b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd2b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN_Pos 5                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd2b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd2b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN_Pos 6                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd2b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd2b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD2B_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN_Pos 9                                              /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN_Pos 10                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3a memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3a memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3A_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN_Pos 12                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN_Pos 13                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN_Pos 14                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3b memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3b memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3B_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN_Pos 16                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3c memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd3c memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN_Pos 17                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3c memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd3c memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN_Pos 18                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3c memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd3c memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD3C_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN_Pos 20                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd5 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd5 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN_Pos 21                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd5 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd5 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN_Pos 22                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd5 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd5 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD5_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN_Pos 24                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd8 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RWM control for pd8 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RWM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN_Pos 25                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd8 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) WM control for pd8 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_WM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN_Pos 26                                             /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd8 memory Position */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN_Pos)  /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) RM control for pd8 memory Mask */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_PD8_MEM_RM_EN_Msk instead */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_MASK _U_(0x7777777)                                 /**< \deprecated (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) Register MASK  (Use LPMCU_MISC_REGS_MSEMI_MEM_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_MSEMI_MEM_CTRL_Msk  _U_(0x7777777)                                 /**< (LPMCU_MISC_REGS_MSEMI_MEM_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_EFUSE_1_STATUS_3 : (LPMCU_MISC_REGS Offset: 0x204) (R/W 32) EFUSE_1_3 Status -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t EFUSE_1_STATUS_3:32;       /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_EFUSE_1_STATUS_3_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_OFFSET (0x204)                                       /**<  (LPMCU_MISC_REGS_EFUSE_1_STATUS_3) EFUSE_1_3 Status  Offset */
#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_EFUSE_1_STATUS_3) EFUSE_1_3 Status  Reset Value */

#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3_Pos 0                                              /**< (LPMCU_MISC_REGS_EFUSE_1_STATUS_3)  Position */
#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3_Pos)  /**< (LPMCU_MISC_REGS_EFUSE_1_STATUS_3)  Mask */
#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3(value) (LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3_Msk & ((value) << LPMCU_MISC_REGS_EFUSE_1_STATUS_3_EFUSE_1_STATUS_3_Pos))
#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_EFUSE_1_STATUS_3) Register MASK  (Use LPMCU_MISC_REGS_EFUSE_1_STATUS_3_Msk instead)  */
#define LPMCU_MISC_REGS_EFUSE_1_STATUS_3_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_EFUSE_1_STATUS_3) Register Mask  */


/* -------- LPMCU_MISC_REGS_LPMCU_FORCE_CTRL : (LPMCU_MISC_REGS Offset: 0x210) (R/W 16) Miscellaneous Force control values for LPMCU -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t SCLK_EN:1;                 /**< bit:      0  Enable Force Control of SCLK             */
    uint16_t SCLK_VAL:1;                /**< bit:      1  Enable Force Control of SCLK Value       */
    uint16_t DCLK_EN:1;                 /**< bit:      2  Enable Force Control of DCLK             */
    uint16_t DCLK_VAL:1;                /**< bit:      3  Enable Force Control of DCLK Value       */
    uint16_t PCLKG_EN:1;                /**< bit:      4  Enable Force Control of PCLKG            */
    uint16_t PCLKG_VAL:1;               /**< bit:      5  Enable Force Control of PCLKG Value      */
    uint16_t WICENREQ_EN:1;             /**< bit:      6  Enable Force Control of WIC Enable Request to use WIC during Sleep Conditions */
    uint16_t WICENREQ_VAL:1;            /**< bit:      7  Enable Force Control of WIC Enable Value */
    uint16_t GPIO_GCLK_EN:1;            /**< bit:      8  Enable Force Control of GPIO Modules Clk (override clock gating and enable) */
    uint16_t COUNTER_PGCLK_EN:1;        /**< bit:      9  Enable Force Control of Counter Modules Clk (override clock gating and enable) */
    uint16_t DUALTIMER_PGCLK_EN:1;      /**< bit:     10  Enable Force Control of DualTimer Modules PGClk (override clock gating and enable) */
    uint16_t WICENACK_EN:1;             /**< bit:     11  Enable Force Control of WIC ACK to use WIC during Sleep Conditions - Requires Handshake from WIC when its ok to sleep */
    uint16_t WICENACK_VAL:1;            /**< bit:     12  Enable Force Control of WIC Enable Value - Requires Handshake from WIC when its ok to sleep */
    uint16_t :3;                        /**< bit: 13..15  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_OFFSET (0x210)                                       /**<  (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Miscellaneous Force control values for LPMCU  Offset */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_RESETVALUE _U_(0xF7F)                                    /**<  (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Miscellaneous Force control values for LPMCU  Reset Value */

#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of SCLK Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of SCLK Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL_Pos 1                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of SCLK Value Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of SCLK Value Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_SCLK_VAL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DCLK Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DCLK Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL_Pos 3                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DCLK Value Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DCLK Value Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DCLK_VAL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of PCLKG Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of PCLKG Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL_Pos 5                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of PCLKG Value Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of PCLKG Value Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_PCLKG_VAL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN_Pos 6                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Request to use WIC during Sleep Conditions Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Request to use WIC during Sleep Conditions Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL_Pos 7                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Value Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Value Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENREQ_VAL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of GPIO Modules Clk (override clock gating and enable) Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of GPIO Modules Clk (override clock gating and enable) Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_GPIO_GCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN_Pos 9                                              /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of Counter Modules Clk (override clock gating and enable) Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of Counter Modules Clk (override clock gating and enable) Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_COUNTER_PGCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN_Pos 10                                             /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DualTimer Modules PGClk (override clock gating and enable) Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of DualTimer Modules PGClk (override clock gating and enable) Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_DUALTIMER_PGCLK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN_Pos 11                                             /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC ACK to use WIC during Sleep Conditions - Requires Handshake from WIC when its ok to sleep Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC ACK to use WIC during Sleep Conditions - Requires Handshake from WIC when its ok to sleep Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_EN_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL_Pos 12                                             /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Value - Requires Handshake from WIC when its ok to sleep Position */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL_Msk (_U_(0x1) << LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL_Pos)  /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Enable Force Control of WIC Enable Value - Requires Handshake from WIC when its ok to sleep Mask */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_WICENACK_VAL_Msk instead */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_MASK _U_(0x1FFF)                                    /**< \deprecated (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Register MASK  (Use LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_Msk _U_(0x1FFF)                                    /**< (LPMCU_MISC_REGS_LPMCU_FORCE_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_ARM_IRQ_STATUS_0 : (LPMCU_MISC_REGS Offset: 0x214) (R/ 32) ARM Cortex M0 IRQ Status -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t ARM_IRQ_STATUS_0:32;       /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_OFFSET (0x214)                                       /**<  (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0) ARM Cortex M0 IRQ Status  Offset */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0) ARM Cortex M0 IRQ Status  Reset Value */

#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0_Pos 0                                              /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0)  Position */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0_Pos)  /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0)  Mask */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0(value) (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0_Msk & ((value) << LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_ARM_IRQ_STATUS_0_Pos))
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0) Register MASK  (Use LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_Msk instead)  */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_0) Register Mask  */


/* -------- LPMCU_MISC_REGS_ARM_IRQ_STATUS_1 : (LPMCU_MISC_REGS Offset: 0x218) (R/ 32) ARM Cortex M0 IRQ Status -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t ARM_IRQ_STATUS_1:32;       /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_OFFSET (0x218)                                       /**<  (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1) ARM Cortex M0 IRQ Status  Offset */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1) ARM Cortex M0 IRQ Status  Reset Value */

#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1_Pos 0                                              /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1)  Position */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1_Pos)  /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1)  Mask */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1(value) (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1_Msk & ((value) << LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_ARM_IRQ_STATUS_1_Pos))
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1) Register MASK  (Use LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_Msk instead)  */
#define LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_ARM_IRQ_STATUS_1) Register Mask  */


/* -------- LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES : (LPMCU_MISC_REGS Offset: 0x240) (R/W 8) BLE Deep Sleep Enables -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  FW_TIMER_CORR_EN:1;        /**< bit:      0  Enables FW Timer Correction Operation    */
    uint8_t  HW_TIMER_CORR_EN:1;        /**< bit:      1  Enables HW Timer Correction Operation    */
    uint8_t  :6;                        /**< bit:   2..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_OFFSET (0x240)                                       /**<  (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) BLE Deep Sleep Enables  Offset */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_RESETVALUE _U_(0x01)                                     /**<  (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) BLE Deep Sleep Enables  Reset Value */

#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Enables FW Timer Correction Operation Position */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN_Pos)  /**< (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Enables FW Timer Correction Operation Mask */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_FW_TIMER_CORR_EN_Msk instead */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Enables HW Timer Correction Operation Position */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN_Pos)  /**< (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Enables HW Timer Correction Operation Mask */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_HW_TIMER_CORR_EN_Msk instead */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_MASK _U_(0x03)                                      /**< \deprecated (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Register MASK  (Use LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_Msk instead)  */
#define LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_Msk _U_(0x03)                                      /**< (LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES) Register Mask  */


/* -------- LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR : (LPMCU_MISC_REGS Offset: 0x244) (R/W 32) Configures the HW auto correction algorithm of the fine/base timers after wakeup from deep sleep -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t WAIT:10;                   /**< bit:   0..9  Wait time in us after wakeup before correction begins */
    uint32_t :2;                        /**< bit: 10..11  Reserved */
    uint32_t RTC_TOSC:18;               /**< bit: 12..29  Period of RTC clock in us [7.11]         */
    uint32_t :2;                        /**< bit: 30..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_OFFSET (0x244)                                       /**<  (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Configures the HW auto correction algorithm of the fine/base timers after wakeup from deep sleep  Offset */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RESETVALUE _U_(0xF424000)                                /**<  (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Configures the HW auto correction algorithm of the fine/base timers after wakeup from deep sleep  Reset Value */

#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT_Pos 0                                              /**< (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Wait time in us after wakeup before correction begins Position */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT_Msk (_U_(0x3FF) << LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT_Pos)  /**< (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Wait time in us after wakeup before correction begins Mask */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT(value) (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT_Msk & ((value) << LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_WAIT_Pos))
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC_Pos 12                                             /**< (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Period of RTC clock in us [7.11] Position */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC_Msk (_U_(0x3FFFF) << LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC_Pos)  /**< (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Period of RTC clock in us [7.11] Mask */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC(value) (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC_Msk & ((value) << LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_RTC_TOSC_Pos))
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_MASK _U_(0x3FFFF3FF)                                /**< \deprecated (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Register MASK  (Use LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_Msk instead)  */
#define LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_Msk _U_(0x3FFFF3FF)                                /**< (LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR : (LPMCU_MISC_REGS Offset: 0x254) (R/W 32) ARM Cortex M0 idram 1 remap base addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_IDRAM1_BASE_ADDR:32;  /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_OFFSET (0x254)                                       /**<  (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR) ARM Cortex M0 idram 1 remap base addr  Offset */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_RESETVALUE _U_(0x8000)                                   /**<  (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR) ARM Cortex M0 idram 1 remap base addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR(value) (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_REMAP_IDRAM1_BASE_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR : (LPMCU_MISC_REGS Offset: 0x258) (R/W 32) ARM Cortex M0 idram 1 remap end addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_IDRAM1_END_ADDR:32;  /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_OFFSET (0x258)                                       /**<  (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR) ARM Cortex M0 idram 1 remap end addr  Offset */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_RESETVALUE _U_(0x1FFFF)                                  /**<  (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR) ARM Cortex M0 idram 1 remap end addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR(value) (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_REMAP_IDRAM1_END_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR : (LPMCU_MISC_REGS Offset: 0x25c) (R/W 32) ARM Cortex M0 idram 2 remap base addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_IDRAM2_BASE_ADDR:32;  /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_OFFSET (0x25C)                                       /**<  (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR) ARM Cortex M0 idram 2 remap base addr  Offset */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR) ARM Cortex M0 idram 2 remap base addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR(value) (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_REMAP_IDRAM2_BASE_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR : (LPMCU_MISC_REGS Offset: 0x260) (R/W 32) ARM Cortex M0 idram 2 remap end addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_IDRAM2_END_ADDR:32;  /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_OFFSET (0x260)                                       /**<  (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR) ARM Cortex M0 idram 2 remap end addr  Offset */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_RESETVALUE _U_(0x7FFF)                                   /**<  (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR) ARM Cortex M0 idram 2 remap end addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR(value) (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_REMAP_IDRAM2_END_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR : (LPMCU_MISC_REGS Offset: 0x264) (R/W 32) ARM Cortex M0 bootrom remap base addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_BOOT_BASE_ADDR:32;   /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_OFFSET (0x264)                                       /**<  (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR) ARM Cortex M0 bootrom remap base addr  Offset */
#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_RESETVALUE _U_(0x10000000)                               /**<  (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR) ARM Cortex M0 bootrom remap base addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR(value) (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_REMAP_BOOT_BASE_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR : (LPMCU_MISC_REGS Offset: 0x268) (R/W 32) ARM Cortex M0 bootrom remap end addr -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t REMAP_BOOT_END_ADDR:32;    /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_OFFSET (0x268)                                       /**<  (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR) ARM Cortex M0 bootrom remap end addr  Offset */
#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_RESETVALUE _U_(0x1001FFFF)                               /**<  (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR) ARM Cortex M0 bootrom remap end addr  Reset Value */

#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR_Pos 0                                              /**< (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR)  Position */
#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR_Pos)  /**< (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR)  Mask */
#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR(value) (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR_Msk & ((value) << LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_REMAP_BOOT_END_ADDR_Pos))
#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR) Register MASK  (Use LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_Msk instead)  */
#define LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC_IRQS : (LPMCU_MISC_REGS Offset: 0x280) (R/ 8) Reflects the IRQ status of the Quad Decoders -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  QUAD_DEC0_IRQ:1;           /**< bit:      0  QUAD_DEC0 Interrupt                      */
    uint8_t  QUAD_DEC1_IRQ:1;           /**< bit:      1  QUAD_DEC1 Interrupt                      */
    uint8_t  QUAD_DEC2_IRQ:1;           /**< bit:      2  QUAD_DEC2 Interrupt                      */
    uint8_t  :5;                        /**< bit:   3..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC_IRQS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_OFFSET (0x280)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC_IRQS) Reflects the IRQ status of the Quad Decoders  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC_IRQS) Reflects the IRQ status of the Quad Decoders  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC0 Interrupt Position */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC0 Interrupt Mask */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC0_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ_Pos 1                                              /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC1 Interrupt Position */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC1 Interrupt Mask */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC1_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ_Pos 2                                              /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC2 Interrupt Position */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) QUAD_DEC2 Interrupt Mask */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ_Msk  /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC_IRQS_QUAD_DEC2_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_MASK  _U_(0x07)                                      /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC_IRQS) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC_IRQS_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC_IRQS_Msk   _U_(0x07)                                      /**< (LPMCU_MISC_REGS_QUAD_DEC_IRQS) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC0_STATUS : (LPMCU_MISC_REGS Offset: 0x284) (R/ 16) Current status of QUAD_DEC0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t COUNT:16;                  /**< bit:  0..15  Current count of QUAD_DEC0               */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC0_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_OFFSET (0x284)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Current status of QUAD_DEC0  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Current status of QUAD_DEC0  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Current count of QUAD_DEC0 Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Current count of QUAD_DEC0 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT(value) (LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC0_STATUS_COUNT_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_MASK _U_(0xFFFF)                                    /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC0_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC0_STATUS_Msk _U_(0xFFFF)                                    /**< (LPMCU_MISC_REGS_QUAD_DEC0_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC1_STATUS : (LPMCU_MISC_REGS Offset: 0x288) (R/ 16) Current status of QUAD_DEC1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t COUNT:16;                  /**< bit:  0..15  Current count of QUAD_DEC1               */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC1_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_OFFSET (0x288)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Current status of QUAD_DEC1  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Current status of QUAD_DEC1  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Current count of QUAD_DEC1 Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Current count of QUAD_DEC1 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT(value) (LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC1_STATUS_COUNT_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_MASK _U_(0xFFFF)                                    /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC1_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC1_STATUS_Msk _U_(0xFFFF)                                    /**< (LPMCU_MISC_REGS_QUAD_DEC1_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC2_STATUS : (LPMCU_MISC_REGS Offset: 0x28c) (R/ 16) Current status of QUAD_DEC2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t COUNT:16;                  /**< bit:  0..15  Current count of QUAD_DEC2               */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC2_STATUS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_OFFSET (0x28C)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Current status of QUAD_DEC2  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Current status of QUAD_DEC2  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Current count of QUAD_DEC2 Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Current count of QUAD_DEC2 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT(value) (LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC2_STATUS_COUNT_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_MASK _U_(0xFFFF)                                    /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC2_STATUS_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC2_STATUS_Msk _U_(0xFFFF)                                    /**< (LPMCU_MISC_REGS_QUAD_DEC2_STATUS) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD : (LPMCU_MISC_REGS Offset: 0x290) (R/W 32) Thresholds for QUAD_DEC0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t UPPER:16;                  /**< bit:  0..15  Upper Threshold of counter for QUAD_DEC0 */
    uint32_t LOWER:16;                  /**< bit: 16..31  Lower Threshold of counter for QUAD_DEC0 */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_OFFSET (0x290)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Thresholds for QUAD_DEC0  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_RESETVALUE _U_(0xFFFF00)                                 /**<  (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Thresholds for QUAD_DEC0  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Upper Threshold of counter for QUAD_DEC0 Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Upper Threshold of counter for QUAD_DEC0 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER(value) (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_UPPER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER_Pos 16                                             /**< (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Lower Threshold of counter for QUAD_DEC0 Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Lower Threshold of counter for QUAD_DEC0 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER(value) (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_LOWER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC0_CTRL : (LPMCU_MISC_REGS Offset: 0x294) (R/W 8) Control for QUAD_DEC0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  ENABLE:1;                  /**< bit:      0  Enable Quad Decoder                      */
    uint8_t  CLR_IRQ:1;                 /**< bit:      1  Clear IRQ From Quad Decoder              */
    uint8_t  CLOCK_SEL:2;               /**< bit:   2..3  Quad Decoder Source Clock Frequency Select */
    uint8_t  :4;                        /**< bit:   4..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC0_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_OFFSET (0x294)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Control for QUAD_DEC0  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Control for QUAD_DEC0  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Enable Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Enable Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC0_CTRL_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ_Pos 1                                              /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Clear IRQ From Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Clear IRQ From Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLR_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos 2                                              /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Quad Decoder Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Quad Decoder Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_QUAD_DEC0_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_MASK _U_(0x0F)                                      /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC0_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC0_CTRL_Msk  _U_(0x0F)                                      /**< (LPMCU_MISC_REGS_QUAD_DEC0_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD : (LPMCU_MISC_REGS Offset: 0x2a0) (R/W 32) Thresholds for QUAD_DEC1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t UPPER:16;                  /**< bit:  0..15  Upper Threshold of counter for QUAD_DEC1 */
    uint32_t LOWER:16;                  /**< bit: 16..31  Lower Threshold of counter for QUAD_DEC1 */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_OFFSET (0x2A0)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Thresholds for QUAD_DEC1  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_RESETVALUE _U_(0xFFFF00)                                 /**<  (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Thresholds for QUAD_DEC1  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Upper Threshold of counter for QUAD_DEC1 Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Upper Threshold of counter for QUAD_DEC1 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER(value) (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_UPPER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER_Pos 16                                             /**< (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Lower Threshold of counter for QUAD_DEC1 Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Lower Threshold of counter for QUAD_DEC1 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER(value) (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_LOWER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC1_CTRL : (LPMCU_MISC_REGS Offset: 0x2a4) (R/W 8) Control for QUAD_DEC1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  ENABLE:1;                  /**< bit:      0  Enable Quad Decoder                      */
    uint8_t  CLR_IRQ:1;                 /**< bit:      1  Clear IRQ From Quad Decoder              */
    uint8_t  CLOCK_SEL:2;               /**< bit:   2..3  Quad Decoder Source Clock Frequency Select */
    uint8_t  :4;                        /**< bit:   4..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC1_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_OFFSET (0x2A4)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Control for QUAD_DEC1  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Control for QUAD_DEC1  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Enable Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Enable Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC1_CTRL_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ_Pos 1                                              /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Clear IRQ From Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Clear IRQ From Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLR_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos 2                                              /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Quad Decoder Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Quad Decoder Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_QUAD_DEC1_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_MASK _U_(0x0F)                                      /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC1_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC1_CTRL_Msk  _U_(0x0F)                                      /**< (LPMCU_MISC_REGS_QUAD_DEC1_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD : (LPMCU_MISC_REGS Offset: 0x2b0) (R/W 32) Thresholds for QUAD_DEC2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t UPPER:16;                  /**< bit:  0..15  Upper Threshold of counter for QUAD_DEC2 */
    uint32_t LOWER:16;                  /**< bit: 16..31  Lower Threshold of counter for QUAD_DEC2 */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_OFFSET (0x2B0)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Thresholds for QUAD_DEC2  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_RESETVALUE _U_(0xFFFF00)                                 /**<  (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Thresholds for QUAD_DEC2  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Upper Threshold of counter for QUAD_DEC2 Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Upper Threshold of counter for QUAD_DEC2 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER(value) (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_UPPER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER_Pos 16                                             /**< (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Lower Threshold of counter for QUAD_DEC2 Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER_Msk (_U_(0xFFFF) << LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Lower Threshold of counter for QUAD_DEC2 Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER(value) (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_LOWER_Pos))
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD) Register Mask  */


/* -------- LPMCU_MISC_REGS_QUAD_DEC2_CTRL : (LPMCU_MISC_REGS Offset: 0x2b4) (R/W 8) Control for QUAD_DEC2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  ENABLE:1;                  /**< bit:      0  Enable Quad Decoder                      */
    uint8_t  CLR_IRQ:1;                 /**< bit:      1  Clear IRQ From Quad Decoder              */
    uint8_t  CLOCK_SEL:2;               /**< bit:   2..3  Quad Decoder Source Clock Frequency Select */
    uint8_t  :4;                        /**< bit:   4..7  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_QUAD_DEC2_CTRL_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_OFFSET (0x2B4)                                       /**<  (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Control for QUAD_DEC2  Offset */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Control for QUAD_DEC2  Reset Value */

#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE_Pos 0                                              /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Enable Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Enable Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE_Msk      /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC2_CTRL_ENABLE_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ_Pos 1                                              /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Clear IRQ From Quad Decoder Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ_Msk (_U_(0x1) << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Clear IRQ From Quad Decoder Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLR_IRQ_Msk instead */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos 2                                              /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Quad Decoder Source Clock Frequency Select Position */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Msk (_U_(0x3) << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Quad Decoder Source Clock Frequency Select Mask */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL(value) (LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Msk & ((value) << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos))
#define   LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_0_Val _U_(0x0)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 26MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_1_Val _U_(0x1)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 13MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_2_Val _U_(0x2)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 6.5MHz  */
#define   LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_3_Val _U_(0x3)                                       /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 3.25MHz  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_0 (LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_0_Val << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 26MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_1 (LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_1_Val << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 13MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_2 (LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_2_Val << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 6.5MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_3 (LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_3_Val << LPMCU_MISC_REGS_QUAD_DEC2_CTRL_CLOCK_SEL_Pos)  /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) 3.25MHz Position  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_MASK _U_(0x0F)                                      /**< \deprecated (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Register MASK  (Use LPMCU_MISC_REGS_QUAD_DEC2_CTRL_Msk instead)  */
#define LPMCU_MISC_REGS_QUAD_DEC2_CTRL_Msk  _U_(0x0F)                                      /**< (LPMCU_MISC_REGS_QUAD_DEC2_CTRL) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP0_COMP : (LPMCU_MISC_REGS Offset: 0x2c0) (R/W 32) Flash Breakpoint Compare Register 0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP0_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP0_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP0_COMP_OFFSET (0x2C0)                                       /**<  (LPMCU_MISC_REGS_FP_COMP0_COMP) Flash Breakpoint Compare Register 0  Offset */
#define LPMCU_MISC_REGS_FP_COMP0_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP0_COMP) Flash Breakpoint Compare Register 0  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP0_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP0_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP(value) (LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP0_COMP_FP_COMP0_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP0_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP0_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP0_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP0_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP0_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP1_COMP : (LPMCU_MISC_REGS Offset: 0x2c4) (R/W 32) Flash Breakpoint Compare Register 1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP1_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP1_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP1_COMP_OFFSET (0x2C4)                                       /**<  (LPMCU_MISC_REGS_FP_COMP1_COMP) Flash Breakpoint Compare Register 1  Offset */
#define LPMCU_MISC_REGS_FP_COMP1_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP1_COMP) Flash Breakpoint Compare Register 1  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP1_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP1_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP(value) (LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP1_COMP_FP_COMP1_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP1_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP1_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP1_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP1_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP1_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP2_COMP : (LPMCU_MISC_REGS Offset: 0x2c8) (R/W 32) Flash Breakpoint Compare Register 2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP2_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP2_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP2_COMP_OFFSET (0x2C8)                                       /**<  (LPMCU_MISC_REGS_FP_COMP2_COMP) Flash Breakpoint Compare Register 2  Offset */
#define LPMCU_MISC_REGS_FP_COMP2_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP2_COMP) Flash Breakpoint Compare Register 2  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP2_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP2_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP(value) (LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP2_COMP_FP_COMP2_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP2_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP2_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP2_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP2_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP2_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP3_COMP : (LPMCU_MISC_REGS Offset: 0x2cc) (R/W 32) Flash Breakpoint Compare Register 3 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP3_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP3_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP3_COMP_OFFSET (0x2CC)                                       /**<  (LPMCU_MISC_REGS_FP_COMP3_COMP) Flash Breakpoint Compare Register 3  Offset */
#define LPMCU_MISC_REGS_FP_COMP3_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP3_COMP) Flash Breakpoint Compare Register 3  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP3_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP3_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP(value) (LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP3_COMP_FP_COMP3_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP3_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP3_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP3_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP3_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP3_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP4_COMP : (LPMCU_MISC_REGS Offset: 0x2d0) (R/W 32) Flash Breakpoint Compare Register 4 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP4_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP4_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP4_COMP_OFFSET (0x2D0)                                       /**<  (LPMCU_MISC_REGS_FP_COMP4_COMP) Flash Breakpoint Compare Register 4  Offset */
#define LPMCU_MISC_REGS_FP_COMP4_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP4_COMP) Flash Breakpoint Compare Register 4  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP4_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP4_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP(value) (LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP4_COMP_FP_COMP4_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP4_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP4_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP4_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP4_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP4_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP5_COMP : (LPMCU_MISC_REGS Offset: 0x2d4) (R/W 32) Flash Breakpoint Compare Register 5 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP5_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP5_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP5_COMP_OFFSET (0x2D4)                                       /**<  (LPMCU_MISC_REGS_FP_COMP5_COMP) Flash Breakpoint Compare Register 5  Offset */
#define LPMCU_MISC_REGS_FP_COMP5_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP5_COMP) Flash Breakpoint Compare Register 5  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP5_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP5_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP(value) (LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP5_COMP_FP_COMP5_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP5_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP5_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP5_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP5_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP5_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP6_COMP : (LPMCU_MISC_REGS Offset: 0x2d8) (R/W 32) Flash Breakpoint Compare Register 6 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP6_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP6_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP6_COMP_OFFSET (0x2D8)                                       /**<  (LPMCU_MISC_REGS_FP_COMP6_COMP) Flash Breakpoint Compare Register 6  Offset */
#define LPMCU_MISC_REGS_FP_COMP6_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP6_COMP) Flash Breakpoint Compare Register 6  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP6_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP6_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP(value) (LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP6_COMP_FP_COMP6_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP6_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP6_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP6_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP6_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP6_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP7_COMP : (LPMCU_MISC_REGS Offset: 0x2dc) (R/W 32) Flash Breakpoint Compare Register 7 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP7_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP7_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP7_COMP_OFFSET (0x2DC)                                       /**<  (LPMCU_MISC_REGS_FP_COMP7_COMP) Flash Breakpoint Compare Register 7  Offset */
#define LPMCU_MISC_REGS_FP_COMP7_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP7_COMP) Flash Breakpoint Compare Register 7  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP7_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP7_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP(value) (LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP7_COMP_FP_COMP7_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP7_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP7_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP7_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP7_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP7_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP8_COMP : (LPMCU_MISC_REGS Offset: 0x2e0) (R/W 32) Flash Breakpoint Compare Register 8 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP8_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP8_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP8_COMP_OFFSET (0x2E0)                                       /**<  (LPMCU_MISC_REGS_FP_COMP8_COMP) Flash Breakpoint Compare Register 8  Offset */
#define LPMCU_MISC_REGS_FP_COMP8_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP8_COMP) Flash Breakpoint Compare Register 8  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP8_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP8_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP(value) (LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP8_COMP_FP_COMP8_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP8_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP8_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP8_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP8_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP8_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP9_COMP : (LPMCU_MISC_REGS Offset: 0x2e4) (R/W 32) Flash Breakpoint Compare Register 9 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP9_COMP:17;          /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP9_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP9_COMP_OFFSET (0x2E4)                                       /**<  (LPMCU_MISC_REGS_FP_COMP9_COMP) Flash Breakpoint Compare Register 9  Offset */
#define LPMCU_MISC_REGS_FP_COMP9_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP9_COMP) Flash Breakpoint Compare Register 9  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP9_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP9_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP(value) (LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP9_COMP_FP_COMP9_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP9_COMP_MASK  _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP9_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP9_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP9_COMP_Msk   _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP9_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP10_COMP : (LPMCU_MISC_REGS Offset: 0x2e8) (R/W 32) Flash Breakpoint Compare Register 10 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP10_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP10_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP10_COMP_OFFSET (0x2E8)                                       /**<  (LPMCU_MISC_REGS_FP_COMP10_COMP) Flash Breakpoint Compare Register 10  Offset */
#define LPMCU_MISC_REGS_FP_COMP10_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP10_COMP) Flash Breakpoint Compare Register 10  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP10_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP10_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP(value) (LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP10_COMP_FP_COMP10_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP10_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP10_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP10_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP10_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP10_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP11_COMP : (LPMCU_MISC_REGS Offset: 0x2ec) (R/W 32) Flash Breakpoint Compare Register 11 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP11_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP11_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP11_COMP_OFFSET (0x2EC)                                       /**<  (LPMCU_MISC_REGS_FP_COMP11_COMP) Flash Breakpoint Compare Register 11  Offset */
#define LPMCU_MISC_REGS_FP_COMP11_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP11_COMP) Flash Breakpoint Compare Register 11  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP11_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP11_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP(value) (LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP11_COMP_FP_COMP11_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP11_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP11_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP11_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP11_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP11_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP12_COMP : (LPMCU_MISC_REGS Offset: 0x2f0) (R/W 32) Flash Breakpoint Compare Register 12 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP12_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP12_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP12_COMP_OFFSET (0x2F0)                                       /**<  (LPMCU_MISC_REGS_FP_COMP12_COMP) Flash Breakpoint Compare Register 12  Offset */
#define LPMCU_MISC_REGS_FP_COMP12_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP12_COMP) Flash Breakpoint Compare Register 12  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP12_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP12_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP(value) (LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP12_COMP_FP_COMP12_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP12_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP12_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP12_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP12_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP12_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP13_COMP : (LPMCU_MISC_REGS Offset: 0x2f4) (R/W 32) Flash Breakpoint Compare Register 13 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP13_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP13_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP13_COMP_OFFSET (0x2F4)                                       /**<  (LPMCU_MISC_REGS_FP_COMP13_COMP) Flash Breakpoint Compare Register 13  Offset */
#define LPMCU_MISC_REGS_FP_COMP13_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP13_COMP) Flash Breakpoint Compare Register 13  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP13_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP13_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP(value) (LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP13_COMP_FP_COMP13_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP13_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP13_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP13_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP13_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP13_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP14_COMP : (LPMCU_MISC_REGS Offset: 0x2f8) (R/W 32) Flash Breakpoint Compare Register 14 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP14_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP14_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP14_COMP_OFFSET (0x2F8)                                       /**<  (LPMCU_MISC_REGS_FP_COMP14_COMP) Flash Breakpoint Compare Register 14  Offset */
#define LPMCU_MISC_REGS_FP_COMP14_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP14_COMP) Flash Breakpoint Compare Register 14  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP14_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP14_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP(value) (LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP14_COMP_FP_COMP14_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP14_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP14_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP14_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP14_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP14_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP15_COMP : (LPMCU_MISC_REGS Offset: 0x2fc) (R/W 32) Flash Breakpoint Compare Register 15 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP15_COMP:17;         /**< bit:  0..16                                           */
    uint32_t :15;                       /**< bit: 17..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP15_COMP_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP15_COMP_OFFSET (0x2FC)                                       /**<  (LPMCU_MISC_REGS_FP_COMP15_COMP) Flash Breakpoint Compare Register 15  Offset */
#define LPMCU_MISC_REGS_FP_COMP15_COMP_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP15_COMP) Flash Breakpoint Compare Register 15  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP15_COMP)  Position */
#define LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP_Msk (_U_(0x1FFFF) << LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP15_COMP)  Mask */
#define LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP(value) (LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP15_COMP_FP_COMP15_COMP_Pos))
#define LPMCU_MISC_REGS_FP_COMP15_COMP_MASK _U_(0x1FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP15_COMP) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP15_COMP_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP15_COMP_Msk  _U_(0x1FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP15_COMP) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP0_REPLACE : (LPMCU_MISC_REGS Offset: 0x300) (R/W 32) Flash Breakpoint Replace Register 0 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP0_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP0_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_OFFSET (0x300)                                       /**<  (LPMCU_MISC_REGS_FP_COMP0_REPLACE) Flash Breakpoint Replace Register 0  Offset */
#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP0_REPLACE) Flash Breakpoint Replace Register 0  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP0_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP0_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP0_REPLACE_FP_COMP0_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP0_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP0_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP0_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP0_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP1_REPLACE : (LPMCU_MISC_REGS Offset: 0x304) (R/W 32) Flash Breakpoint Replace Register 1 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP1_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP1_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_OFFSET (0x304)                                       /**<  (LPMCU_MISC_REGS_FP_COMP1_REPLACE) Flash Breakpoint Replace Register 1  Offset */
#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP1_REPLACE) Flash Breakpoint Replace Register 1  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP1_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP1_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP1_REPLACE_FP_COMP1_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP1_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP1_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP1_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP1_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP2_REPLACE : (LPMCU_MISC_REGS Offset: 0x308) (R/W 32) Flash Breakpoint Replace Register 2 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP2_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP2_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_OFFSET (0x308)                                       /**<  (LPMCU_MISC_REGS_FP_COMP2_REPLACE) Flash Breakpoint Replace Register 2  Offset */
#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP2_REPLACE) Flash Breakpoint Replace Register 2  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP2_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP2_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP2_REPLACE_FP_COMP2_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP2_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP2_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP2_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP2_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP3_REPLACE : (LPMCU_MISC_REGS Offset: 0x30c) (R/W 32) Flash Breakpoint Replace Register 3 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP3_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP3_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_OFFSET (0x30C)                                       /**<  (LPMCU_MISC_REGS_FP_COMP3_REPLACE) Flash Breakpoint Replace Register 3  Offset */
#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP3_REPLACE) Flash Breakpoint Replace Register 3  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP3_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP3_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP3_REPLACE_FP_COMP3_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP3_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP3_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP3_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP3_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP4_REPLACE : (LPMCU_MISC_REGS Offset: 0x310) (R/W 32) Flash Breakpoint Replace Register 4 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP4_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP4_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_OFFSET (0x310)                                       /**<  (LPMCU_MISC_REGS_FP_COMP4_REPLACE) Flash Breakpoint Replace Register 4  Offset */
#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP4_REPLACE) Flash Breakpoint Replace Register 4  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP4_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP4_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP4_REPLACE_FP_COMP4_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP4_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP4_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP4_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP4_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP5_REPLACE : (LPMCU_MISC_REGS Offset: 0x314) (R/W 32) Flash Breakpoint Replace Register 5 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP5_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP5_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_OFFSET (0x314)                                       /**<  (LPMCU_MISC_REGS_FP_COMP5_REPLACE) Flash Breakpoint Replace Register 5  Offset */
#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP5_REPLACE) Flash Breakpoint Replace Register 5  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP5_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP5_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP5_REPLACE_FP_COMP5_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP5_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP5_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP5_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP5_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP6_REPLACE : (LPMCU_MISC_REGS Offset: 0x318) (R/W 32) Flash Breakpoint Replace Register 6 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP6_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP6_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_OFFSET (0x318)                                       /**<  (LPMCU_MISC_REGS_FP_COMP6_REPLACE) Flash Breakpoint Replace Register 6  Offset */
#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP6_REPLACE) Flash Breakpoint Replace Register 6  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP6_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP6_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP6_REPLACE_FP_COMP6_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP6_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP6_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP6_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP6_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP7_REPLACE : (LPMCU_MISC_REGS Offset: 0x31c) (R/W 32) Flash Breakpoint Replace Register 7 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP7_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP7_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_OFFSET (0x31C)                                       /**<  (LPMCU_MISC_REGS_FP_COMP7_REPLACE) Flash Breakpoint Replace Register 7  Offset */
#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP7_REPLACE) Flash Breakpoint Replace Register 7  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP7_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP7_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP7_REPLACE_FP_COMP7_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP7_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP7_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP7_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP7_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP8_REPLACE : (LPMCU_MISC_REGS Offset: 0x320) (R/W 32) Flash Breakpoint Replace Register 8 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP8_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP8_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_OFFSET (0x320)                                       /**<  (LPMCU_MISC_REGS_FP_COMP8_REPLACE) Flash Breakpoint Replace Register 8  Offset */
#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP8_REPLACE) Flash Breakpoint Replace Register 8  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP8_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP8_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP8_REPLACE_FP_COMP8_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP8_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP8_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP8_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP8_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP9_REPLACE : (LPMCU_MISC_REGS Offset: 0x324) (R/W 32) Flash Breakpoint Replace Register 9 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP9_REPLACE:19;       /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP9_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_OFFSET (0x324)                                       /**<  (LPMCU_MISC_REGS_FP_COMP9_REPLACE) Flash Breakpoint Replace Register 9  Offset */
#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP9_REPLACE) Flash Breakpoint Replace Register 9  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP9_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP9_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP9_REPLACE_FP_COMP9_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP9_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP9_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP9_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP9_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP10_REPLACE : (LPMCU_MISC_REGS Offset: 0x328) (R/W 32) Flash Breakpoint Replace Register 10 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP10_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP10_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_OFFSET (0x328)                                       /**<  (LPMCU_MISC_REGS_FP_COMP10_REPLACE) Flash Breakpoint Replace Register 10  Offset */
#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP10_REPLACE) Flash Breakpoint Replace Register 10  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP10_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP10_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP10_REPLACE_FP_COMP10_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP10_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP10_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP10_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP10_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP11_REPLACE : (LPMCU_MISC_REGS Offset: 0x32c) (R/W 32) Flash Breakpoint Replace Register 11 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP11_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP11_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_OFFSET (0x32C)                                       /**<  (LPMCU_MISC_REGS_FP_COMP11_REPLACE) Flash Breakpoint Replace Register 11  Offset */
#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP11_REPLACE) Flash Breakpoint Replace Register 11  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP11_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP11_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP11_REPLACE_FP_COMP11_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP11_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP11_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP11_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP11_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP12_REPLACE : (LPMCU_MISC_REGS Offset: 0x330) (R/W 32) Flash Breakpoint Replace Register 12 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP12_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP12_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_OFFSET (0x330)                                       /**<  (LPMCU_MISC_REGS_FP_COMP12_REPLACE) Flash Breakpoint Replace Register 12  Offset */
#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP12_REPLACE) Flash Breakpoint Replace Register 12  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP12_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP12_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP12_REPLACE_FP_COMP12_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP12_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP12_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP12_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP12_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP13_REPLACE : (LPMCU_MISC_REGS Offset: 0x334) (R/W 32) Flash Breakpoint Replace Register 13 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP13_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP13_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_OFFSET (0x334)                                       /**<  (LPMCU_MISC_REGS_FP_COMP13_REPLACE) Flash Breakpoint Replace Register 13  Offset */
#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP13_REPLACE) Flash Breakpoint Replace Register 13  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP13_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP13_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP13_REPLACE_FP_COMP13_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP13_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP13_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP13_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP13_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP14_REPLACE : (LPMCU_MISC_REGS Offset: 0x338) (R/W 32) Flash Breakpoint Replace Register 14 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP14_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP14_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_OFFSET (0x338)                                       /**<  (LPMCU_MISC_REGS_FP_COMP14_REPLACE) Flash Breakpoint Replace Register 14  Offset */
#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP14_REPLACE) Flash Breakpoint Replace Register 14  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP14_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP14_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP14_REPLACE_FP_COMP14_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP14_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP14_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP14_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP14_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP15_REPLACE : (LPMCU_MISC_REGS Offset: 0x33c) (R/W 32) Flash Breakpoint Replace Register 14 -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t FP_COMP15_REPLACE:19;      /**< bit:  0..18                                           */
    uint32_t :13;                       /**< bit: 19..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP15_REPLACE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_OFFSET (0x33C)                                       /**<  (LPMCU_MISC_REGS_FP_COMP15_REPLACE) Flash Breakpoint Replace Register 14  Offset */
#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP15_REPLACE) Flash Breakpoint Replace Register 14  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP15_REPLACE)  Position */
#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE_Msk (_U_(0x7FFFF) << LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP15_REPLACE)  Mask */
#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE(value) (LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE_Msk & ((value) << LPMCU_MISC_REGS_FP_COMP15_REPLACE_FP_COMP15_REPLACE_Pos))
#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_MASK _U_(0x7FFFF)                                   /**< \deprecated (LPMCU_MISC_REGS_FP_COMP15_REPLACE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP15_REPLACE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP15_REPLACE_Msk _U_(0x7FFFF)                                   /**< (LPMCU_MISC_REGS_FP_COMP15_REPLACE) Register Mask  */


/* -------- LPMCU_MISC_REGS_FP_COMP_ENABLE : (LPMCU_MISC_REGS Offset: 0x340) (R/W 16) Flash Breakpoint Enable Register -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint16_t CMP_0_EN:1;                /**< bit:      0  Enable Compare 0                         */
    uint16_t CMP_1_EN:1;                /**< bit:      1  Enable Compare 1                         */
    uint16_t CMP_2_EN:1;                /**< bit:      2  Enable Compare 2                         */
    uint16_t CMP_3_EN:1;                /**< bit:      3  Enable Compare 3                         */
    uint16_t CMP_4_EN:1;                /**< bit:      4  Enable Compare 4                         */
    uint16_t CMP_5_EN:1;                /**< bit:      5  Enable Compare 5                         */
    uint16_t CMP_6_EN:1;                /**< bit:      6  Enable Compare 6                         */
    uint16_t CMP_7_EN:1;                /**< bit:      7  Enable Compare 7                         */
    uint16_t CMP_8_EN:1;                /**< bit:      8  Enable Compare 8                         */
    uint16_t CMP_9_EN:1;                /**< bit:      9  Enable Compare 9                         */
    uint16_t CMP_10_EN:1;               /**< bit:     10  Enable Compare 10                        */
    uint16_t CMP_11_EN:1;               /**< bit:     11  Enable Compare 11                        */
    uint16_t CMP_12_EN:1;               /**< bit:     12  Enable Compare 12                        */
    uint16_t CMP_13_EN:1;               /**< bit:     13  Enable Compare 13                        */
    uint16_t CMP_14_EN:1;               /**< bit:     14  Enable Compare 14                        */
    uint16_t CMP_15_EN:1;               /**< bit:     15  Enable Compare 15                        */
  } bit;                                /**< Structure used for bit  access */
  uint16_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_FP_COMP_ENABLE_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_FP_COMP_ENABLE_OFFSET (0x340)                                       /**<  (LPMCU_MISC_REGS_FP_COMP_ENABLE) Flash Breakpoint Enable Register  Offset */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_FP_COMP_ENABLE) Flash Breakpoint Enable Register  Reset Value */

#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN_Pos 0                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 0 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 0 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_0_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN_Pos 1                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 1 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 1 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_1_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN_Pos 2                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 2 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 2 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_2_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN_Pos 3                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 3 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 3 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_3_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN_Pos 4                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 4 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 4 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_4_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN_Pos 5                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 5 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 5 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_5_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN_Pos 6                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 6 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 6 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_6_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN_Pos 7                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 7 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 7 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_7_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN_Pos 8                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 8 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 8 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_8_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN_Pos 9                                              /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 9 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 9 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN_Msk    /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_9_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN_Pos 10                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 10 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 10 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_10_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN_Pos 11                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 11 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 11 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_11_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN_Pos 12                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 12 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 12 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_12_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN_Pos 13                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 13 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 13 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_13_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN_Pos 14                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 14 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 14 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_14_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN_Pos 15                                             /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 15 Position */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN_Msk (_U_(0x1) << LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN_Pos)  /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Enable Compare 15 Mask */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN_Msk   /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_FP_COMP_ENABLE_CMP_15_EN_Msk instead */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_MASK _U_(0xFFFF)                                    /**< \deprecated (LPMCU_MISC_REGS_FP_COMP_ENABLE) Register MASK  (Use LPMCU_MISC_REGS_FP_COMP_ENABLE_Msk instead)  */
#define LPMCU_MISC_REGS_FP_COMP_ENABLE_Msk  _U_(0xFFFF)                                    /**< (LPMCU_MISC_REGS_FP_COMP_ENABLE) Register Mask  */


/* -------- LPMCU_MISC_REGS_PMU_READ_REGS : (LPMCU_MISC_REGS Offset: 0x410) (R/ 32) PMU Status Registers -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t READREG1:8;                /**< bit:   0..7  PMU Read Register 1                      */
    uint32_t READREG2:8;                /**< bit:  8..15  PMU Read Register 2                      */
    uint32_t READREG3:8;                /**< bit: 16..23  PMU Read Register 3                      */
    uint32_t :8;                        /**< bit: 24..31  Reserved */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_PMU_READ_REGS_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_PMU_READ_REGS_OFFSET (0x410)                                       /**<  (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Status Registers  Offset */
#define LPMCU_MISC_REGS_PMU_READ_REGS_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Status Registers  Reset Value */

#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG1_Pos 0                                              /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 1 Position */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG1_Msk (_U_(0xFF) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG1_Pos)  /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 1 Mask */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG1(value) (LPMCU_MISC_REGS_PMU_READ_REGS_READREG1_Msk & ((value) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG1_Pos))
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG2_Pos 8                                              /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 2 Position */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG2_Msk (_U_(0xFF) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG2_Pos)  /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 2 Mask */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG2(value) (LPMCU_MISC_REGS_PMU_READ_REGS_READREG2_Msk & ((value) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG2_Pos))
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG3_Pos 16                                             /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 3 Position */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG3_Msk (_U_(0xFF) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG3_Pos)  /**< (LPMCU_MISC_REGS_PMU_READ_REGS) PMU Read Register 3 Mask */
#define LPMCU_MISC_REGS_PMU_READ_REGS_READREG3(value) (LPMCU_MISC_REGS_PMU_READ_REGS_READREG3_Msk & ((value) << LPMCU_MISC_REGS_PMU_READ_REGS_READREG3_Pos))
#define LPMCU_MISC_REGS_PMU_READ_REGS_MASK  _U_(0xFFFFFF)                                  /**< \deprecated (LPMCU_MISC_REGS_PMU_READ_REGS) Register MASK  (Use LPMCU_MISC_REGS_PMU_READ_REGS_Msk instead)  */
#define LPMCU_MISC_REGS_PMU_READ_REGS_Msk   _U_(0xFFFFFF)                                  /**< (LPMCU_MISC_REGS_PMU_READ_REGS) Register Mask  */


/* -------- LPMCU_MISC_REGS_MS_GPIO : (LPMCU_MISC_REGS Offset: 0x414) (R/W 8) Control for Mixed Signal GPIOs -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint8_t  PULL_TYPE_44:1;            /**< bit:      0  Mixed Signal LP_GPIO_44 Pull Type Select. 1: PD, 0: PU. */
    uint8_t  PULL_TYPE_45:1;            /**< bit:      1  Mixed Signal LP_GPIO_45 Pull Type Select. 1: PD, 0: PU. */
    uint8_t  PULL_TYPE_46:1;            /**< bit:      2  Mixed Signal LP_GPIO_46 Pull Type Select. 1: PD, 0: PU. */
    uint8_t  PULL_TYPE_47:1;            /**< bit:      3  Mixed Signal LP_GPIO_47 Pull Type Select. 1: PD, 0: PU. */
    uint8_t  PULL_ENABLE_44:1;          /**< bit:      4  Active Low Pull Enable for Mixed Signal LP_GPIO_44 */
    uint8_t  PULL_ENABLE_45:1;          /**< bit:      5  Active Low Pull Enable for Mixed Signal LP_GPIO_45 */
    uint8_t  PULL_ENABLE_46:1;          /**< bit:      6  Active Low Pull Enable for Mixed Signal LP_GPIO_46 */
    uint8_t  PULL_ENABLE_47:1;          /**< bit:      7  Active Low Pull Enable for Mixed Signal LP_GPIO_47 */
  } bit;                                /**< Structure used for bit  access */
  struct {
    uint8_t  PULL_TYPE_:4;              /**< bit:   0..3  Mixed Signal LP_GPIO_44 Pull Type Select. x: PD, x: PU. */
    uint8_t  PULL_ENABLE_:4;            /**< bit:   4..7  Active Low Pull Enable for Mixed Signal LP_GPIO_47 */
  } vec;                                /**< Structure used for vec  access  */
  uint8_t  reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_MS_GPIO_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_MS_GPIO_OFFSET      (0x414)                                       /**<  (LPMCU_MISC_REGS_MS_GPIO) Control for Mixed Signal GPIOs  Offset */
#define LPMCU_MISC_REGS_MS_GPIO_RESETVALUE  _U_(0xF0)                                     /**<  (LPMCU_MISC_REGS_MS_GPIO) Control for Mixed Signal GPIOs  Reset Value */

#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44_Pos 0                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_44 Pull Type Select. 1: PD, 0: PU. Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_44 Pull Type Select. 1: PD, 0: PU. Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44 LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_44_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45_Pos 1                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_45 Pull Type Select. 1: PD, 0: PU. Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_45 Pull Type Select. 1: PD, 0: PU. Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45 LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_45_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46_Pos 2                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_46 Pull Type Select. 1: PD, 0: PU. Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_46 Pull Type Select. 1: PD, 0: PU. Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46 LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_46_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47_Pos 3                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_47 Pull Type Select. 1: PD, 0: PU. Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Mixed Signal LP_GPIO_47 Pull Type Select. 1: PD, 0: PU. Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47 LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47_Msk       /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_47_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44_Pos 4                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_44 Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_44 Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44 LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_44_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45_Pos 5                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_45 Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_45 Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45 LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_45_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46_Pos 6                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_46 Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_46 Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46 LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_46_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47_Pos 7                                              /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_47 Position */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47_Msk (_U_(0x1) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47_Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO) Active Low Pull Enable for Mixed Signal LP_GPIO_47 Mask */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47 LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47_Msk     /**< \deprecated Old style mask definition for 1 bit bitfield. Use LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_47_Msk instead */
#define LPMCU_MISC_REGS_MS_GPIO_MASK        _U_(0xFF)                                      /**< \deprecated (LPMCU_MISC_REGS_MS_GPIO) Register MASK  (Use LPMCU_MISC_REGS_MS_GPIO_Msk instead)  */
#define LPMCU_MISC_REGS_MS_GPIO_Msk         _U_(0xFF)                                      /**< (LPMCU_MISC_REGS_MS_GPIO) Register Mask  */

#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE__Pos 0                                              /**< (LPMCU_MISC_REGS_MS_GPIO Position) Mixed Signal LP_GPIO_44 Pull Type Select. x: PD, x: PU. */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE__Msk (_U_(0xF) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE__Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO Mask) PULL_TYPE_ */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE_(value) (LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE__Msk & ((value) << LPMCU_MISC_REGS_MS_GPIO_PULL_TYPE__Pos))  
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE__Pos 4                                              /**< (LPMCU_MISC_REGS_MS_GPIO Position) Active Low Pull Enable for Mixed Signal LP_GPIO_47 */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE__Msk (_U_(0xF) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE__Pos)  /**< (LPMCU_MISC_REGS_MS_GPIO Mask) PULL_ENABLE_ */
#define LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE_(value) (LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE__Msk & ((value) << LPMCU_MISC_REGS_MS_GPIO_PULL_ENABLE__Pos))  

/* -------- LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER : (LPMCU_MISC_REGS Offset: 0x420) (R/ 32) Current value of the AON Sleep Timer (syncd to ARM clock) -------- */
#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
typedef union { 
  struct {
    uint32_t AON_SLEEP_TIMER_COUNTER:32;  /**< bit:  0..31                                           */
  } bit;                                /**< Structure used for bit  access */
  uint32_t reg;                         /**< Type used for register access */
} LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_Type;
#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */

#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_OFFSET (0x420)                                       /**<  (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER) Current value of the AON Sleep Timer (syncd to ARM clock)  Offset */
#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_RESETVALUE _U_(0x00)                                     /**<  (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER) Current value of the AON Sleep Timer (syncd to ARM clock)  Reset Value */

#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER_Pos 0                                              /**< (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER)  Position */
#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER_Msk (_U_(0xFFFFFFFF) << LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER_Pos)  /**< (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER)  Mask */
#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER(value) (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER_Msk & ((value) << LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_AON_SLEEP_TIMER_COUNTER_Pos))
#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_MASK _U_(0xFFFFFFFF)                                /**< \deprecated (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER) Register MASK  (Use LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_Msk instead)  */
#define LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_Msk _U_(0xFFFFFFFF)                                /**< (LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER) Register Mask  */


#if !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__))
#if COMPONENT_TYPEDEF_STYLE == 'R'
/** \brief LPMCU_MISC_REGS hardware registers */
typedef struct {  /* LPMCU Misc Registers */
  RoReg   LPMCU_CHIP_ID;  /**< (LPMCU_MISC_REGS Offset: 0x00) The hard-coded ID for the chip. */
  RwReg   LPMCU_GLOBAL_RESET_0; /**< (LPMCU_MISC_REGS Offset: 0x04) Active Low Global Reset */
  RwReg16 LPMCU_GLOBAL_RESET_1; /**< (LPMCU_MISC_REGS Offset: 0x08) Active Low Global Reset */
  RoReg8  Reserved1[0x2];
  RwReg   LPMCU_CLOCK_ENABLES_0; /**< (LPMCU_MISC_REGS Offset: 0x0C) LPMCU Clock Enables */
  RwReg   LPMCU_CLOCK_ENABLES_1; /**< (LPMCU_MISC_REGS Offset: 0x10) LPMCU Clock Enables */
  RwReg8  BTMCU_CTRL;     /**< (LPMCU_MISC_REGS Offset: 0x14) Miscellaneous BLE control */
  RoReg8  Reserved2[0x3];
  RwReg   LPMCU_CTRL;     /**< (LPMCU_MISC_REGS Offset: 0x18) Miscellaneous LPMCU control */
  RwReg8  LPMCU_MBIST;    /**< (LPMCU_MISC_REGS Offset: 0x1C) MBIST designation */
  RoReg8  Reserved3[0x3];
  RwReg8  BLE_CTRL;       /**< (LPMCU_MISC_REGS Offset: 0x20) BLE Control */
  RoReg8  Reserved4[0x3];
  RwReg   MBIST_CTRL;     /**< (LPMCU_MISC_REGS Offset: 0x24) MBIST Control Register */
  RoReg   MBIST_STATUS;   /**< (LPMCU_MISC_REGS Offset: 0x28) MBIST Status Register */
  RwReg16 MBIST_SRAM_ALG_SEL; /**< (LPMCU_MISC_REGS Offset: 0x2C) Enables MBIST algorithms */
  RoReg8  Reserved5[0x2];
  RwReg   MBIST_BG;       /**< (LPMCU_MISC_REGS Offset: 0x30) MBIST Background for MARCH2 algorithm (bits 31:0) */
  RoReg8  Reserved6[0x4];
  RwReg8  TEST_BUS_CTRL;  /**< (LPMCU_MISC_REGS Offset: 0x38) Controls all of the test bus functionality */
  RoReg8  Reserved7[0x3];
  RoReg   WP3_MISR_DATAOUT; /**< (LPMCU_MISC_REGS Offset: 0x3C) ROM MBIST Signature */
  RwReg   INVERT_OUTPUT_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x40) Invert Output Control */
  RwReg   PINMUX_SEL_0;   /**< (LPMCU_MISC_REGS Offset: 0x44) Pinmux select for LP_GPIO_0, LP_GPIO_1, LP_GPIO_2, LP_GPIO_3, LP_GPIO_4, LP_GPIO_5, LP_GPIO_6, LP_GPIO_7 */
  RwReg   PINMUX_SEL_1;   /**< (LPMCU_MISC_REGS Offset: 0x48) Pinmux select for LP_GPIO_8, LP_GPIO_9, LP_GPIO_10, LP_GPIO_11, LP_GPIO_12, LP_GPIO_13, LP_GPIO_14, LP_GPIO_15 */
  RwReg   PINMUX_SEL_2;   /**< (LPMCU_MISC_REGS Offset: 0x4C) Pinmux select for LP_GPIO_16, LP_GPIO_17, LP_GPIO_18, LP_GPIO_19, LP_GPIO_20, LP_GPIO_21, LP_GPIO_22, LP_GPIO_23 */
  RwReg   PULL_ENABLE;    /**< (LPMCU_MISC_REGS Offset: 0x50) Active Low Pull Enables for LPMCU Pads */
  RwReg   RTYPE_PAD_0;    /**< (LPMCU_MISC_REGS Offset: 0x54) Controls the RTYPE (Pull Level) pad value for LPMCU Pads (0 = Pull Up) */
  RoReg8  Reserved8[0x10];
  RwReg   PINMUX_SEL_3;   /**< (LPMCU_MISC_REGS Offset: 0x68) Pinmux select for LP_SIP_0, LP_SIP_1, LP_SIP_2, LP_SIP_3, LP_SIP_4 */
  RwReg   ISHAPE_PAD_3;   /**< (LPMCU_MISC_REGS Offset: 0x6C) Controls the ISHAPE pad value for LPMCU SIP Pads */
  RoReg8  Reserved9[0x20];
  RwReg8  LPMCU_CTRL_2;   /**< (LPMCU_MISC_REGS Offset: 0x90) Misc control for the LPMCU */
  RoReg8  Reserved10[0xF];
  RwReg8  SPIFLASH_VDDIO_CTRL; /**< (LPMCU_MISC_REGS Offset: 0xA0) Control for VDDIO of SPI FLASH */
  RoReg8  Reserved11[0x3];
  RwReg8  SPIFLASH_BYPASS; /**< (LPMCU_MISC_REGS Offset: 0xA4) SPI FLASH Bypass */
  RoReg8  Reserved12[0x1B];
  RwReg   IRQ_MUX_IO_SEL_0; /**< (LPMCU_MISC_REGS Offset: 0xC0) ARM Cortex IRQ Mux Selection */
  RwReg   IRQ_MUX_IO_SEL_1; /**< (LPMCU_MISC_REGS Offset: 0xC4) ARM Cortex IRQ Mux Selection */
  RwReg   IRQ_MUX_IO_SEL_2; /**< (LPMCU_MISC_REGS Offset: 0xC8) ARM Cortex IRQ Mux Selection */
  RwReg   IRQ_MUX_IO_SEL_3; /**< (LPMCU_MISC_REGS Offset: 0xCC) ARM Cortex IRQ Mux Selection */
  RwReg   IRQ_MUX_IO_SEL_4; /**< (LPMCU_MISC_REGS Offset: 0xD0) ARM Cortex IRQ Mux Selection */
  RwReg8  IRQ_MUX_IO_SEL_5; /**< (LPMCU_MISC_REGS Offset: 0xD4) ARM Cortex IRQ Mux Selection */
  RoReg8  Reserved13[0x8B];
  RwReg   PWM0_CTRL;      /**< (LPMCU_MISC_REGS Offset: 0x160) PWM0 Control Register */
  RwReg   PWM1_CTRL;      /**< (LPMCU_MISC_REGS Offset: 0x164) PWM1 Control Register */
  RwReg   PWM2_CTRL;      /**< (LPMCU_MISC_REGS Offset: 0x168) PWM2 Control Register */
  RwReg   PWM3_CTRL;      /**< (LPMCU_MISC_REGS Offset: 0x16C) PWM3 Control Register */
  RoReg   MBIST_DUAL_STATUS; /**< (LPMCU_MISC_REGS Offset: 0x170) Reflects the status of MBIST from lpmcu and btmcu */
  RoReg8  Reserved14[0x14];
  RwReg8  DUALTIMER0_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x188) DUALTIMER0 Control */
  RoReg8  Reserved15[0x7];
  RwReg   ARM_SLEEP_WAKEUP_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x190) Sleep and Wakeup Control for the AON Power Sequencer */
  RoReg8  Reserved16[0xC];
  RwReg   MEGA_MUX_IO_SEL_0; /**< (LPMCU_MISC_REGS Offset: 0x1A0) Mega Mux Selection */
  RwReg   MEGA_MUX_IO_SEL_1; /**< (LPMCU_MISC_REGS Offset: 0x1A4) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  RwReg   MEGA_MUX_IO_SEL_2; /**< (LPMCU_MISC_REGS Offset: 0x1A8) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  RwReg   MEGA_MUX_IO_SEL_3; /**< (LPMCU_MISC_REGS Offset: 0x1AC) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  RwReg   MEGA_MUX_IO_SEL_4; /**< (LPMCU_MISC_REGS Offset: 0x1B0) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  RwReg   MEGA_MUX_IO_SEL_5; /**< (LPMCU_MISC_REGS Offset: 0x1B4) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  RoReg8  Reserved17[0x8];
  RwReg   SENS_ADC_CLK_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x1C0) Clock control for the Sensor ADC */
  RoReg   SENS_ADC_RAW_STATUS; /**< (LPMCU_MISC_REGS Offset: 0x1C4) Raw Status from the Sensor ADC */
  RoReg16 SENS_ADC_CH0_DATA; /**< (LPMCU_MISC_REGS Offset: 0x1C8) Current data of the Sensor ADC for Channel 0 */
  RoReg8  Reserved18[0x2];
  RoReg16 SENS_ADC_CH1_DATA; /**< (LPMCU_MISC_REGS Offset: 0x1CC) Current data of the Sensor ADC for Channel 1 */
  RoReg8  Reserved19[0x2];
  RoReg16 SENS_ADC_CH2_DATA; /**< (LPMCU_MISC_REGS Offset: 0x1D0) Current data of the Sensor ADC for Channel 2 */
  RoReg8  Reserved20[0x2];
  RoReg16 SENS_ADC_CH3_DATA; /**< (LPMCU_MISC_REGS Offset: 0x1D4) Current data of the Sensor ADC for Channel 3 */
  RoReg8  Reserved21[0x12];
  RwReg16 IRQ_CTRL;       /**< (LPMCU_MISC_REGS Offset: 0x1E8) Configure the IRQ inputs to the system as either Rising Edge or Level Shift */
  RoReg8  Reserved22[0x2];
  RoReg8  IRQ_STS;        /**< (LPMCU_MISC_REGS Offset: 0x1EC) Read the raw (no level or rise detect) IRQ inputs to the system from the designated cores */
  RoReg8  Reserved23[0x13];
  RwReg   MSEMI_MEM_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x200) Control the rwm, rm and wm on the Mobile Semi Memories */
  RwReg   EFUSE_1_STATUS_3; /**< (LPMCU_MISC_REGS Offset: 0x204) EFUSE_1_3 Status */
  RoReg8  Reserved24[0x8];
  RwReg16 LPMCU_FORCE_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x210) Miscellaneous Force control values for LPMCU */
  RoReg8  Reserved25[0x2];
  RoReg   ARM_IRQ_STATUS_0; /**< (LPMCU_MISC_REGS Offset: 0x214) ARM Cortex M0 IRQ Status */
  RoReg   ARM_IRQ_STATUS_1; /**< (LPMCU_MISC_REGS Offset: 0x218) ARM Cortex M0 IRQ Status */
  RoReg8  Reserved26[0x24];
  RwReg8  BLE_DEEP_SLEEP_ENABLES; /**< (LPMCU_MISC_REGS Offset: 0x240) BLE Deep Sleep Enables */
  RoReg8  Reserved27[0x3];
  RwReg   DEEP_SLEEP_HW_TIMER_CORR; /**< (LPMCU_MISC_REGS Offset: 0x244) Configures the HW auto correction algorithm of the fine/base timers after wakeup from deep sleep */
  RoReg8  Reserved28[0xC];
  RwReg   REMAP_IDRAM1_BASE_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x254) ARM Cortex M0 idram 1 remap base addr */
  RwReg   REMAP_IDRAM1_END_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x258) ARM Cortex M0 idram 1 remap end addr */
  RwReg   REMAP_IDRAM2_BASE_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x25C) ARM Cortex M0 idram 2 remap base addr */
  RwReg   REMAP_IDRAM2_END_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x260) ARM Cortex M0 idram 2 remap end addr */
  RwReg   REMAP_BOOT_BASE_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x264) ARM Cortex M0 bootrom remap base addr */
  RwReg   REMAP_BOOT_END_ADDR; /**< (LPMCU_MISC_REGS Offset: 0x268) ARM Cortex M0 bootrom remap end addr */
  RoReg8  Reserved29[0x14];
  RoReg8  QUAD_DEC_IRQS;  /**< (LPMCU_MISC_REGS Offset: 0x280) Reflects the IRQ status of the Quad Decoders */
  RoReg8  Reserved30[0x3];
  RoReg16 QUAD_DEC0_STATUS; /**< (LPMCU_MISC_REGS Offset: 0x284) Current status of QUAD_DEC0 */
  RoReg8  Reserved31[0x2];
  RoReg16 QUAD_DEC1_STATUS; /**< (LPMCU_MISC_REGS Offset: 0x288) Current status of QUAD_DEC1 */
  RoReg8  Reserved32[0x2];
  RoReg16 QUAD_DEC2_STATUS; /**< (LPMCU_MISC_REGS Offset: 0x28C) Current status of QUAD_DEC2 */
  RoReg8  Reserved33[0x2];
  RwReg   QUAD_DEC0_THRESHOLD; /**< (LPMCU_MISC_REGS Offset: 0x290) Thresholds for QUAD_DEC0 */
  RwReg8  QUAD_DEC0_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x294) Control for QUAD_DEC0 */
  RoReg8  Reserved34[0xB];
  RwReg   QUAD_DEC1_THRESHOLD; /**< (LPMCU_MISC_REGS Offset: 0x2A0) Thresholds for QUAD_DEC1 */
  RwReg8  QUAD_DEC1_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x2A4) Control for QUAD_DEC1 */
  RoReg8  Reserved35[0xB];
  RwReg   QUAD_DEC2_THRESHOLD; /**< (LPMCU_MISC_REGS Offset: 0x2B0) Thresholds for QUAD_DEC2 */
  RwReg8  QUAD_DEC2_CTRL; /**< (LPMCU_MISC_REGS Offset: 0x2B4) Control for QUAD_DEC2 */
  RoReg8  Reserved36[0xB];
  RwReg   FP_COMP0_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2C0) Flash Breakpoint Compare Register 0 */
  RwReg   FP_COMP1_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2C4) Flash Breakpoint Compare Register 1 */
  RwReg   FP_COMP2_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2C8) Flash Breakpoint Compare Register 2 */
  RwReg   FP_COMP3_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2CC) Flash Breakpoint Compare Register 3 */
  RwReg   FP_COMP4_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2D0) Flash Breakpoint Compare Register 4 */
  RwReg   FP_COMP5_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2D4) Flash Breakpoint Compare Register 5 */
  RwReg   FP_COMP6_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2D8) Flash Breakpoint Compare Register 6 */
  RwReg   FP_COMP7_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2DC) Flash Breakpoint Compare Register 7 */
  RwReg   FP_COMP8_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2E0) Flash Breakpoint Compare Register 8 */
  RwReg   FP_COMP9_COMP;  /**< (LPMCU_MISC_REGS Offset: 0x2E4) Flash Breakpoint Compare Register 9 */
  RwReg   FP_COMP10_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2E8) Flash Breakpoint Compare Register 10 */
  RwReg   FP_COMP11_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2EC) Flash Breakpoint Compare Register 11 */
  RwReg   FP_COMP12_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2F0) Flash Breakpoint Compare Register 12 */
  RwReg   FP_COMP13_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2F4) Flash Breakpoint Compare Register 13 */
  RwReg   FP_COMP14_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2F8) Flash Breakpoint Compare Register 14 */
  RwReg   FP_COMP15_COMP; /**< (LPMCU_MISC_REGS Offset: 0x2FC) Flash Breakpoint Compare Register 15 */
  RwReg   FP_COMP0_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x300) Flash Breakpoint Replace Register 0 */
  RwReg   FP_COMP1_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x304) Flash Breakpoint Replace Register 1 */
  RwReg   FP_COMP2_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x308) Flash Breakpoint Replace Register 2 */
  RwReg   FP_COMP3_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x30C) Flash Breakpoint Replace Register 3 */
  RwReg   FP_COMP4_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x310) Flash Breakpoint Replace Register 4 */
  RwReg   FP_COMP5_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x314) Flash Breakpoint Replace Register 5 */
  RwReg   FP_COMP6_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x318) Flash Breakpoint Replace Register 6 */
  RwReg   FP_COMP7_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x31C) Flash Breakpoint Replace Register 7 */
  RwReg   FP_COMP8_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x320) Flash Breakpoint Replace Register 8 */
  RwReg   FP_COMP9_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x324) Flash Breakpoint Replace Register 9 */
  RwReg   FP_COMP10_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x328) Flash Breakpoint Replace Register 10 */
  RwReg   FP_COMP11_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x32C) Flash Breakpoint Replace Register 11 */
  RwReg   FP_COMP12_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x330) Flash Breakpoint Replace Register 12 */
  RwReg   FP_COMP13_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x334) Flash Breakpoint Replace Register 13 */
  RwReg   FP_COMP14_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x338) Flash Breakpoint Replace Register 14 */
  RwReg   FP_COMP15_REPLACE; /**< (LPMCU_MISC_REGS Offset: 0x33C) Flash Breakpoint Replace Register 14 */
  RwReg16 FP_COMP_ENABLE; /**< (LPMCU_MISC_REGS Offset: 0x340) Flash Breakpoint Enable Register */
  RoReg8  Reserved37[0xCE];
  RoReg   PMU_READ_REGS;  /**< (LPMCU_MISC_REGS Offset: 0x410) PMU Status Registers */
  RwReg8  MS_GPIO;        /**< (LPMCU_MISC_REGS Offset: 0x414) Control for Mixed Signal GPIOs */
  RoReg8  Reserved38[0xB];
  RoReg   AON_SLEEP_TIMER_COUNTER; /**< (LPMCU_MISC_REGS Offset: 0x420) Current value of the AON Sleep Timer (syncd to ARM clock) */
} LpmcuMiscRegs;

#elif COMPONENT_TYPEDEF_STYLE == 'N'
/** \brief LPMCU_MISC_REGS hardware registers */
typedef struct {  /* LPMCU Misc Registers */
  __I  LPMCU_MISC_REGS_LPMCU_CHIP_ID_Type LPMCU_CHIP_ID;  /**< Offset: 0x00 (R/   32) The hard-coded ID for the chip. */
  __IO LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_Type LPMCU_GLOBAL_RESET_0; /**< Offset: 0x04 (R/W  32) Active Low Global Reset */
  __IO LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_Type LPMCU_GLOBAL_RESET_1; /**< Offset: 0x08 (R/W  16) Active Low Global Reset */
  __I  uint8_t                        Reserved1[2];
  __IO LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_Type LPMCU_CLOCK_ENABLES_0; /**< Offset: 0x0C (R/W  32) LPMCU Clock Enables */
  __IO LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_Type LPMCU_CLOCK_ENABLES_1; /**< Offset: 0x10 (R/W  32) LPMCU Clock Enables */
  __IO LPMCU_MISC_REGS_BTMCU_CTRL_Type BTMCU_CTRL;     /**< Offset: 0x14 (R/W   8) Miscellaneous BLE control */
  __I  uint8_t                        Reserved2[3];
  __IO LPMCU_MISC_REGS_LPMCU_CTRL_Type LPMCU_CTRL;     /**< Offset: 0x18 (R/W  32) Miscellaneous LPMCU control */
  __IO LPMCU_MISC_REGS_LPMCU_MBIST_Type LPMCU_MBIST;    /**< Offset: 0x1C (R/W   8) MBIST designation */
  __I  uint8_t                        Reserved3[3];
  __IO LPMCU_MISC_REGS_BLE_CTRL_Type  BLE_CTRL;       /**< Offset: 0x20 (R/W   8) BLE Control */
  __I  uint8_t                        Reserved4[3];
  __IO LPMCU_MISC_REGS_MBIST_CTRL_Type MBIST_CTRL;     /**< Offset: 0x24 (R/W  32) MBIST Control Register */
  __I  LPMCU_MISC_REGS_MBIST_STATUS_Type MBIST_STATUS;   /**< Offset: 0x28 (R/   32) MBIST Status Register */
  __IO LPMCU_MISC_REGS_MBIST_SRAM_ALG_SEL_Type MBIST_SRAM_ALG_SEL; /**< Offset: 0x2C (R/W  16) Enables MBIST algorithms */
  __I  uint8_t                        Reserved5[2];
  __IO LPMCU_MISC_REGS_MBIST_BG_Type  MBIST_BG;       /**< Offset: 0x30 (R/W  32) MBIST Background for MARCH2 algorithm (bits 31:0) */
  __I  uint32_t                       Reserved6[1];
  __IO LPMCU_MISC_REGS_TEST_BUS_CTRL_Type TEST_BUS_CTRL;  /**< Offset: 0x38 (R/W   8) Controls all of the test bus functionality */
  __I  uint8_t                        Reserved7[3];
  __I  LPMCU_MISC_REGS_WP3_MISR_DATAOUT_Type WP3_MISR_DATAOUT; /**< Offset: 0x3C (R/   32) ROM MBIST Signature */
  __IO LPMCU_MISC_REGS_INVERT_OUTPUT_CTRL_Type INVERT_OUTPUT_CTRL; /**< Offset: 0x40 (R/W  32) Invert Output Control */
  __IO LPMCU_MISC_REGS_PINMUX_SEL_0_Type PINMUX_SEL_0;   /**< Offset: 0x44 (R/W  32) Pinmux select for LP_GPIO_0, LP_GPIO_1, LP_GPIO_2, LP_GPIO_3, LP_GPIO_4, LP_GPIO_5, LP_GPIO_6, LP_GPIO_7 */
  __IO LPMCU_MISC_REGS_PINMUX_SEL_1_Type PINMUX_SEL_1;   /**< Offset: 0x48 (R/W  32) Pinmux select for LP_GPIO_8, LP_GPIO_9, LP_GPIO_10, LP_GPIO_11, LP_GPIO_12, LP_GPIO_13, LP_GPIO_14, LP_GPIO_15 */
  __IO LPMCU_MISC_REGS_PINMUX_SEL_2_Type PINMUX_SEL_2;   /**< Offset: 0x4C (R/W  32) Pinmux select for LP_GPIO_16, LP_GPIO_17, LP_GPIO_18, LP_GPIO_19, LP_GPIO_20, LP_GPIO_21, LP_GPIO_22, LP_GPIO_23 */
  __IO LPMCU_MISC_REGS_PULL_ENABLE_Type PULL_ENABLE;    /**< Offset: 0x50 (R/W  32) Active Low Pull Enables for LPMCU Pads */
  __IO LPMCU_MISC_REGS_RTYPE_PAD_0_Type RTYPE_PAD_0;    /**< Offset: 0x54 (R/W  32) Controls the RTYPE (Pull Level) pad value for LPMCU Pads (0 = Pull Up) */
  __I  uint32_t                       Reserved8[4];
  __IO LPMCU_MISC_REGS_PINMUX_SEL_3_Type PINMUX_SEL_3;   /**< Offset: 0x68 (R/W  32) Pinmux select for LP_SIP_0, LP_SIP_1, LP_SIP_2, LP_SIP_3, LP_SIP_4 */
  __IO LPMCU_MISC_REGS_ISHAPE_PAD_3_Type ISHAPE_PAD_3;   /**< Offset: 0x6C (R/W  32) Controls the ISHAPE pad value for LPMCU SIP Pads */
  __I  uint32_t                       Reserved9[8];
  __IO LPMCU_MISC_REGS_LPMCU_CTRL_2_Type LPMCU_CTRL_2;   /**< Offset: 0x90 (R/W   8) Misc control for the LPMCU */
  __I  uint8_t                        Reserved10[15];
  __IO LPMCU_MISC_REGS_SPIFLASH_VDDIO_CTRL_Type SPIFLASH_VDDIO_CTRL; /**< Offset: 0xA0 (R/W   8) Control for VDDIO of SPI FLASH */
  __I  uint8_t                        Reserved11[3];
  __IO LPMCU_MISC_REGS_SPIFLASH_BYPASS_Type SPIFLASH_BYPASS; /**< Offset: 0xA4 (R/W   8) SPI FLASH Bypass */
  __I  uint8_t                        Reserved12[27];
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_0_Type IRQ_MUX_IO_SEL_0; /**< Offset: 0xC0 (R/W  32) ARM Cortex IRQ Mux Selection */
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_1_Type IRQ_MUX_IO_SEL_1; /**< Offset: 0xC4 (R/W  32) ARM Cortex IRQ Mux Selection */
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_2_Type IRQ_MUX_IO_SEL_2; /**< Offset: 0xC8 (R/W  32) ARM Cortex IRQ Mux Selection */
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_3_Type IRQ_MUX_IO_SEL_3; /**< Offset: 0xCC (R/W  32) ARM Cortex IRQ Mux Selection */
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_4_Type IRQ_MUX_IO_SEL_4; /**< Offset: 0xD0 (R/W  32) ARM Cortex IRQ Mux Selection */
  __IO LPMCU_MISC_REGS_IRQ_MUX_IO_SEL_5_Type IRQ_MUX_IO_SEL_5; /**< Offset: 0xD4 (R/W   8) ARM Cortex IRQ Mux Selection */
  __I  uint8_t                        Reserved13[139];
  __IO LPMCU_MISC_REGS_PWM0_CTRL_Type PWM0_CTRL;      /**< Offset: 0x160 (R/W  32) PWM0 Control Register */
  __IO LPMCU_MISC_REGS_PWM1_CTRL_Type PWM1_CTRL;      /**< Offset: 0x164 (R/W  32) PWM1 Control Register */
  __IO LPMCU_MISC_REGS_PWM2_CTRL_Type PWM2_CTRL;      /**< Offset: 0x168 (R/W  32) PWM2 Control Register */
  __IO LPMCU_MISC_REGS_PWM3_CTRL_Type PWM3_CTRL;      /**< Offset: 0x16C (R/W  32) PWM3 Control Register */
  __I  LPMCU_MISC_REGS_MBIST_DUAL_STATUS_Type MBIST_DUAL_STATUS; /**< Offset: 0x170 (R/   32) Reflects the status of MBIST from lpmcu and btmcu */
  __I  uint32_t                       Reserved14[5];
  __IO LPMCU_MISC_REGS_DUALTIMER0_CTRL_Type DUALTIMER0_CTRL; /**< Offset: 0x188 (R/W   8) DUALTIMER0 Control */
  __I  uint8_t                        Reserved15[7];
  __IO LPMCU_MISC_REGS_ARM_SLEEP_WAKEUP_CTRL_Type ARM_SLEEP_WAKEUP_CTRL; /**< Offset: 0x190 (R/W  32) Sleep and Wakeup Control for the AON Power Sequencer */
  __I  uint32_t                       Reserved16[3];
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_0_Type MEGA_MUX_IO_SEL_0; /**< Offset: 0x1A0 (R/W  32) Mega Mux Selection */
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_1_Type MEGA_MUX_IO_SEL_1; /**< Offset: 0x1A4 (R/W  32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_2_Type MEGA_MUX_IO_SEL_2; /**< Offset: 0x1A8 (R/W  32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_3_Type MEGA_MUX_IO_SEL_3; /**< Offset: 0x1AC (R/W  32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_4_Type MEGA_MUX_IO_SEL_4; /**< Offset: 0x1B0 (R/W  32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  __IO LPMCU_MISC_REGS_MEGA_MUX_IO_SEL_5_Type MEGA_MUX_IO_SEL_5; /**< Offset: 0x1B4 (R/W  32) Mega Mux Selection (Refer to Mega_Mux_IO Spreadsheet) */
  __I  uint32_t                       Reserved17[2];
  __IO LPMCU_MISC_REGS_SENS_ADC_CLK_CTRL_Type SENS_ADC_CLK_CTRL; /**< Offset: 0x1C0 (R/W  32) Clock control for the Sensor ADC */
  __I  LPMCU_MISC_REGS_SENS_ADC_RAW_STATUS_Type SENS_ADC_RAW_STATUS; /**< Offset: 0x1C4 (R/   32) Raw Status from the Sensor ADC */
  __I  LPMCU_MISC_REGS_SENS_ADC_CH0_DATA_Type SENS_ADC_CH0_DATA; /**< Offset: 0x1C8 (R/   16) Current data of the Sensor ADC for Channel 0 */
  __I  uint8_t                        Reserved18[2];
  __I  LPMCU_MISC_REGS_SENS_ADC_CH1_DATA_Type SENS_ADC_CH1_DATA; /**< Offset: 0x1CC (R/   16) Current data of the Sensor ADC for Channel 1 */
  __I  uint8_t                        Reserved19[2];
  __I  LPMCU_MISC_REGS_SENS_ADC_CH2_DATA_Type SENS_ADC_CH2_DATA; /**< Offset: 0x1D0 (R/   16) Current data of the Sensor ADC for Channel 2 */
  __I  uint8_t                        Reserved20[2];
  __I  LPMCU_MISC_REGS_SENS_ADC_CH3_DATA_Type SENS_ADC_CH3_DATA; /**< Offset: 0x1D4 (R/   16) Current data of the Sensor ADC for Channel 3 */
  __I  uint8_t                        Reserved21[18];
  __IO LPMCU_MISC_REGS_IRQ_CTRL_Type  IRQ_CTRL;       /**< Offset: 0x1E8 (R/W  16) Configure the IRQ inputs to the system as either Rising Edge or Level Shift */
  __I  uint8_t                        Reserved22[2];
  __I  LPMCU_MISC_REGS_IRQ_STS_Type   IRQ_STS;        /**< Offset: 0x1EC (R/    8) Read the raw (no level or rise detect) IRQ inputs to the system from the designated cores */
  __I  uint8_t                        Reserved23[19];
  __IO LPMCU_MISC_REGS_MSEMI_MEM_CTRL_Type MSEMI_MEM_CTRL; /**< Offset: 0x200 (R/W  32) Control the rwm, rm and wm on the Mobile Semi Memories */
  __IO LPMCU_MISC_REGS_EFUSE_1_STATUS_3_Type EFUSE_1_STATUS_3; /**< Offset: 0x204 (R/W  32) EFUSE_1_3 Status */
  __I  uint32_t                       Reserved24[2];
  __IO LPMCU_MISC_REGS_LPMCU_FORCE_CTRL_Type LPMCU_FORCE_CTRL; /**< Offset: 0x210 (R/W  16) Miscellaneous Force control values for LPMCU */
  __I  uint8_t                        Reserved25[2];
  __I  LPMCU_MISC_REGS_ARM_IRQ_STATUS_0_Type ARM_IRQ_STATUS_0; /**< Offset: 0x214 (R/   32) ARM Cortex M0 IRQ Status */
  __I  LPMCU_MISC_REGS_ARM_IRQ_STATUS_1_Type ARM_IRQ_STATUS_1; /**< Offset: 0x218 (R/   32) ARM Cortex M0 IRQ Status */
  __I  uint32_t                       Reserved26[9];
  __IO LPMCU_MISC_REGS_BLE_DEEP_SLEEP_ENABLES_Type BLE_DEEP_SLEEP_ENABLES; /**< Offset: 0x240 (R/W   8) BLE Deep Sleep Enables */
  __I  uint8_t                        Reserved27[3];
  __IO LPMCU_MISC_REGS_DEEP_SLEEP_HW_TIMER_CORR_Type DEEP_SLEEP_HW_TIMER_CORR; /**< Offset: 0x244 (R/W  32) Configures the HW auto correction algorithm of the fine/base timers after wakeup from deep sleep */
  __I  uint32_t                       Reserved28[3];
  __IO LPMCU_MISC_REGS_REMAP_IDRAM1_BASE_ADDR_Type REMAP_IDRAM1_BASE_ADDR; /**< Offset: 0x254 (R/W  32) ARM Cortex M0 idram 1 remap base addr */
  __IO LPMCU_MISC_REGS_REMAP_IDRAM1_END_ADDR_Type REMAP_IDRAM1_END_ADDR; /**< Offset: 0x258 (R/W  32) ARM Cortex M0 idram 1 remap end addr */
  __IO LPMCU_MISC_REGS_REMAP_IDRAM2_BASE_ADDR_Type REMAP_IDRAM2_BASE_ADDR; /**< Offset: 0x25C (R/W  32) ARM Cortex M0 idram 2 remap base addr */
  __IO LPMCU_MISC_REGS_REMAP_IDRAM2_END_ADDR_Type REMAP_IDRAM2_END_ADDR; /**< Offset: 0x260 (R/W  32) ARM Cortex M0 idram 2 remap end addr */
  __IO LPMCU_MISC_REGS_REMAP_BOOT_BASE_ADDR_Type REMAP_BOOT_BASE_ADDR; /**< Offset: 0x264 (R/W  32) ARM Cortex M0 bootrom remap base addr */
  __IO LPMCU_MISC_REGS_REMAP_BOOT_END_ADDR_Type REMAP_BOOT_END_ADDR; /**< Offset: 0x268 (R/W  32) ARM Cortex M0 bootrom remap end addr */
  __I  uint32_t                       Reserved29[5];
  __I  LPMCU_MISC_REGS_QUAD_DEC_IRQS_Type QUAD_DEC_IRQS;  /**< Offset: 0x280 (R/    8) Reflects the IRQ status of the Quad Decoders */
  __I  uint8_t                        Reserved30[3];
  __I  LPMCU_MISC_REGS_QUAD_DEC0_STATUS_Type QUAD_DEC0_STATUS; /**< Offset: 0x284 (R/   16) Current status of QUAD_DEC0 */
  __I  uint8_t                        Reserved31[2];
  __I  LPMCU_MISC_REGS_QUAD_DEC1_STATUS_Type QUAD_DEC1_STATUS; /**< Offset: 0x288 (R/   16) Current status of QUAD_DEC1 */
  __I  uint8_t                        Reserved32[2];
  __I  LPMCU_MISC_REGS_QUAD_DEC2_STATUS_Type QUAD_DEC2_STATUS; /**< Offset: 0x28C (R/   16) Current status of QUAD_DEC2 */
  __I  uint8_t                        Reserved33[2];
  __IO LPMCU_MISC_REGS_QUAD_DEC0_THRESHOLD_Type QUAD_DEC0_THRESHOLD; /**< Offset: 0x290 (R/W  32) Thresholds for QUAD_DEC0 */
  __IO LPMCU_MISC_REGS_QUAD_DEC0_CTRL_Type QUAD_DEC0_CTRL; /**< Offset: 0x294 (R/W   8) Control for QUAD_DEC0 */
  __I  uint8_t                        Reserved34[11];
  __IO LPMCU_MISC_REGS_QUAD_DEC1_THRESHOLD_Type QUAD_DEC1_THRESHOLD; /**< Offset: 0x2A0 (R/W  32) Thresholds for QUAD_DEC1 */
  __IO LPMCU_MISC_REGS_QUAD_DEC1_CTRL_Type QUAD_DEC1_CTRL; /**< Offset: 0x2A4 (R/W   8) Control for QUAD_DEC1 */
  __I  uint8_t                        Reserved35[11];
  __IO LPMCU_MISC_REGS_QUAD_DEC2_THRESHOLD_Type QUAD_DEC2_THRESHOLD; /**< Offset: 0x2B0 (R/W  32) Thresholds for QUAD_DEC2 */
  __IO LPMCU_MISC_REGS_QUAD_DEC2_CTRL_Type QUAD_DEC2_CTRL; /**< Offset: 0x2B4 (R/W   8) Control for QUAD_DEC2 */
  __I  uint8_t                        Reserved36[11];
  __IO LPMCU_MISC_REGS_FP_COMP0_COMP_Type FP_COMP0_COMP;  /**< Offset: 0x2C0 (R/W  32) Flash Breakpoint Compare Register 0 */
  __IO LPMCU_MISC_REGS_FP_COMP1_COMP_Type FP_COMP1_COMP;  /**< Offset: 0x2C4 (R/W  32) Flash Breakpoint Compare Register 1 */
  __IO LPMCU_MISC_REGS_FP_COMP2_COMP_Type FP_COMP2_COMP;  /**< Offset: 0x2C8 (R/W  32) Flash Breakpoint Compare Register 2 */
  __IO LPMCU_MISC_REGS_FP_COMP3_COMP_Type FP_COMP3_COMP;  /**< Offset: 0x2CC (R/W  32) Flash Breakpoint Compare Register 3 */
  __IO LPMCU_MISC_REGS_FP_COMP4_COMP_Type FP_COMP4_COMP;  /**< Offset: 0x2D0 (R/W  32) Flash Breakpoint Compare Register 4 */
  __IO LPMCU_MISC_REGS_FP_COMP5_COMP_Type FP_COMP5_COMP;  /**< Offset: 0x2D4 (R/W  32) Flash Breakpoint Compare Register 5 */
  __IO LPMCU_MISC_REGS_FP_COMP6_COMP_Type FP_COMP6_COMP;  /**< Offset: 0x2D8 (R/W  32) Flash Breakpoint Compare Register 6 */
  __IO LPMCU_MISC_REGS_FP_COMP7_COMP_Type FP_COMP7_COMP;  /**< Offset: 0x2DC (R/W  32) Flash Breakpoint Compare Register 7 */
  __IO LPMCU_MISC_REGS_FP_COMP8_COMP_Type FP_COMP8_COMP;  /**< Offset: 0x2E0 (R/W  32) Flash Breakpoint Compare Register 8 */
  __IO LPMCU_MISC_REGS_FP_COMP9_COMP_Type FP_COMP9_COMP;  /**< Offset: 0x2E4 (R/W  32) Flash Breakpoint Compare Register 9 */
  __IO LPMCU_MISC_REGS_FP_COMP10_COMP_Type FP_COMP10_COMP; /**< Offset: 0x2E8 (R/W  32) Flash Breakpoint Compare Register 10 */
  __IO LPMCU_MISC_REGS_FP_COMP11_COMP_Type FP_COMP11_COMP; /**< Offset: 0x2EC (R/W  32) Flash Breakpoint Compare Register 11 */
  __IO LPMCU_MISC_REGS_FP_COMP12_COMP_Type FP_COMP12_COMP; /**< Offset: 0x2F0 (R/W  32) Flash Breakpoint Compare Register 12 */
  __IO LPMCU_MISC_REGS_FP_COMP13_COMP_Type FP_COMP13_COMP; /**< Offset: 0x2F4 (R/W  32) Flash Breakpoint Compare Register 13 */
  __IO LPMCU_MISC_REGS_FP_COMP14_COMP_Type FP_COMP14_COMP; /**< Offset: 0x2F8 (R/W  32) Flash Breakpoint Compare Register 14 */
  __IO LPMCU_MISC_REGS_FP_COMP15_COMP_Type FP_COMP15_COMP; /**< Offset: 0x2FC (R/W  32) Flash Breakpoint Compare Register 15 */
  __IO LPMCU_MISC_REGS_FP_COMP0_REPLACE_Type FP_COMP0_REPLACE; /**< Offset: 0x300 (R/W  32) Flash Breakpoint Replace Register 0 */
  __IO LPMCU_MISC_REGS_FP_COMP1_REPLACE_Type FP_COMP1_REPLACE; /**< Offset: 0x304 (R/W  32) Flash Breakpoint Replace Register 1 */
  __IO LPMCU_MISC_REGS_FP_COMP2_REPLACE_Type FP_COMP2_REPLACE; /**< Offset: 0x308 (R/W  32) Flash Breakpoint Replace Register 2 */
  __IO LPMCU_MISC_REGS_FP_COMP3_REPLACE_Type FP_COMP3_REPLACE; /**< Offset: 0x30C (R/W  32) Flash Breakpoint Replace Register 3 */
  __IO LPMCU_MISC_REGS_FP_COMP4_REPLACE_Type FP_COMP4_REPLACE; /**< Offset: 0x310 (R/W  32) Flash Breakpoint Replace Register 4 */
  __IO LPMCU_MISC_REGS_FP_COMP5_REPLACE_Type FP_COMP5_REPLACE; /**< Offset: 0x314 (R/W  32) Flash Breakpoint Replace Register 5 */
  __IO LPMCU_MISC_REGS_FP_COMP6_REPLACE_Type FP_COMP6_REPLACE; /**< Offset: 0x318 (R/W  32) Flash Breakpoint Replace Register 6 */
  __IO LPMCU_MISC_REGS_FP_COMP7_REPLACE_Type FP_COMP7_REPLACE; /**< Offset: 0x31C (R/W  32) Flash Breakpoint Replace Register 7 */
  __IO LPMCU_MISC_REGS_FP_COMP8_REPLACE_Type FP_COMP8_REPLACE; /**< Offset: 0x320 (R/W  32) Flash Breakpoint Replace Register 8 */
  __IO LPMCU_MISC_REGS_FP_COMP9_REPLACE_Type FP_COMP9_REPLACE; /**< Offset: 0x324 (R/W  32) Flash Breakpoint Replace Register 9 */
  __IO LPMCU_MISC_REGS_FP_COMP10_REPLACE_Type FP_COMP10_REPLACE; /**< Offset: 0x328 (R/W  32) Flash Breakpoint Replace Register 10 */
  __IO LPMCU_MISC_REGS_FP_COMP11_REPLACE_Type FP_COMP11_REPLACE; /**< Offset: 0x32C (R/W  32) Flash Breakpoint Replace Register 11 */
  __IO LPMCU_MISC_REGS_FP_COMP12_REPLACE_Type FP_COMP12_REPLACE; /**< Offset: 0x330 (R/W  32) Flash Breakpoint Replace Register 12 */
  __IO LPMCU_MISC_REGS_FP_COMP13_REPLACE_Type FP_COMP13_REPLACE; /**< Offset: 0x334 (R/W  32) Flash Breakpoint Replace Register 13 */
  __IO LPMCU_MISC_REGS_FP_COMP14_REPLACE_Type FP_COMP14_REPLACE; /**< Offset: 0x338 (R/W  32) Flash Breakpoint Replace Register 14 */
  __IO LPMCU_MISC_REGS_FP_COMP15_REPLACE_Type FP_COMP15_REPLACE; /**< Offset: 0x33C (R/W  32) Flash Breakpoint Replace Register 14 */
  __IO LPMCU_MISC_REGS_FP_COMP_ENABLE_Type FP_COMP_ENABLE; /**< Offset: 0x340 (R/W  16) Flash Breakpoint Enable Register */
  __I  uint8_t                        Reserved37[206];
  __I  LPMCU_MISC_REGS_PMU_READ_REGS_Type PMU_READ_REGS;  /**< Offset: 0x410 (R/   32) PMU Status Registers */
  __IO LPMCU_MISC_REGS_MS_GPIO_Type   MS_GPIO;        /**< Offset: 0x414 (R/W   8) Control for Mixed Signal GPIOs */
  __I  uint8_t                        Reserved38[11];
  __I  LPMCU_MISC_REGS_AON_SLEEP_TIMER_COUNTER_Type AON_SLEEP_TIMER_COUNTER; /**< Offset: 0x420 (R/   32) Current value of the AON Sleep Timer (syncd to ARM clock) */
} LpmcuMiscRegs;

#else /* COMPONENT_TYPEDEF_STYLE */
#error Unknown component typedef style
#endif /* COMPONENT_TYPEDEF_STYLE */

#endif /* !(defined(__ASSEMBLER__) || defined(__IAR_SYSTEMS_ASM__)) */
/** @}  end of LPMCU Misc Registers */

#endif /* _SAMB11_LPMCU_MISC_REGS_COMPONENT_H_ */
